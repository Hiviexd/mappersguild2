(self.webpackChunkmappersguild=self.webpackChunkmappersguild||[]).push([[999],{8999:(t,e,s)=>{"use strict";s.d(e,{Z:()=>p});var i=function(){var t=this,e=t.$createElement,s=t._self._c||e;return s("modal-dialog",{attrs:{id:"editQuest"},scopedSlots:t._u([{key:"header",fn:function(){return[t._v("\n        "+t._s(t.quest.name)+" by\n        "),t.quest.creator?s("a",{staticClass:"text-dark",attrs:{href:"https://osu.ppy.sh/users/"+t.quest.creator.osuId,target:"_blank"}},[t._v("\n            "+t._s(t.quest.creator.username)+"\n        ")]):t._e()]},proxy:!0}])},[t._v(" "),s("p",[s("button",{staticClass:"btn btn-sm btn-outline-info",on:{click:function(e){return t.renameQuest(e)}}},[t._v("\n            Rename quest\n        ")]),t._v(" "),s("input",{directives:[{name:"model",rawName:"v-model",value:t.renameQuestName,expression:"renameQuestName"}],staticClass:"form-control form-control-sm mx-2 w-50",attrs:{type:"text",autocomplete:"off",placeholder:"quest name..."},domProps:{value:t.renameQuestName},on:{input:function(e){e.target.composing||(t.renameQuestName=e.target.value)}}})]),t._v(" "),s("p",[s("button",{staticClass:"btn btn-sm btn-outline-info",on:{click:function(e){return t.updatePrice(e)}}},[t._v("\n            Update price\n        ")]),t._v(" "),s("input",{directives:[{name:"model",rawName:"v-model",value:t.price,expression:"price"}],staticClass:"form-control form-control-sm mx-2 w-50",attrs:{type:"text",autocomplete:"off",placeholder:"price..."},domProps:{value:t.price},on:{input:function(e){e.target.composing||(t.price=e.target.value)}}})]),t._v(" "),s("p",[s("button",{staticClass:"btn btn-sm btn-outline-info",on:{click:function(e){return t.updateRequiredMapsets(e)}}},[t._v("\n            Update required mapsets\n        ")]),t._v(" "),s("input",{directives:[{name:"model",rawName:"v-model",value:t.requiredMapsets,expression:"requiredMapsets"}],staticClass:"form-control form-control-sm mx-2 w-50",attrs:{type:"text",autocomplete:"off",placeholder:"required mapsets..."},domProps:{value:t.requiredMapsets},on:{input:function(e){e.target.composing||(t.requiredMapsets=e.target.value)}}})]),t._v(" "),s("p",[s("button",{staticClass:"btn btn-sm btn-outline-info",on:{click:function(e){return t.updateMinParty(e)}}},[t._v("\n            Update minParty\n        ")]),t._v(" "),s("input",{directives:[{name:"model",rawName:"v-model",value:t.minParty,expression:"minParty"}],staticClass:"form-control form-control-sm mx-2 w-50",attrs:{type:"text",autocomplete:"off",placeholder:"minParty..."},domProps:{value:t.minParty},on:{input:function(e){e.target.composing||(t.minParty=e.target.value)}}})]),t._v(" "),s("p",[s("button",{staticClass:"btn btn-sm btn-outline-info",on:{click:function(e){return t.updateMaxParty(e)}}},[t._v("\n            Update maxParty\n        ")]),t._v(" "),s("input",{directives:[{name:"model",rawName:"v-model",value:t.maxParty,expression:"maxParty"}],staticClass:"form-control form-control-sm mx-2 w-50",attrs:{type:"text",autocomplete:"off",placeholder:"maxParty..."},domProps:{value:t.maxParty},on:{input:function(e){e.target.composing||(t.maxParty=e.target.value)}}})]),t._v(" "),s("p",[s("button",{staticClass:"btn btn-sm btn-outline-info",on:{click:function(e){return t.updateDescription(e)}}},[t._v("\n            Update description\n        ")])]),t._v(" "),s("p",[s("textarea",{directives:[{name:"model",rawName:"v-model",value:t.description,expression:"description"}],staticClass:"form-control form-control-sm mx-2 mt-2 w-100",attrs:{type:"text",autocomplete:"off",placeholder:"quest description..."},domProps:{value:t.description},on:{input:function(e){e.target.composing||(t.description=e.target.value)}}})]),t._v(" "),"wip"==t.quest.status?[s("p",[s("button",{staticClass:"btn btn-sm btn-outline-danger",on:{click:function(e){return t.dropQuest(e)}}},[t._v("\n                Drop quest\n            ")])]),t._v(" "),s("p",[s("button",{staticClass:"btn btn-sm btn-outline-success",on:{click:function(e){return t.completeQuest(e)}}},[t._v("\n                Complete quest\n            ")])]),t._v(" "),s("p",[s("button",{staticClass:"btn btn-sm btn-outline-info",on:{click:function(e){return t.resetQuestDeadline(e)}}},[t._v("\n                Reset quest deadline\n            ")])])]:t._e(),t._v(" "),s("p",[s("button",{staticClass:"btn btn-sm btn-outline-info",on:{click:function(e){return t.duplicateQuest(e)}}},[t._v("\n            Duplicate quest\n        ")]),t._v(" "),s("input",{directives:[{name:"model",rawName:"v-model",value:t.duplicateQuestName,expression:"duplicateQuestName"}],staticClass:"form-control form-control-sm mx-2 w-50",attrs:{type:"text",autocomplete:"off",placeholder:"new quest name..."},domProps:{value:t.duplicateQuestName},on:{input:function(e){e.target.composing||(t.duplicateQuestName=e.target.value)}}})]),t._v(" "),s("p",[s("button",{staticClass:"btn btn-sm btn-outline-info",on:{click:function(e){return t.updateExpiration(e)}}},[t._v("\n            Set expiration date\n        ")]),t._v(" "),s("input",{directives:[{name:"model",rawName:"v-model",value:t.expiration,expression:"expiration"}],staticClass:"form-control form-control-sm mx-2 w-50",attrs:{type:"text",autocomplete:"off",placeholder:t.quest.expiration},domProps:{value:t.expiration},on:{input:function(e){e.target.composing||(t.expiration=e.target.value)}}}),t._v(" "+t._s(t.quest.isExpired)+"\n    ")]),t._v(" "),s("p",[s("a",{attrs:{href:"#"},on:{click:function(e){return e.preventDefault(),t.toggleQuestMode("osu")}}},[s("i",{staticClass:"fas fa-circle",class:t.quest.modes.includes("osu")?"":"text-white-50",attrs:{"data-toggle":"tooltip","data-placement":"top",title:"toggle osu!"}})]),t._v(" "),s("a",{attrs:{href:"#"},on:{click:function(e){return e.preventDefault(),t.toggleQuestMode("taiko")}}},[s("i",{staticClass:"fas fa-drum",class:t.quest.modes.includes("taiko")?"":"text-white-50",attrs:{"data-toggle":"tooltip","data-placement":"top",title:"toggle osu!taiko"}})]),t._v(" "),s("a",{attrs:{href:"#"},on:{click:function(e){return e.preventDefault(),t.toggleQuestMode("catch")}}},[s("i",{staticClass:"fas fa-apple-alt",class:t.quest.modes.includes("catch")?"":"text-white-50",attrs:{"data-toggle":"tooltip","data-placement":"top",title:"toggle osu!catch"}})]),t._v(" "),s("a",{attrs:{href:"#"},on:{click:function(e){return e.preventDefault(),t.toggleQuestMode("mania")}}},[s("i",{staticClass:"fas fa-stream",class:t.quest.modes.includes("mania")?"":"text-white-50",attrs:{"data-toggle":"tooltip","data-placement":"top",title:"toggle osu!mania"}})])]),t._v(" "),"done"==t.quest.status||"wip"==t.quest.status?s("associated-beatmaps",{staticClass:"mb-4",attrs:{"associated-maps":t.quest.associatedMaps}}):t._e(),t._v(" "),s("p",[s("button",{staticClass:"btn btn-sm btn-outline-danger",on:{click:function(e){return t.deleteQuest(e)}}},[t._v("\n            Delete quest\n        ")])])],2)};i._withStripped=!0;var a=s(2934),o=s.n(a),n=s(1515),r=s(5871),u=function(t,e,s,i){return new(s||(s=Promise))((function(a,o){function n(t){try{u(i.next(t))}catch(t){o(t)}}function r(t){try{u(i.throw(t))}catch(t){o(t)}}function u(t){var e;t.done?a(t.value):(e=t.value,e instanceof s?e:new s((function(t){t(e)}))).then(n,r)}u((i=i.apply(t,e||[])).next())}))};const d=o().extend({name:"QuestInfo",components:{AssociatedBeatmaps:r.Z,ModalDialog:n.Z},props:{quest:{type:Object,required:!0}},data(){return{renameQuestName:this.quest.name,price:this.quest.price,requiredMapsets:this.quest.requiredMapsets,minParty:this.quest.minParty,maxParty:this.quest.maxParty,description:this.quest.descriptionMain,duplicateQuestName:this.quest.name,expiration:this.quest.expiration?this.quest.expiration.toString():""}},watch:{quest(){this.renameQuestName=this.quest.name,this.price=this.quest.price,this.requiredMapsets=this.quest.requiredMapsets,this.minParty=this.quest.minParty,this.maxParty=this.quest.maxParty,this.description=this.quest.descriptionMain,this.duplicateQuestName=this.quest.name,this.expiration=this.quest.expiration?this.quest.expiration.toString():""}},methods:{renameQuest(t){return u(this,void 0,void 0,(function*(){const e=yield this.executePost(`/admin/quests/${this.quest.id}/rename`,{name:this.renameQuestName},t);this.isError(e)||(this.$store.dispatch("updateToastMessages",{message:"renamed quest",type:"info"}),this.$store.commit("renameQuest",{questId:this.quest.id,name:e}))}))},updatePrice(t){return u(this,void 0,void 0,(function*(){const e=yield this.executePost(`/admin/quests/${this.quest.id}/updatePrice`,{price:this.price},t);this.isError(e)||(this.$store.dispatch("updateToastMessages",{message:"updated price",type:"info"}),this.$store.commit("updatePrice",{questId:this.quest.id,price:e}))}))},updateRequiredMapsets(t){return u(this,void 0,void 0,(function*(){const e=yield this.executePost(`/admin/quests/${this.quest.id}/updateRequiredMapsets`,{requiredMapsets:this.requiredMapsets},t);this.isError(e)||(this.$store.dispatch("updateToastMessages",{message:"updated required mapsets",type:"info"}),this.$store.commit("updateRequiredMapsets",{questId:this.quest.id,requiredMapsets:e}))}))},updateDescription(t){return u(this,void 0,void 0,(function*(){const e=yield this.executePost(`/admin/quests/${this.quest.id}/updateDescription/`,{description:this.description},t);this.isError(e)||(this.$store.dispatch("updateToastMessages",{message:"updated quest description",type:"info"}),this.$store.commit("updateDescription",{questId:this.quest.id,description:e}))}))},dropQuest(t){return u(this,void 0,void 0,(function*(){const e=yield this.executePost(`/admin/quests/${this.quest.id}/drop`,{},t);this.isError(e)||(this.$store.dispatch("updateToastMessages",{message:"quest force dropped",type:"info"}),this.$store.commit("quests/updateQuest",e))}))},completeQuest(t){return u(this,void 0,void 0,(function*(){const e=yield this.executePost(`/admin/quests/${this.quest.id}/complete`,{},t);this.isError(e)||(this.$store.dispatch("updateToastMessages",{message:"quest marked as complete",type:"info"}),this.$store.commit("quests/updateQuest",e))}))},duplicateQuest(t){return u(this,void 0,void 0,(function*(){const e=yield this.executePost(`/admin/quests/${this.quest.id}/duplicate`,{name:this.duplicateQuestName},t);this.isError(e)||(this.$store.dispatch("updateToastMessages",{message:"quest duplicated",type:"info"}),this.$store.commit("addQuest",{quest:e}))}))},resetQuestDeadline(t){return u(this,void 0,void 0,(function*(){const e=yield this.executePost(`/admin/quests/${this.quest.id}/reset`,{},t);this.isError(e)||(this.$store.dispatch("updateToastMessages",{message:`reset quest deadline to ${e}`,type:"info"}),this.$store.commit("resetQuestDeadline",{questId:this.quest.id,deadline:e}))}))},deleteQuest(t){return u(this,void 0,void 0,(function*(){if(confirm("Are you sure?")){const e=yield this.executePost(`/admin/quests/${this.quest.id}/delete`,{},t);this.isError(e)||($("#editQuest").modal("hide"),this.$store.dispatch("updateToastMessages",{message:"quest deleted",type:"info"}),this.$store.commit("deleteQuest",{questId:this.quest.id}))}}))},toggleQuestMode(t){return u(this,void 0,void 0,(function*(){const e=yield this.executePost(`/admin/quests/${this.quest.id}/toggleMode`,{mode:t});this.isError(e)||(this.$store.dispatch("updateToastMessages",{message:"changed quest modes",type:"info"}),this.$store.commit("quests/updateQuest",e))}))},updateExpiration(t){return u(this,void 0,void 0,(function*(){const e=yield this.executePost(`/admin/quests/${this.quest.id}/updateExpiration/`,{expiration:this.expiration},t);this.isError(e)||(this.$store.dispatch("updateToastMessages",{message:"updated quest expiration",type:"info"}),this.$store.commit("updateExpiration",{questId:this.quest.id,expiration:e}))}))},updateMinParty(t){return u(this,void 0,void 0,(function*(){const e=yield this.executePost(`/admin/quests/${this.quest.id}/updateMinParty/`,{minParty:this.minParty},t);this.isError(e)||(this.$store.dispatch("updateToastMessages",{message:"updated minParty",type:"info"}),this.$store.commit("updateMinParty",{questId:this.quest.id,minParty:e}))}))},updateMaxParty(t){return u(this,void 0,void 0,(function*(){const e=yield this.executePost(`/admin/quests/${this.quest.id}/updateMaxParty/`,{maxParty:this.maxParty},t);this.isError(e)||(this.$store.dispatch("updateToastMessages",{message:"updated maxParty",type:"info"}),this.$store.commit("updateMaxParty",{questId:this.quest.id,maxParty:e}))}))}}});var c=(0,s(1900).Z)(d,i,[],!1,null,null,null);c.options.__file="src/components/admin/quests/QuestInfo.vue";const p=c.exports}}]);
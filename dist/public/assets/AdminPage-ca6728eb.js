import{d as M,_ as Q,o as n,c as I,w as y,h as p,t as u,k as w,a as e,l as g,e as r,b as f,A as b,i as h,y as F,z as R,M as j,m as N,q as c,F as v,r as k,n as q,s as D}from"./index-3c4a2e8e.js";import{B as O}from"./BeatmapInfoAdmin-382e7cf4.js";import{Q as V}from"./QuestInfo-9f92dcc4.js";import{M as U}from"./ModalDialog-50371956.js";import{C as z}from"./CopyPaste-afb653c9.js";import{U as G}from"./UserInfo-9278c4f5.js";import{B as K}from"./beatmap-c2b9f550.js";import{U as H}from"./UserLinkList-1c0874a0.js";import"./AssociatedBeatmaps-a1bf6120.js";const J=M({name:"ReviewQuest",components:{CopyPaste:z,ModalDialog:U},props:{quest:{type:Object,required:!0}},data(){return{showArtistInput:!1,artistInput:this.quest.art,showNameInput:!1,nameInput:this.quest.name,showObjectiveInput:!1,objectiveInput:this.quest.descriptionMain,showRequiredMapsetsInput:!1,requiredMapsetsInput:this.quest.requiredMapsets,showPriceInput:!1,priceInput:this.quest.price,showTimeframeInput:!1,timeframeInput:this.quest.timeframe/(24*3600*1e3),showPartySizeInput:!1,minPartyInput:this.quest.minParty,maxPartyInput:this.quest.maxParty}},watch:{quest(){this.showArtistInput=!1,this.artistInput=this.quest.art,this.showNameInput=!1,this.nameInput=this.quest.name,this.showObjectiveInput=!1,this.objectiveInput=this.quest.descriptionMain,this.showRequiredMapsetsInput=!1,this.requiredMapsetsInput=this.quest.requiredMapsets,this.showPriceInput=!1,this.priceInput=this.quest.price,this.showTimeframeInput=!1,this.timeframeInput=this.quest.timeframe/(24*3600*1e3)}},methods:{async acceptPendingQuest(t){const s=await this.$http.executePost(`/admin/quests/${this.quest.id}/schedule`,{},t);this.$http.isError(s)||(this.$store.dispatch("updateToastMessages",{message:"scheduled quest",type:"info"}),this.$store.commit("updateStatus",{questId:this.quest.id,status:s}),this.$bs.hideModal("reviewQuest"))},async rejectPendingQuest(t){const s=await this.$http.executePost(`/admin/quests/${this.quest.id}/reject`,{},t);this.$http.isError(s)||(this.$store.dispatch("updateToastMessages",{message:"rejected quest",type:"info"}),this.$store.commit("updateStatus",{questId:this.quest.id,status:s}),this.$bs.hideModal("reviewQuest"))},async updateArt(t){const s=await this.$http.executePost(`/admin/quests/${this.quest.id}/updateArt`,{art:this.artistInput},t);this.$http.isError(s)||(this.$store.dispatch("updateToastMessages",{message:"updated artist",type:"info"}),this.$store.commit("updateArt",{questId:this.quest.id,art:s}),this.showArtistInput=!1)},async renameQuest(t){const s=await this.$http.executePost(`/admin/quests/${this.quest.id}/rename`,{name:this.nameInput},t);this.$http.isError(s)||(this.$store.dispatch("updateToastMessages",{message:"renamed quest",type:"info"}),this.$store.commit("renameQuest",{questId:this.quest.id,name:s}),this.showNameInput=!1)},async updateDescription(t){const s=await this.$http.executePost(`/admin/quests/${this.quest.id}/updateDescription/`,{description:this.objectiveInput},t);this.$http.isError(s)||(this.$store.dispatch("updateToastMessages",{message:"updated quest description",type:"info"}),this.$store.commit("updateDescription",{questId:this.quest.id,description:s}),this.showObjectiveInput=!1)},async updateRequiredMapsets(t){const s=await this.$http.executePost(`/admin/quests/${this.quest.id}/updateRequiredMapsets`,{requiredMapsets:this.requiredMapsetsInput},t);this.$http.isError(s)||(this.$store.dispatch("updateToastMessages",{message:"updated required mapsets",type:"info"}),this.$store.commit("updateRequiredMapsets",{questId:this.quest.id,requiredMapsets:s}),this.showRequiredMapsetsInput=!1)},async updatePrice(t){const s=await this.$http.executePost(`/admin/quests/${this.quest.id}/updatePrice`,{price:this.priceInput},t);this.$http.isError(s)||(this.$store.dispatch("updateToastMessages",{message:"updated price",type:"info"}),this.$store.commit("updatePrice",{questId:this.quest.id,price:s}),this.showPriceInput=!1)},async updateTimeframe(t){const s=await this.$http.executePost(`/admin/quests/${this.quest.id}/updateTimeframe`,{timeframe:this.timeframeInput},t);this.$http.isError(s)||(this.$store.dispatch("updateToastMessages",{message:"updated timeframe",type:"info"}),this.$store.commit("updateTimeframe",{questId:this.quest.id,timeframe:s}),this.showTimeframeInput=!1)},async updateMinParty(t){const s=await this.$http.executePost(`/admin/quests/${this.quest.id}/updateMinParty`,{minParty:this.minPartyInput},t);this.$http.isError(s)||(this.$store.dispatch("updateToastMessages",{message:"updated minParty",type:"info"}),this.$store.commit("updateMinParty",{questId:this.quest.id,minParty:s}),this.showPartySizeInput=!1)},async updateMaxParty(t){const s=await this.$http.executePost(`/admin/quests/${this.quest.id}/updateMaxParty`,{maxParty:this.maxPartyInput},t);this.$http.isError(s)||(this.$store.dispatch("updateToastMessages",{message:"updated maxParty",type:"info"}),this.$store.commit("updateMaxParty",{questId:this.quest.id,maxParty:s}),this.showPartySizeInput=!1)}}});const l=t=>(F("data-v-eec952e6"),t=t(),R(),t),W={class:"container"},X={class:"small text-white-50"},Y=l(()=>e("i",{class:"fas fa-edit"},null,-1)),Z=[Y],x={key:0},tt={key:1,class:"ms-2"},st=["href"],et=["src"],ot={key:2,class:"ms-2"},it={class:"small text-white-50"},nt=l(()=>e("i",{class:"fas fa-edit"},null,-1)),at=[nt],dt={key:3},rt={key:4,class:"ms-2"},ut={class:"small text-white-50"},ct=l(()=>e("i",{class:"fas fa-edit"},null,-1)),lt=[ct],pt={key:5},mt={key:6,class:"ms-2"},ht={class:"small text-white-50"},ft=l(()=>e("i",{class:"fas fa-edit"},null,-1)),gt=[ft],$t={key:7},bt={key:8,class:"ms-2"},It={class:"small text-white-50"},_t=l(()=>e("i",{class:"fas fa-edit"},null,-1)),wt=[_t],qt={key:9},yt={key:10,class:"ms-2"},vt={class:"small text-white-50"},kt=l(()=>e("i",{class:"fas fa-edit"},null,-1)),Ct=[kt],At={key:11},Pt={key:12,class:"ms-2"},Mt={class:"small text-white-50"},Qt=l(()=>e("i",{class:"fas fa-edit"},null,-1)),Bt=[Qt],Ut={key:13},Tt={key:14,class:"ms-2"},Et=l(()=>e("div",{class:"small text-white-50"}," Party rank ",-1)),Lt={class:"ms-2"},St=l(()=>e("div",{class:"small text-white-50"}," MBC ",-1)),Ft={class:"ms-2"},Rt=l(()=>e("div",{class:"radial-divisor"},null,-1)),jt=l(()=>e("button",{class:"btn btn-outline-secondary w-100","data-bs-toggle":"collapse","data-bs-target":"#forumPm"},[p(" See rejection message "),e("i",{class:"fas fa-angle-down"})],-1)),Nt={id:"forumPm",class:"collapse"},Dt=l(()=>e("div",null,"hello, you're receiving this message because you submitted a Mappers' Guild quest for review",-1)),Ot=l(()=>e("div",null,"[box=your quest info]",-1)),Vt=l(()=>e("div",null,"[/box]",-1)),zt=l(()=>e("div",null,"your quest has been rejected for the following reason(s):",-1)),Gt=l(()=>e("div",null,"[notice] REASONS [/notice]",-1)),Kt=l(()=>e("div",null,`points spent for submitting the quest have been returned to your "available points" pool. if you'd like to modify the quest according to above feedback, you can resubmit it and i'll review it again! or if you'd like to submit any other quest, that's fine too!`,-1)),Ht=l(()=>e("div",null,"thanks for being cool",-1));function Jt(t,s,o,i,m,B){const _=h("user-link"),$=h("copy-paste"),C=h("modal-dialog");return n(),I(C,{id:"reviewQuest",loaded:Boolean(t.quest)},{header:y(()=>[p(u(t.quest.name)+" by ",1),w(_,{class:"text-dark",user:t.quest.creator},null,8,["user"])]),default:y(()=>[e("div",W,[e("div",X,[p(" Artist "),e("a",{href:"#",onClick:s[0]||(s[0]=g(d=>t.showArtistInput=!t.showArtistInput,["prevent"]))},Z)]),t.showArtistInput?(n(),r("p",x,[f(e("input",{"onUpdate:modelValue":s[1]||(s[1]=d=>t.artistInput=d),class:"form-control form-control-sm w-100",type:"number",autocomplete:"off",placeholder:"artist ID...",onChange:s[2]||(s[2]=d=>t.updateArt(d))},null,544),[[b,t.artistInput,void 0,{number:!0}]])])):t.quest.art?(n(),r("p",tt,[e("a",{href:"https://osu.ppy.sh/beatmaps/artists/"+t.quest.art,target:"_blank"},[e("img",{src:"https://assets.ppy.sh/artists/"+t.quest.art+"/cover.jpg",class:"card-avatar-img"},null,8,et)],8,st)])):(n(),r("p",ot," None ")),e("div",it,[p(" Name "),e("a",{href:"#",onClick:s[3]||(s[3]=g(d=>t.showNameInput=!t.showNameInput,["prevent"]))},at)]),t.showNameInput?(n(),r("p",dt,[f(e("input",{"onUpdate:modelValue":s[4]||(s[4]=d=>t.nameInput=d),class:"form-control form-control-sm w-100",type:"text",autocomplete:"off",placeholder:"name...",onChange:s[5]||(s[5]=d=>t.renameQuest(d))},null,544),[[b,t.nameInput]])])):(n(),r("p",rt,u(t.quest.name),1)),e("div",ut,[p(" Objective "),e("a",{href:"#",onClick:s[6]||(s[6]=g(d=>t.showObjectiveInput=!t.showObjectiveInput,["prevent"]))},lt)]),t.showObjectiveInput?(n(),r("p",pt,[f(e("textarea",{"onUpdate:modelValue":s[7]||(s[7]=d=>t.objectiveInput=d),class:"form-control form-control-sm w-100",rows:"2",type:"text",autocomplete:"off",placeholder:"objective...",onChange:s[8]||(s[8]=d=>t.updateDescription(d))},null,544),[[b,t.objectiveInput]])])):(n(),r("p",mt,u(t.quest.descriptionMain),1)),e("div",ht,[p(" Required mapsets "),e("a",{href:"#",onClick:s[9]||(s[9]=g(d=>t.showRequiredMapsetsInput=!t.showRequiredMapsetsInput,["prevent"]))},gt)]),t.showRequiredMapsetsInput?(n(),r("p",$t,[f(e("input",{"onUpdate:modelValue":s[10]||(s[10]=d=>t.requiredMapsetsInput=d),class:"form-control form-control-sm w-100",type:"number",autocomplete:"off",placeholder:"required mapsets...",onChange:s[11]||(s[11]=d=>t.updateRequiredMapsets(d))},null,544),[[b,t.requiredMapsetsInput,void 0,{number:!0}]])])):(n(),r("p",bt,u(t.quest.requiredMapsets),1)),e("div",It,[p(" Price "),e("a",{href:"#",onClick:s[12]||(s[12]=g(d=>t.showPriceInput=!t.showPriceInput,["prevent"]))},wt)]),t.showPriceInput?(n(),r("p",qt,[f(e("input",{"onUpdate:modelValue":s[13]||(s[13]=d=>t.priceInput=d),class:"form-control form-control-sm w-100",type:"number",autocomplete:"off",placeholder:"price per party member...",onChange:s[14]||(s[14]=d=>t.updatePrice(d))},null,544),[[b,t.priceInput,void 0,{number:!0}]])])):(n(),r("p",yt,u(t.quest.price)+" points per user ",1)),e("div",vt,[p(" Timeframe "),e("a",{href:"#",onClick:s[15]||(s[15]=g(d=>t.showTimeframeInput=!t.showTimeframeInput,["prevent"]))},Ct)]),t.showTimeframeInput?(n(),r("p",At,[f(e("input",{"onUpdate:modelValue":s[16]||(s[16]=d=>t.timeframeInput=d),class:"form-control form-control-sm w-100",type:"number",autocomplete:"off",placeholder:"days...",onChange:s[17]||(s[17]=d=>t.updateTimeframe(d))},null,544),[[b,t.timeframeInput,void 0,{number:!0}]])])):(n(),r("p",Pt,u(t.quest.timeframe/(24*3600*1e3))+" days ",1)),e("div",Mt,[p(" Party size "),e("a",{href:"#",onClick:s[18]||(s[18]=g(d=>t.showPartySizeInput=!t.showPartySizeInput,["prevent"]))},Bt)]),t.showPartySizeInput?(n(),r("p",Ut,[f(e("input",{"onUpdate:modelValue":s[19]||(s[19]=d=>t.minPartyInput=d),class:"form-control form-control-sm w-100",type:"number",autocomplete:"off",placeholder:"minimum",onChange:s[20]||(s[20]=d=>t.updateMinParty(d))},null,544),[[b,t.minPartyInput,void 0,{number:!0}]]),f(e("input",{"onUpdate:modelValue":s[21]||(s[21]=d=>t.maxPartyInput=d),class:"form-control form-control-sm w-100",type:"number",autocomplete:"off",placeholder:"maximum",onChange:s[22]||(s[22]=d=>t.updateMaxParty(d))},null,544),[[b,t.maxPartyInput,void 0,{number:!0}]])])):(n(),r("p",Tt,u(t.quest.minParty)+"-"+u(t.quest.maxParty)+" members ",1)),Et,e("p",Lt,u(t.quest.minRank)+" rank required ",1),St,e("p",Ft,u(t.quest.isMbc?"yes":"no"),1),Rt,e("button",{type:"submit",class:"btn btn-outline-success w-100",onClick:s[23]||(s[23]=d=>t.acceptPendingQuest(d))}," Schedule quest "),e("button",{type:"submit",class:"btn btn-outline-danger w-100",onClick:s[24]||(s[24]=d=>t.rejectPendingQuest(d))}," Reject quest "),jt,e("div",Nt,[w($,null,{default:y(()=>[Dt,Ot,e("div",null,"Artist: "+u("https://osu.ppy.sh/beatmaps/artists/"+t.quest.art),1),e("div",null,"Name: "+u(t.quest.name),1),e("div",null,"Objective: "+u(t.quest.descriptionMain),1),e("div",null,"Required mapsets: "+u(t.quest.requiredMapsets),1),e("div",null,"Price: "+u(t.quest.price)+" points per user",1),e("div",null,"Timeframe: "+u(t.quest.timeframe/(24*3600*1e3))+" days",1),e("div",null,"Party size: "+u(t.quest.minParty)+"-"+u(t.quest.maxParty)+" members",1),Vt,zt,Gt,Kt,Ht]),_:1})])])]),_:1},8,["loaded"])}const Wt=Q(J,[["render",Jt],["__scopeId","data-v-eec952e6"]]),Xt=M({name:"ContestInfo",components:{ModalDialog:U},props:{contest:{type:Object,default:null}},methods:{async toggleIsApproved(t){const s=await this.$http.executePost(`/admin/contests/${this.contest.id}/toggleIsApproved`,{isApproved:!this.contest.isApproved},t);s&&(this.$store.dispatch("updateToastMessages",{message:`set isApproved to ${s.isApproved}`,type:"info"}),this.$store.commit("updateIsApproved",{contestId:this.contest.id,isApproved:s.isApproved}))},async toggleIsFeaturedArtistContest(t){const s=await this.$http.executePost(`/admin/contests/${this.contest.id}/toggleIsFeaturedArtistContest`,{isFeaturedArtistContest:!this.contest.isFeaturedArtistContest},t);s&&(this.$store.dispatch("updateToastMessages",{message:`set isFeaturedArtistContest to ${s.isFeaturedArtistContest}`,type:"info"}),this.$store.commit("updateIsFeaturedArtistContest",{contestId:this.contest.id,isFeaturedArtistContest:s.isFeaturedArtistContest}))},async toggleIsEligibleForPoints(t){const s=await this.$http.executePost(`/admin/contests/${this.contest.id}/toggleIsEligibleForPoints`,{isEligibleForPoints:!this.contest.isEligibleForPoints},t);s&&(this.$store.dispatch("updateToastMessages",{message:`set isEligibleForPoints to ${s.isEligibleForPoints}`,type:"info"}),this.$store.commit("updateIsEligibleForPoints",{contestId:this.contest.id,isEligibleForPoints:s.isEligibleForPoints}))}}}),Yt={class:"container"},Zt={class:"row"},xt={class:"col-sm-6"},ts={class:"text-danger me-2"},ss={class:"row"},es={class:"col-sm-6"},os={class:"text-danger me-2"},is=e("hr",null,null,-1),ns={class:"row"},as={class:"col-sm-6"},ds={class:"text-danger me-2"};function rs(t,s,o,i,m,B){const _=h("modal-dialog");return n(),I(_,{id:"editContest",loaded:Boolean(t.contest)},{header:y(()=>[p(u(t.contest.name),1)]),default:y(()=>[e("div",Yt,[e("p",Zt,[e("span",xt,[p(" Featured Artist contest: "),e("span",ts,u(t.contest.isFeaturedArtistContest?"true":"false"),1)]),e("button",{class:"btn btn-sm btn-outline-info ms-3 w-25",onClick:s[0]||(s[0]=$=>t.toggleIsFeaturedArtistContest($))}," Toggle ")]),e("p",ss,[e("span",es,[p(" Eligible for points: "),e("span",os,u(t.contest.isEligibleForPoints?"true":"false"),1)]),e("button",{class:"btn btn-sm btn-outline-info ms-3 w-25",onClick:s[1]||(s[1]=$=>t.toggleIsEligibleForPoints($))}," Toggle ")]),is,e("p",ns,[e("span",as,[p(" Publicly visible: "),e("span",ds,u(t.contest.isApproved?"true":"false"),1)]),e("button",{class:"btn btn-sm btn-outline-info ms-3 w-25",onClick:s[2]||(s[2]=$=>t.toggleIsApproved($))}," Toggle ")])])]),_:1},8,["loaded"])}const us=Q(Xt,[["render",rs]]),cs={state:{actionBeatmaps:[],actionBeatmapsLoading:!1,actionQuests:[],actionQuestsLoading:!1,actionUsers:[],actionUsersLoading:!1,actionContests:[],actionContestsLoading:!1,selectedBeatmap:null,selectedQuest:null,selectedUser:null,selectedContest:null},mutations:{setActionBeatmaps(t,s){t.actionBeatmaps=s},setActionBeatmapsLoading(t,s){t.actionBeatmapsLoading=s},setActionQuests(t,s){t.actionQuests=s},setActionQuestsLoading(t,s){t.actionQuestsLoading=s},setActionUsers(t,s){t.actionUsers=s},setActionUsersLoading(t,s){t.actionUsersLoading=s},setActionContests(t,s){t.actionContests=s},setActionContestsLoading(t,s){t.actionContestsLoading=s},setSelectedBeatmap(t,s){t.selectedBeatmap=s},setSelectedQuest(t,s){t.selectedQuest=s},setSelectedUser(t,s){t.selectedUser=s},setSelectedContest(t,s){t.selectedContest=s},updateBeatmapStatus(t,s){const o=t.actionBeatmaps.find(i=>i.id==s.beatmapId);if(o&&(o.status=s.status,o.status==K.Ranked)){const i=t.actionBeatmaps.findIndex(m=>m.id===s.beatmapId);t.actionBeatmaps.splice(i,1)}},deleteTask(t,s){const o=t.actionBeatmaps.find(i=>i.id==s.beatmapId);if(o){const i=o.tasks.findIndex(m=>m.id==s.taskId);i!==-1&&o.tasks.splice(i,1)}},deleteModder(t,s){const o=t.actionBeatmaps.find(i=>i.id==s.beatmapId);if(o){const i=o.modders.findIndex(m=>m.id==s.modderId);i!==-1&&o.modders.splice(i,1)}},updateUrl(t,s){const o=t.actionBeatmaps.find(i=>i.id==s.beatmapId);o&&(o.url=s.url)},updateStoryboardQuality(t,s){const o=t.actionBeatmaps.find(i=>i.id==s.beatmapId);if(o){const i=o.tasks.findIndex(m=>m.id==s.taskId);i!==-1&&(o.tasks[i]=s.task)}},updatePackId(t,s){const o=t.actionBeatmaps.find(i=>i.id==s.beatmapId);o&&(o.packId=s.packId)},updateIsShowcase(t,s){const o=t.actionBeatmaps.find(i=>i.id==s.beatmapId);o&&(o.isShowcase=s.isShowcase)},updateQueuedForRank(t,s){const o=t.actionBeatmaps.find(i=>i.id==s.beatmapId);o&&(o.queuedForRank=s.queuedForRank)},updateArt(t,s){const o=t.actionQuests.find(i=>i.id==s.questId);o&&(o.art=s.art)},renameQuest(t,s){const o=t.actionQuests.find(i=>i.id==s.questId);o&&(o.name=s.name)},updateDescription(t,s){const o=t.actionQuests.find(i=>i.id==s.questId);o&&(o.descriptionMain=s.description)},updateRequiredMapsets(t,s){const o=t.actionQuests.find(i=>i.id==s.questId);o&&(o.requiredMapsets=s.requiredMapsets)},updatePrice(t,s){const o=t.actionQuests.find(i=>i.id==s.questId);o&&(o.price=s.price)},updateTimeframe(t,s){const o=t.actionQuests.find(i=>i.id==s.questId);o&&(o.timeframe=s.timeframe*(24*3600*1e3))},updateMinParty(t,s){const o=t.actionQuests.find(i=>i.id==s.questId);o&&(o.minParty=s.minParty)},updateMaxParty(t,s){const o=t.actionQuests.find(i=>i.id==s.questId);o&&(o.maxParty=s.maxParty)},updateStatus(t,s){const o=t.actionQuests.find(i=>i.id==s.questId);if(o&&(o.status=s.status,o.status=="open"||o.status=="rejected")){const i=t.actionQuests.findIndex(m=>m.id===s.questId);t.actionQuests.splice(i,1)}},updateQueuedForCompletion(t,s){const o=t.actionQuests.find(i=>i.id==s.questId);o&&(o.queuedForCompletion=s.queuedForCompletion)},updateGroup(t,s){const o=t.actionUsers.find(i=>i.id==s.userId);o&&(o.group=s.group)},updateBadge(t,s){const o=t.actionUsers.find(i=>i.id==s.userId);o&&(o.queuedBadge=s.badge)},updateDiscordId(t,s){const o=t.actionUsers.find(i=>i.id==s.userId);o&&(o.discordId=s.discordId)},updateBypassLogin(t,s){const o=t.actionUsers.find(i=>i.id==s.userId);o&&(o.bypassLogin=s.bypassLogin)},updateIsApproved(t,s){const o=t.actionContests.find(i=>i.id==s.contestId);o&&(o.isApproved=s.isApproved)},updateIsFeaturedArtistContest(t,s){const o=t.actionContests.find(i=>i.id==s.contestId);o&&(o.isFeaturedArtistContest=s.isFeaturedArtistContest)},updateIsEligibleForPoints(t,s){const o=t.actionContests.find(i=>i.id==s.contestId);o&&(o.isFeaturedArtistContest=s.isFeaturedArtistContest)}}},ls=cs,ps=M({name:"AdminPage",components:{BeatmapInfoAdmin:O,QuestInfo:V,ReviewQuest:Wt,UserInfo:G,ContestInfo:us,ModesIcons:j,UserLinkList:H},computed:N({actionBeatmaps:t=>t.admin.actionBeatmaps,actionBeatmapsLoading:t=>t.admin.actionBeatmapsLoading,actionQuests:t=>t.admin.actionQuests,actionQuestsLoading:t=>t.admin.actionQuestsLoading,actionUsers:t=>t.admin.actionUsers,actionUsersLoading:t=>t.admin.actionUsersLoading,actionContests:t=>t.admin.actionContests,actionContestsLoading:t=>t.admin.actionContestsLoading,selectedBeatmap:t=>t.admin.selectedBeatmap,selectedQuest:t=>t.admin.selectedQuest,selectedUser:t=>t.admin.selectedUser,selectedContest:t=>t.admin.selectedContest}),beforeCreate(){this.$store.hasModule("admin")||this.$store.registerModule("admin",ls)},unmounted(){this.$store.hasModule("admin")&&this.$store.unregisterModule("admin")},methods:{generateMetadata(t){let s=t.artist+" - ";return t.title.length>40?s+=t.title.slice(0,40)+"...":s+=t.title,s},async loadActionBeatmaps(t){{this.$store.commit("setActionBeatmaps",[]),this.$store.commit("setActionBeatmapsLoading",!0);const s=await this.$http.executeGet("/admin/loadActionBeatmaps",t);this.$http.isError(s)||this.$store.commit("setActionBeatmaps",s),this.$store.commit("setActionBeatmapsLoading",!1)}},async loadActionQuests(t){this.$store.commit("setActionQuests",[]),this.$store.commit("setActionQuestsLoading",!0);const s=await this.$http.executeGet("/admin/loadActionQuests",t);this.$http.isError(s)||this.$store.commit("setActionQuests",s),this.$store.commit("setActionQuestsLoading",!1)},async loadActionUsers(t){this.$store.commit("setActionUsers",[]),this.$store.commit("setActionUsersLoading",!0);const s=await this.$http.executeGet("/admin/loadActionUsers",t);this.$http.isError(s)||this.$store.commit("setActionUsers",s),this.$store.commit("setActionUsersLoading",!1)},async loadActionContests(t){this.$store.commit("setActionContests",[]),this.$store.commit("setActionContestsLoading",!0);const s=await this.$http.executeGet("/admin/loadActionContests",t);this.$http.isError(s)||this.$store.commit("setActionContests",s),this.$store.commit("setActionContestsLoading",!1)}}}),ms={class:"container card card-body py-1 mb-4"},hs={class:"row mx-3 mt-2"},fs={class:"row"},gs={class:"col"},$s={class:"ms-4 mt-2"},bs=e("a",{href:"#actionBeatmaps","data-bs-toggle":"collapse"},[p(" Beatmaps "),e("i",{class:"fas fa-angle-down"})],-1),Is={key:0,class:"ms-2 small text-white-50"},_s={id:"actionBeatmaps",class:"show"},ws={key:0,class:"table table-sm"},qs=e("thead",null,[e("tr",null,[e("th",{scope:"col"}," METADATA "),e("th",{scope:"col"}," PACK ID "),e("th",{scope:"col"}," STATUS "),e("th",{scope:"col"}," EDIT ")])],-1),ys={scope:"row"},vs=["href"],ks={key:1,class:"ms-1"},Cs={scope:"row"},As={scope:"row"},Ps={scope:"row"},Ms=["onClick"],Qs={key:1,class:"text-white-50 ms-5"},Bs={class:"container card card-body py-1 mb-4"},Us={class:"row mx-3 mt-2"},Ts={class:"row"},Es={class:"col"},Ls={class:"ms-4 mt-2"},Ss=e("a",{href:"#actionQuests","data-bs-toggle":"collapse"},[p(" Quests "),e("i",{class:"fas fa-angle-down"})],-1),Fs={key:0,class:"ms-2 small text-white-50"},Rs={id:"actionQuests",class:"show"},js={key:0,class:"table table-sm"},Ns=e("thead",null,[e("tr",null,[e("th",{scope:"col"}," NAME "),e("th",{scope:"col"}," CREATOR "),e("th",{scope:"col"}," MODES "),e("th",{scope:"col"}," STATUS "),e("th",{scope:"col"}," MAPSETS "),e("th",{scope:"col"}," EDIT ")])],-1),Ds={scope:"row"},Os={scope:"row"},Vs={scope:"row"},zs={scope:"row"},Gs={scope:"row"},Ks={scope:"row"},Hs=["data-bs-target","onClick"],Js={key:1,class:"text-white-50 ms-5"},Ws={class:"container card card-body py-1 mb-4"},Xs={class:"row mx-3 mt-2"},Ys={class:"row"},Zs={class:"col"},xs={class:"ms-4 mt-2"},te=e("a",{href:"#actionUsers","data-bs-toggle":"collapse"},[p(" Users "),e("i",{class:"fas fa-angle-down"})],-1),se={key:0,class:"ms-2 small text-white-50"},ee={key:0,id:"actionUsers",class:"show"},oe={key:0,class:"table table-sm"},ie=e("thead",null,[e("tr",null,[e("th",{scope:"col"}," USERNAME "),e("th",{scope:"col"}," RANK "),e("th",{scope:"col"}," QUEUED BADGE "),e("th",{scope:"col"}," BADGE "),e("th",{scope:"col"}," EDIT ")])],-1),ne={scope:"row"},ae={scope:"row"},de={scope:"row"},re=["onClick"],ue={key:1,class:"text-white-50 ms-5"},ce={class:"container card card-body py-1"},le={class:"row mx-3 mt-2"},pe={class:"row"},me={class:"col"},he={class:"ms-4 mt-2"},fe=e("a",{href:"#actionContests","data-bs-toggle":"collapse"},[p(" Contests "),e("i",{class:"fas fa-angle-down"})],-1),ge={key:0,class:"ms-2 small text-white-50"},$e={key:0,id:"actionContests",class:"show"},be={key:0,class:"table table-sm"},Ie=e("thead",null,[e("tr",null,[e("th",{scope:"col"}," CONTEST "),e("th",{scope:"col"}," CREATOR "),e("th",{scope:"col"}," EDIT ")])],-1),_e={scope:"row"},we=["href"],qe={scope:"row"},ye={scope:"row"},ve=["onClick"],ke={key:1,class:"text-white-50 ms-5"},Ce=e("div",{class:"radial-divisor"},null,-1);function Ae(t,s,o,i,m,B){const _=h("modes-icons"),$=h("user-link"),C=h("user-link-list"),d=h("beatmap-info-admin"),T=h("quest-info"),E=h("review-quest"),L=h("user-info"),S=h("contest-info"),A=D("bs-tooltip");return n(),r("div",null,[e("div",ms,[e("div",hs,[e("button",{class:"btn btn-sm btn-info w-100 mb-1",onClick:s[0]||(s[0]=a=>t.loadActionBeatmaps(a))}," Load beatmaps ")]),e("div",fs,[e("div",gs,[e("h5",$s,[bs,t.actionBeatmapsLoading?(n(),r("span",Is,"loading...")):c("",!0)]),e("div",_s,[t.actionBeatmaps.length?(n(),r("table",ws,[qs,e("tbody",null,[(n(!0),r(v,null,k(t.actionBeatmaps,a=>(n(),r("tr",{key:a.id,class:"text-white-50"},[e("td",ys,[w(_,{modes:[a.mode]},null,8,["modes"]),a.url?(n(),r("a",{key:0,href:a.url,class:"ms-1"},u(t.generateMetadata(a.song)),9,vs)):(n(),r("span",ks,u(t.generateMetadata(a.song)),1))]),e("td",Cs,u(a.packId),1),e("td",As,u(a.status),1),e("td",Ps,[e("a",{href:"#","data-bs-toggle":"modal","data-bs-target":"#editBeatmap",onClick:g(P=>t.$store.commit("setSelectedBeatmap",a),["prevent"])}," edit ",8,Ms)])]))),128))])])):t.actionBeatmapsLoading?c("",!0):(n(),r("span",Qs,"None..."))])])])]),e("div",Bs,[e("div",Us,[e("button",{class:"btn btn-sm btn-info w-100 mb-1",onClick:s[1]||(s[1]=a=>t.loadActionQuests(a))}," Load quests ")]),e("div",Ts,[e("div",Es,[e("h5",Ls,[Ss,t.actionQuestsLoading?(n(),r("span",Fs,"loading...")):c("",!0)]),e("div",Rs,[t.actionQuests.length?(n(),r("table",js,[Ns,e("tbody",null,[(n(!0),r(v,null,k(t.actionQuests,a=>(n(),r("tr",{key:a.id,class:"text-white-50"},[e("td",Ds,u(a.name),1),e("td",Os,u(a.creator.username),1),e("td",Vs,[w(_,{modes:a.modes},null,8,["modes"])]),e("td",zs,u(a.status),1),e("td",Gs,u(a.requiredMapsets),1),e("td",Ks,[e("a",{href:"#","data-bs-toggle":"modal","data-bs-target":a.status=="pending"?"#reviewQuest":"#editQuest",onClick:g(P=>t.$store.commit("setSelectedQuest",a),["prevent"])}," edit ",8,Hs)])]))),128))])])):t.actionQuestsLoading?c("",!0):(n(),r("span",Js,"None..."))])])])]),e("div",Ws,[e("div",Xs,[e("button",{class:"btn btn-sm btn-info w-100 mb-1",onClick:s[2]||(s[2]=a=>t.loadActionUsers(a))}," Load users ")]),e("div",Ys,[e("div",Zs,[e("h5",xs,[te,t.actionUsersLoading?(n(),r("span",se,"loading...")):c("",!0)]),t.actionUsers?(n(),r("div",ee,[t.actionUsers.length?(n(),r("table",oe,[ie,e("tbody",null,[(n(!0),r(v,null,k(t.actionUsers,a=>(n(),r("tr",{key:a.id,class:"text-white-50"},[e("td",ne,[w($,{user:a},null,8,["user"])]),e("td",ae,[a.rank?f((n(),r("i",{key:0,class:q(["fas fa-crown","text-rank-"+a.rank])},null,2)),[[A,`rank ${a.rank} user`]]):c("",!0)]),e("td",{scope:"row",class:q({"bg-open":a.rank!=a.queuedBadge})},[a.queuedBadge?f((n(),r("i",{key:0,class:q(["fas fa-crown","text-rank-"+a.queuedBadge])},null,2)),[[A,`rank ${a.queuedBadge} user`]]):c("",!0)],2),e("td",{scope:"row",class:q({"bg-open":a.rank!=a.badge})},[a.badge?f((n(),r("i",{key:0,class:q(["fas fa-crown","text-rank-"+a.badge])},null,2)),[[A,`rank ${a.badge} user`]]):c("",!0)],2),e("td",de,[e("a",{href:"#","data-bs-toggle":"modal","data-bs-target":"#editUser",onClick:g(P=>t.$store.commit("setSelectedUser",a),["prevent"])}," edit ",8,re)])]))),128))])])):t.actionUsersLoading?c("",!0):(n(),r("span",ue,"None..."))])):c("",!0)])])]),e("div",ce,[e("div",le,[e("button",{class:"btn btn-sm btn-info w-100 mb-1",onClick:s[3]||(s[3]=a=>t.loadActionContests(a))}," Load contests ")]),e("div",pe,[e("div",me,[e("h5",he,[fe,t.actionContestsLoading?(n(),r("span",ge,"loading...")):c("",!0)]),t.actionContests?(n(),r("div",$e,[t.actionContests.length?(n(),r("table",be,[Ie,e("tbody",null,[(n(!0),r(v,null,k(t.actionContests,a=>(n(),r("tr",{key:a.id,class:"text-white-50"},[e("td",_e,[e("a",{href:"/contests/listing?contest="+a.id},u(a.name),9,we)]),e("td",qe,[w(C,{users:a.creators},null,8,["users"])]),e("td",ye,[e("a",{href:"#","data-bs-toggle":"modal","data-bs-target":"#editContest",onClick:g(P=>t.$store.commit("setSelectedContest",a),["prevent"])}," edit ",8,ve)])]))),128))])])):t.actionContestsLoading?c("",!0):(n(),r("span",ke,"None..."))])):c("",!0)])])]),Ce,t.selectedBeatmap?(n(),I(d,{key:0,beatmap:t.selectedBeatmap},null,8,["beatmap"])):c("",!0),t.selectedQuest?(n(),I(T,{key:1,quest:t.selectedQuest},null,8,["quest"])):c("",!0),t.selectedQuest?(n(),I(E,{key:2,quest:t.selectedQuest},null,8,["quest"])):c("",!0),t.selectedUser?(n(),I(L,{key:3,user:t.selectedUser},null,8,["user"])):c("",!0),t.selectedContest?(n(),I(S,{key:4,contest:t.selectedContest},null,8,["contest"])):c("",!0)])}const Fe=Q(ps,[["render",Ae]]);export{Fe as default};

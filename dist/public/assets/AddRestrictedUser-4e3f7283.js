import{d as i,m as l,_ as u,o as c,e as p,a as t,b as r,f as a,y as m}from"./index-3c72ace1.js";const h={namespaced:!0,state:{admins:[],cycles:[],selectedCycleId:null,selectedUser:null,showPhases:!1,badgeUsers:[]},mutations:{setAdmins(e,s){e.admins=s},setBadgeUsers(e,s){e.badgeUsers=s},setCycles(e,s){e.cycles=s},removeAdmin(e,s){const d=e.admins.findIndex(o=>o.id==s);d!==-1&&e.admins.splice(d,1)},setSelectedCycleId(e,s){e.selectedCycleId=s},updateCycle(e,s){const d=e.cycles.findIndex(o=>o.id===s.id);d!==-1&&(e.cycles[d]=s)},setSelectedUser(e,s){e.selectedUser=s},toggleShowPhases(e){e.showPhases=!e.showPhases}},getters:{allAdmins:e=>e.admins,badgeUsers:e=>e.badgeUsers,allCycles:e=>e.cycles,selectedCycle:e=>e.cycles.find(s=>s.id===e.selectedCycleId)}},f=h,I=i({name:"AddRestrictedUser",components:{},data(){return{usernameInput:null,osuIdInput:null}},computed:{...l(["loggedInUser"])},beforeCreate(){this.$store.hasModule("mentorship")||this.$store.registerModule("mentorship",f)},methods:{async addRestrictedUser(e){const s=await this.$http.executePost("/mentorship/addRestrictedUser",{usernameInput:this.usernameInput,osuIdInput:this.osuIdInput},e);this.$http.isError(s)||this.$store.dispatch("updateToastMessages",{message:`Added ${s.username}`,type:"info"})}}}),y={class:"container card card-body py-3 mt-2"},U=t("h5",null,"Add restricted user",-1),b=t("div",{class:"text-secondary"}," This adds a user to the Mappers' Guild database manually. Ensure name and osu ID are correct. If they're not, there will be problems if the user is unrestricted. ",-1),g={class:"input-group w-50"},_={class:"input-group-append"},v=t("i",{class:"fas fa-plus fa-xs"},null,-1),C=[v];function $(e,s,d,o,w,A){return c(),p("div",null,[t("div",y,[U,b,t("div",g,[r(t("input",{"onUpdate:modelValue":s[0]||(s[0]=n=>e.usernameInput=n),class:"form-control form-control-sm",autocomplete:"off",placeholder:"username..."},null,512),[[a,e.usernameInput,void 0,{number:!0}]]),r(t("input",{"onUpdate:modelValue":s[1]||(s[1]=n=>e.osuIdInput=n),class:"form-control form-control-sm",autocomplete:"off",placeholder:"osuId..."},null,512),[[a,e.osuIdInput,void 0,{number:!0}]]),t("div",_,[t("button",{class:"btn btn-primary",href:"#",onClick:s[2]||(s[2]=m(n=>e.addRestrictedUser(n),["prevent"]))},C)])])])])}const x=u(I,[["render",$]]);export{x as A,f as m};

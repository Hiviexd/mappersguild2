var e=Object.defineProperty,t=Object.defineProperties,s=Object.getOwnPropertyDescriptors,i=Object.getOwnPropertySymbols,a=Object.prototype.hasOwnProperty,l=Object.prototype.propertyIsEnumerable,r=(t,s,i)=>s in t?e(t,s,{enumerable:!0,configurable:!0,writable:!0,value:i}):t[s]=i;import{d as o,h as n,o as u,s as m,w as d,f as c,t as h,m as p,j as b,b as f,g as y,F as g,e as v,k as C,q as k}from"./vendor.b9ef672a.js";import{_ as q}from"./ModalDialog.4a9168b4.js";import{a as P,b as w,c as V,_ as A}from"./FormTextarea.5ea73115.js";var x=o({name:"FormCheckbox",components:{FormFieldBase:P},props:{id:{type:String,required:!0},label:{type:String,required:!0},info:{type:String,default:""},modelValue:Boolean},emits:["update:modelValue"]});const j={class:"form-check"},M=["id","checked"],Q=["for"];x.render=function(e,t,s,i,a,l){const r=n("form-field-base");return u(),m(r,{label:e.label},{default:d((()=>[c("div",j,[c("input",{id:e.id,class:"form-check-input",type:"checkbox",checked:e.modelValue,onChange:t[0]||(t[0]=t=>e.$emit("update:modelValue",t.target.checked))},null,40,M),c("label",{class:"form-check-label",for:e.id},h(e.info),9,Q)])])),_:1},8,["label"])};var O,N,T=o({name:"SubmitQuestModal",components:{ModalDialog:q,FormInput:w,FormTextarea:V,FormSelect:A,FormCheckbox:x},props:{isAdmin:Boolean},data:()=>({featuredArtists:[],selectedArtist:"",mapsetCount:6,name:"",price:0,objective:"",timeframe:0,minParty:0,maxParty:0,minRank:0,isMbc:!1,queuedQuests:[]}),computed:(O=((e,t)=>{for(var s in t||(t={}))a.call(t,s)&&r(e,s,t[s]);if(i)for(var s of i(t))l.call(t,s)&&r(e,s,t[s]);return e})({},p(["loggedInUser"])),N={packType(){return 1==this.mapsetCount?"single":2==this.mapsetCount?"double":this.mapsetCount<=4?"mini-pack":this.mapsetCount<=9?"pack":this.mapsetCount>=10?"mega-pack":"invalid-pack"},selectedArtistOsuId(){return this.selectedArtist.length?this.selectedArtist.split("|")[0]:""},selectedArtistName(){return this.selectedArtist.length?this.selectedArtist.split("|")[1]:""},points(){let e=25;return this.selectedArtist||(e+=10),this.mapsetCount<1?e=727:1==this.mapsetCount?e+=100:this.mapsetCount<10&&(e+=7.5*(10-this.mapsetCount)),e},enoughPoints(){return this.loggedInUser.availablePoints-this.points>0}},t(O,s(N))),watch:{selectedArtist(){this.selectedArtistName.length&&this.mapsetCount>0&&(this.name=this.findName(),this.objective=this.findObjective(),this.price=this.findPrice(),this.timeframe=this.findTimeframe(),this.minParty=this.mapsetCount,this.maxParty=3*this.mapsetCount)},mapsetCount(){this.selectedArtistName.length&&this.mapsetCount>0&&(this.name=this.findName(),this.objective=this.findObjective(),this.price=this.findPrice(),this.timeframe=this.findTimeframe(),this.minParty=this.mapsetCount,this.maxParty=3*this.mapsetCount)}},async created(){const e=await this.$http.executeGet("/featuredArtists");e&&(this.featuredArtists=e.sort(((e,t)=>e.label.toLowerCase()>t.label.toLowerCase()?1:t.label.toLowerCase()>e.label.toLowerCase()?-1:0)))},methods:{findName(){return this.selectedArtistName+" "+this.packType},findObjective(){return 1==this.mapsetCount?`Create and rank ${this.mapsetCount} mapset of any song by ${this.selectedArtistName}.`:`Create and rank at least ${this.mapsetCount} mapsets of songs by ${this.selectedArtistName}, each hosted by a different user.`},findPrice(){switch(this.mapsetCount){case 1:return 20;case 2:return 10;case 3:return 5;default:return 0}},findTimeframe(){return 10*this.mapsetCount+70},resetQuestDetails(){this.selectedArtist="",this.mapsetCount=6,this.name="",this.price=0,this.objective="",this.timeframe=0,this.minParty=0,this.maxParty=0,this.minRank=0,this.isMbc=!1},addToQueue(){this.queuedQuests.push({name:this.name,price:this.price,descriptionMain:this.objective,timeframe:864e5*this.timeframe,minParty:this.minParty,maxParty:this.maxParty,minRank:this.minRank,isMbc:this.isMbc,art:parseInt(this.selectedArtistOsuId),requiredMapsets:this.mapsetCount}),this.resetQuestDetails()},removeFromQueue(e){this.queuedQuests=this.queuedQuests.filter((t=>t.name!=e))},async submitQuest(e){const t={name:this.name,price:this.price,descriptionMain:this.objective,timeframe:864e5*this.timeframe,minParty:this.minParty,maxParty:this.maxParty,art:this.selectedArtistOsuId,requiredMapsets:this.mapsetCount},s=await this.$http.executePost("/quests/submit",t,e);this.$http.isError(s)||(this.$bs.hideModal("submitQuest"),this.resetQuestDetails())},async scheduleQuests(e){const t={quests:this.queuedQuests},s=await this.$http.executePost("/admin/quests/create",t,e);this.$http.isError(s)||(this.$bs.hideModal("submitQuest"),this.queuedQuests=[])}}});const $={class:"container"},I=c("option",{value:"-",disabled:""}," --- ",-1),U=c("option",{value:"-",disabled:""}," Jump to an artist by typing their name! ",-1),F=c("option",{value:"-",disabled:""}," --- ",-1),S=["value"],R={key:0,class:"row col ms-4"},D=[c("ul",{class:"small text-secondary"},[c("li",null,"This artist's logo will be used as the quest's icon."),c("li",null,"If your quest allows songs from a few artists, choose whichever best expresses its theme."),c("li",null,'If your quest allows songs from many artists, choose "No specific artist".'),c("li",null,'Selecting an artist pre-fills the "Name" and "Objective" fields, though these can still be customized.')],-1)],_={key:1,class:"row col ms-4"},z=[c("ul",{class:"small text-secondary"},[c("li",null,"Submitting quest for approval requires you to spend points correlating to how many mapsets are required. The fewer required mapsets, the more points you'll have to spend (and vice versa)."),c("li",null,"Choosing a number pre-fills various fields, though these can still be customized.")],-1)],B=c("div",{class:"radial-divisor"},null,-1),L={key:3,class:"row col-sm small text-secondary"},E=c("p",null," Keep in mind that your quest may need revision before it is approved and published on the Mappers' Guild quest listing! ",-1),G=c("p",null," If your quest is rejected, your spent points will be returned and pishifat will send you a message explaining why it was rejected. You may re-submit the quest with changes according to that message. Minor wording changes will be modified by pishifat without rejection. ",-1),J=["disabled"],K=c("i",{class:"fas fa-coins"},null,-1),Y={key:4,class:"row col-sm"},H=[C(" Add quest to queue "),c("i",{class:"fas fa-coins"},null,-1)],W={key:0,class:"mt-2"},X=C(" Pending quests "),Z={class:"small text-secondary"},ee=["onClick"],te=[c("i",{class:"fas fa-minus"},null,-1)];T.render=function(e,t,s,i,a,l){const r=n("form-select"),o=n("form-input"),p=n("form-textarea"),q=n("form-checkbox"),P=n("modal-dialog");return u(),m(P,{id:"submitQuest",title:e.isAdmin?"Add quest":"Submit quest"},{default:d((()=>[c("div",$,[b(r,{modelValue:e.selectedArtist,"onUpdate:modelValue":t[0]||(t[0]=t=>e.selectedArtist=t),label:"Artist",placeholder:"No specific artist"},{default:d((()=>[I,U,F,(u(!0),f(g,null,y(e.featuredArtists,(e=>(u(),f("option",{key:e.id,value:e.osuId+"|"+e.label},h(e.label),9,S)))),128))])),_:1},8,["modelValue"]),e.isAdmin?v("",!0):(u(),f("div",R,D)),b(o,{modelValue:e.mapsetCount,"onUpdate:modelValue":t[1]||(t[1]=t=>e.mapsetCount=t),modelModifiers:{number:!0},label:"Required mapsets",type:"number"},null,8,["modelValue"]),e.isAdmin?v("",!0):(u(),f("div",_,z)),b(o,{modelValue:e.name,"onUpdate:modelValue":t[2]||(t[2]=t=>e.name=t),label:"Name"},null,8,["modelValue"]),b(p,{modelValue:e.objective,"onUpdate:modelValue":t[3]||(t[3]=t=>e.objective=t),label:"Objective"},null,8,["modelValue"]),b(o,{modelValue:e.price,"onUpdate:modelValue":t[4]||(t[4]=t=>e.price=t),modelModifiers:{number:!0},label:"Price",type:"number",placeholder:"price per party member...",description:"...points required per party member"},null,8,["modelValue"]),b(o,{modelValue:e.timeframe,"onUpdate:modelValue":t[5]||(t[5]=t=>e.timeframe=t),modelModifiers:{number:!0},label:"Timeframe",type:"number",description:"...days to complete quest"},null,8,["modelValue"]),b(o,{modelValue:e.minParty,"onUpdate:modelValue":t[6]||(t[6]=t=>e.minParty=t),modelModifiers:{number:!0},label:"Party size (min)",type:"number"},null,8,["modelValue"]),b(o,{modelValue:e.maxParty,"onUpdate:modelValue":t[7]||(t[7]=t=>e.maxParty=t),modelModifiers:{number:!0},label:"Party size (max)",type:"number",description:"...members required to accept quest (min/max)"},null,8,["modelValue"]),e.isAdmin?(u(),f(g,{key:2},[b(o,{modelValue:e.minRank,"onUpdate:modelValue":t[8]||(t[8]=t=>e.minRank=t),modelModifiers:{number:!0},label:"Party rank (min)",type:"number",description:"...rank required to accept quest"},null,8,["modelValue"]),b(q,{id:"isMbcCheckbox",modelValue:e.isMbc,"onUpdate:modelValue":t[9]||(t[9]=t=>e.isMbc=t),label:"is MBC",info:"Toggle isMbc"},null,8,["modelValue"])],64)):v("",!0),B,e.isAdmin?(u(),f("div",Y,[c("button",{class:"btn btn-outline-secondary w-100",onClick:t[11]||(t[11]=t=>e.addToQueue())},H),e.queuedQuests.length?(u(),f("div",W,[X,c("ul",Z,[(u(!0),f(g,null,y(e.queuedQuests,(t=>(u(),f("li",{key:t.name},[C(h(t.name)+" ",1),c("a",{href:"#",class:"text-danger",onClick:k((s=>e.removeFromQueue(t.name)),["prevent"])},te,8,ee)])))),128))])])):v("",!0),e.queuedQuests.length?(u(),f("button",{key:1,class:"btn btn-outline-success w-100",onClick:t[12]||(t[12]=t=>e.scheduleQuests(t))}," Schedule quests ")):v("",!0)])):(u(),f("div",L,[E,G,c("button",{class:"btn btn-outline-success w-100",disabled:!e.enoughPoints,onClick:t[10]||(t[10]=t=>e.submitQuest(t))},[C(h(`Submit quest for approval: ${e.points} pts`)+" ",1),K],8,J)]))])])),_:1},8,["title"])};export{T as _};

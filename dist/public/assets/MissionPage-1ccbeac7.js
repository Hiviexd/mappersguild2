import{d as R,R as P,m as T,_ as D,o as d,c as U,w as S,a as t,i as p,e as u,r as k,t as r,F as v,k as $,j as h,y as B,p as f,N as L,b as c,f as b,v as V,n as A,L as j,s as G,u as O}from"./index-f1543ad1.js";import{M as x}from"./ModalDialog-03debd1f.js";import{b as z,F as N,c as W}from"./FormTextarea-130ce8ff.js";import{D as Q}from"./DataTable-52d970a7.js";import{T as E}from"./task-21eeb954.js";const q=R({name:"SubmitMissionModal",components:{ModalDialog:x,FormInput:z,FormSelect:N,FormTextarea:W},props:{isAdmin:Boolean},data(){return{modes:P,featuredArtists:[],selectedArtists:[],selectedArtistId:"",selectedMode:"",selectedModes:[],tier:"",deadline:"",objective:"",name:"",winCondition:"",isShowcaseMission:0,userMaximumRankedBeatmapsCount:null,userMaximumGlobalRank:null,userMaximumPp:null,userMinimumRank:null,beatmapEarliestSubmissionDate:"2007-01-01",beatmapLatestSubmissionDate:"2100-01-01"}},computed:{...T(["loggedInUser"])},async created(){const i=await this.$http.executeGet("/featuredArtists");i&&(this.featuredArtists=i.sort((s,e)=>s.label.toLowerCase()>e.label.toLowerCase()?1:e.label.toLowerCase()>s.label.toLowerCase()?-1:0))},methods:{addArtist(){if(this.selectedArtistId.length){const i=this.featuredArtists.findIndex(a=>a.id==this.selectedArtistId),s=this.featuredArtists[i],e={id:s.id,_id:s._id,label:s.label,osuId:s.osuId};this.selectedArtists.push(e)}},addMode(){this.selectedMode.length&&this.selectedModes.push(this.selectedMode)},removeArtist(i){const s=this.selectedArtists.findIndex(e=>e.id==i);this.selectedArtists.splice(s,1)},removeMode(i){const s=this.selectedModes.findIndex(e=>e==i);this.selectedModes.splice(s,1)},async addMission(i){if(typeof this.name=="number"){this.$store.dispatch("updateToastMessages",{message:"Choose a name that doesn't start with a number",type:"danger"});return}const s=await this.$http.executePost("/admin/missions/create",{artists:this.selectedArtists,tier:this.tier,name:this.name,deadline:this.deadline,objective:this.objective,modes:this.selectedModes,winCondition:this.winCondition,isShowcaseMission:new Boolean(this.isShowcaseMission),userMaximumRankedBeatmapsCount:this.userMaximumRankedBeatmapsCount,userMaximumGlobalRank:this.userMaximumGlobalRank,userMaximumPp:this.userMaximumPp,userMinimumRank:this.userMinimumRank,beatmapEarliestSubmissionDate:this.beatmapEarliestSubmissionDate,beatmapLatestSubmissionDate:this.beatmapLatestSubmissionDate},i);this.$http.isError(s)||(this.$store.commit("addMission",s),this.$bs.hideModal("submitMission"))}}}),F={class:"container"},H=t("h5",null,"General",-1),_={class:"row"},J=t("option",{value:"-",disabled:""}," --- ",-1),K=["value"],X={class:"col-sm-1"},Y={class:"small text-secondary"},Z={key:0},ss=["onClick"],is=t("i",{class:"fas fa-minus"},null,-1),ts=[is],es={class:"row"},os=t("option",{value:"-",disabled:""}," --- ",-1),ns=["value"],as={class:"col-sm-1"},ms={class:"mt-2"},ds={class:"small text-secondary"},ls={key:0},us=["onClick"],rs=t("i",{class:"fas fa-minus"},null,-1),ps=[rs],cs=t("hr",null,null,-1),bs=t("h5",null,"User requirements",-1);function hs(i,s,e,a,w,y){const M=f("form-select"),m=f("form-input"),o=f("form-textarea"),C=f("modal-dialog");return d(),U(C,{id:"submitMission",title:"Submit mission"},{default:S(()=>[t("div",F,[H,t("div",_,[p(M,{modelValue:i.selectedArtistId,"onUpdate:modelValue":s[0]||(s[0]=n=>i.selectedArtistId=n),class:"col-sm-11",label:"Artist",placeholder:"Any artist (selected by default)"},{default:S(()=>[J,(d(!0),u(v,null,k(i.featuredArtists,n=>(d(),u("option",{key:n.id,value:n.id},r(n.label),9,K))),128))]),_:1},8,["modelValue"]),t("div",X,[t("button",{id:"artistButton",class:"btn btn-sm btn-outline-info",onClick:s[1]||(s[1]=n=>i.addArtist())}," Add ")])]),t("div",null,[t("ul",Y,[i.selectedArtists.length?$("",!0):(d(),u("li",Z," Any artist (selected by default) ")),(d(!0),u(v,null,k(i.selectedArtists,n=>(d(),u("li",{key:n.osuId},[h(r(n.label)+" ",1),t("a",{href:"#",class:"text-danger",onClick:B(l=>i.removeArtist(n.id),["prevent"])},ts,8,ss)]))),128))])]),t("div",es,[p(M,{modelValue:i.selectedMode,"onUpdate:modelValue":s[2]||(s[2]=n=>i.selectedMode=n),class:"col-sm-11",label:"Mode",placeholder:"Any mode (selected by default)"},{default:S(()=>[os,(d(!0),u(v,null,k(i.modes,n=>(d(),u("option",{key:n,value:n},r(n),9,ns))),128))]),_:1},8,["modelValue"]),t("div",as,[t("button",{id:"artistButton",class:"btn btn-sm btn-outline-info",onClick:s[3]||(s[3]=n=>i.addMode())}," Add ")])]),t("div",ms,[t("ul",ds,[i.selectedModes.length?$("",!0):(d(),u("li",ls," Any mode (selected by default) ")),(d(!0),u(v,null,k(i.selectedModes,n=>(d(),u("li",{key:n},[h(r(n)+" ",1),t("a",{href:"#",class:"text-danger",onClick:B(l=>i.removeMode(n),["prevent"])},ps,8,us)]))),128))])]),p(m,{modelValue:i.tier,"onUpdate:modelValue":s[4]||(s[4]=n=>i.tier=n),modelModifiers:{number:!0},label:"Tier",type:"number"},null,8,["modelValue"]),p(m,{modelValue:i.name,"onUpdate:modelValue":s[5]||(s[5]=n=>i.name=n),modelModifiers:{number:!0},label:"Name",type:"text"},null,8,["modelValue"]),p(o,{modelValue:i.objective,"onUpdate:modelValue":s[6]||(s[6]=n=>i.objective=n),label:"Objective"},null,8,["modelValue"]),p(o,{modelValue:i.winCondition,"onUpdate:modelValue":s[7]||(s[7]=n=>i.winCondition=n),label:"Win condition"},null,8,["modelValue"]),p(m,{modelValue:i.isShowcaseMission,"onUpdate:modelValue":s[8]||(s[8]=n=>i.isShowcaseMission=n),modelModifiers:{number:!0},label:"isShowcaseMission",description:"0 = false, 1 = true",type:"number"},null,8,["modelValue"]),p(m,{modelValue:i.deadline,"onUpdate:modelValue":s[9]||(s[9]=n=>i.deadline=n),label:"Deadline",type:"date"},null,8,["modelValue"]),cs,bs,p(m,{modelValue:i.userMaximumRankedBeatmapsCount,"onUpdate:modelValue":s[10]||(s[10]=n=>i.userMaximumRankedBeatmapsCount=n),modelModifiers:{number:!0},label:"Max ranked maps",type:"number"},null,8,["modelValue"]),p(m,{modelValue:i.userMaximumGlobalRank,"onUpdate:modelValue":s[11]||(s[11]=n=>i.userMaximumGlobalRank=n),modelModifiers:{number:!0},label:"Max global rank",type:"number"},null,8,["modelValue"]),p(m,{modelValue:i.userMaximumPp,"onUpdate:modelValue":s[12]||(s[12]=n=>i.userMaximumPp=n),modelModifiers:{number:!0},label:"Max pp",type:"number"},null,8,["modelValue"]),p(m,{modelValue:i.userMinimumRank,"onUpdate:modelValue":s[13]||(s[13]=n=>i.userMinimumRank=n),modelModifiers:{number:!0},label:"Minimum mg rank",type:"number"},null,8,["modelValue"]),p(m,{modelValue:i.beatmapEarliestSubmissionDate,"onUpdate:modelValue":s[14]||(s[14]=n=>i.beatmapEarliestSubmissionDate=n),modelModifiers:{number:!0},label:"Earliest submission date",type:"date"},null,8,["modelValue"]),p(m,{modelValue:i.beatmapLatestSubmissionDate,"onUpdate:modelValue":s[15]||(s[15]=n=>i.beatmapLatestSubmissionDate=n),modelModifiers:{number:!0},label:"Latest submission date",type:"date"},null,8,["modelValue"]),t("button",{class:"btn btn-outline-success w-100",onClick:s[16]||(s[16]=n=>i.addMission(n))}," Add mission ")])]),_:1})}const fs=D(q,[["render",hs]]),Ms={state:{missions:[]},mutations:{setMissions(i,s){i.missions=s},updateMission(i,s){const e=i.missions.findIndex(a=>a.id===s.id);e!==-1&&(i.missions[e]=s)},addMission(i,s){i.missions.push(s)},updateName(i,s){const e=i.missions.find(a=>a.id==s.missionId);e&&(e.name=s.name)},updateTier(i,s){const e=i.missions.find(a=>a.id==s.missionId);e&&(e.tier=s.tier)},updateObjective(i,s){const e=i.missions.find(a=>a.id==s.missionId);e&&(e.objective=s.objective)},updateStatus(i,s){const e=i.missions.find(a=>a.id==s.missionId);e&&(e.status=s.status)},updateWinCondition(i,s){const e=i.missions.find(a=>a.id==s.missionId);e&&(e.winCondition=s.winCondition)},updateIsShowcaseMission(i,s){const e=i.missions.find(a=>a.id==s.missionId);e&&(e.isShowcaseMission=s.isShowcaseMission)},updateOpeningAnnounced(i,s){const e=i.missions.find(a=>a.id==s.missionId);e&&(e.openingAnnounced=s.openingAnnounced)},updateClosingAnnounced(i,s){const e=i.missions.find(a=>a.id==s.missionId);e&&(e.closingAnnounced=s.closingAnnounced)},updateWinningBeatmaps(i,s){const e=i.missions.find(a=>a.id==s.missionId);e&&(e.winningBeatmaps=s.winningBeatmaps)},updateInvalidBeatmaps(i,s){const e=i.missions.find(a=>a.id==s.missionId);e&&(e.invalidBeatmaps=s.invalidBeatmaps)},updateAssociatedMaps(i,s){const e=i.missions.find(a=>a.id==s.missionId);e&&(e.associatedMaps=s.associatedMaps)},updateModes(i,s){const e=i.missions.find(a=>a.id==s.missionId);e&&(e.modes=s.modes)},updateArtists(i,s){const e=i.missions.find(a=>a.id==s.missionId);e&&(e.artists=s.artists)},updateUserMaximumRankedBeatmapsCount(i,s){const e=i.missions.find(a=>a.id==s.missionId);e&&(e.userMaximumRankedBeatmapsCount=s.userMaximumRankedBeatmapsCount)},updateUserMaximumGlobalRank(i,s){const e=i.missions.find(a=>a.id==s.missionId);e&&(e.userMaximumGlobalRank=s.userMaximumGlobalRank)},updateUserMaximumPp(i,s){const e=i.missions.find(a=>a.id==s.missionId);e&&(e.userMaximumPp=s.userMaximumPp)},updateUserMinimumRank(i,s){const e=i.missions.find(a=>a.id==s.missionId);e&&(e.userMinimumRank=s.userMinimumRank)},updateBeatmapEarliestSubmissionDate(i,s){const e=i.missions.find(a=>a.id==s.missionId);e&&(e.beatmapEarliestSubmissionDate=s.beatmapEarliestSubmissionDate)},updateBeatmapLatestSubmissionDate(i,s){const e=i.missions.find(a=>a.id==s.missionId);e&&(e.beatmapLatestSubmissionDate=s.beatmapLatestSubmissionDate)},updateDeadline(i,s){const e=i.missions.find(a=>a.id==s.missionId);e&&(e.deadline=s.deadline)}}},gs=Ms,$s=R({name:"MissionInfo",components:{AssociatedBeatmaps:L,ModalDialog:x},props:{mission:{type:Object,required:!0}},data(){return{availableArtists:[],availableModes:P,name:this.mission.name,tier:this.mission.tier,objective:this.mission.objective,winCondition:this.mission.winCondition,status:this.mission.status,mode:"",selectedArtist:{},artists:this.mission.artists,userMaximumRankedBeatmapsCount:this.mission.userMaximumRankedBeatmapsCount,userMaximumGlobalRank:this.mission.userMaximumGlobalRank,userMaximumPp:this.mission.userMaximumPp,userMinimumRank:this.mission.userMinimumRank,beatmapEarliestSubmissionDate:new Date(this.mission.beatmapEarliestSubmissionDate),beatmapLatestSubmissionDate:new Date(this.mission.beatmapLatestSubmissionDate),deadline:new Date(this.mission.deadline)}},watch:{mission(){this.name=this.mission.name,this.tier=this.mission.tier,this.artists=this.mission.artists,this.objective=this.mission.objective,this.winCondition=this.mission.winCondition,this.status=this.mission.status,this.mode="",this.userMaximumRankedBeatmapsCount=this.mission.userMaximumRankedBeatmapsCount,this.userMaximumGlobalRank=this.mission.userMaximumGlobalRank,this.userMaximumPp=this.mission.userMaximumPp,this.userMinimumRank=this.mission.userMinimumRank,this.beatmapEarliestSubmissionDate=new Date(this.mission.beatmapEarliestSubmissionDate),this.beatmapLatestSubmissionDate=new Date(this.mission.beatmapLatestSubmissionDate),this.deadline=new Date(this.mission.deadline)}},async created(){const i=await this.$http.executeGet("/featuredArtists");i&&(this.availableArtists=i.sort((s,e)=>s.label.toLowerCase()>e.label.toLowerCase()?1:e.label.toLowerCase()>s.label.toLowerCase()?-1:0))},methods:{async updateName(i){const s=await this.$http.executePost(`/admin/missions/${this.mission.id}/rename`,{name:this.name},i);this.$http.isError(s)||(this.$store.dispatch("updateToastMessages",{message:"renamed mission",type:"info"}),this.$store.commit("updateName",{missionId:this.mission.id,name:s}))},async updateTier(i){const s=await this.$http.executePost(`/admin/missions/${this.mission.id}/updateTier`,{tier:this.tier},i);this.$http.isError(s)||(this.$store.dispatch("updateToastMessages",{message:"updated tier",type:"info"}),this.$store.commit("updateTier",{missionId:this.mission.id,tier:s}))},async updateObjective(i){const s=await this.$http.executePost(`/admin/missions/${this.mission.id}/updateObjective/`,{objective:this.objective},i);this.$http.isError(s)||(this.$store.dispatch("updateToastMessages",{message:"updated objective",type:"info"}),this.$store.commit("updateObjective",{missionId:this.mission.id,objective:s}))},async updateStatus(i){const s=await this.$http.executePost(`/admin/missions/${this.mission.id}/updateStatus/`,{status:this.status},i);this.$http.isError(s)||(this.$store.dispatch("updateToastMessages",{message:"updated status",type:"info"}),this.$store.commit("updateStatus",{missionId:this.mission.id,status:s}))},async updateUserMaximumRankedBeatmapsCount(i){const s=await this.$http.executePost(`/admin/missions/${this.mission.id}/updateUserMaximumRankedBeatmapsCount/`,{userMaximumRankedBeatmapsCount:this.userMaximumRankedBeatmapsCount},i);this.$http.isError(s)||(this.$store.dispatch("updateToastMessages",{message:"updated user max ranked maps count for mission",type:"info"}),this.$store.commit("updateUserMaximumRankedBeatmapsCount",{missionId:this.mission.id,userMaximumRankedBeatmapsCount:s}))},async updateUserMaximumGlobalRank(i){const s=await this.$http.executePost(`/admin/missions/${this.mission.id}/updateUserMaximumGlobalRank/`,{userMaximumGlobalRank:this.userMaximumGlobalRank},i);this.$http.isError(s)||(this.$store.dispatch("updateToastMessages",{message:"updated user max global rank for mission",type:"info"}),this.$store.commit("updateUserMaximumGlobalRank",{missionId:this.mission.id,userMaximumGlobalRank:s}))},async updateUserMaximumPp(i){const s=await this.$http.executePost(`/admin/missions/${this.mission.id}/updateUserMaximumPp/`,{userMaximumPp:this.userMaximumPp},i);this.$http.isError(s)||(this.$store.dispatch("updateToastMessages",{message:"updated user max pp for mission",type:"info"}),this.$store.commit("updateUserMaximumPp",{missionId:this.mission.id,userMaximumPp:s}))},async updateUserMinimumRank(i){const s=await this.$http.executePost(`/admin/missions/${this.mission.id}/updateUserMinimumRank/`,{userMinimumRank:this.userMinimumRank},i);this.$http.isError(s)||(this.$store.dispatch("updateToastMessages",{message:"updated user min mg rank for mission",type:"info"}),this.$store.commit("updateUserMinimumRank",{missionId:this.mission.id,userMinimumRank:s}))},async updateBeatmapEarliestSubmissionDate(i){const s=await this.$http.executePost(`/admin/missions/${this.mission.id}/updateBeatmapEarliestSubmissionDate/`,{beatmapEarliestSubmissionDate:this.beatmapEarliestSubmissionDate},i);this.$http.isError(s)||(this.$store.dispatch("updateToastMessages",{message:"updated beatmap earliest submission date",type:"info"}),this.$store.commit("updateBeatmapEarliestSubmissionDate",{missionId:this.mission.id,beatmapEarliestSubmissionDate:s}))},async updateBeatmapLatestSubmissionDate(i){const s=await this.$http.executePost(`/admin/missions/${this.mission.id}/updateBeatmapLatestSubmissionDate/`,{beatmapLatestSubmissionDate:this.beatmapLatestSubmissionDate},i);this.$http.isError(s)||(this.$store.dispatch("updateToastMessages",{message:"updated beatmap latest submission date",type:"info"}),this.$store.commit("updateBeatmapLatestSubmissionDate",{missionId:this.mission.id,beatmapLatestSubmissionDate:s}))},async updateDeadline(i){const s=await this.$http.executePost(`/admin/missions/${this.mission.id}/updateDeadline/`,{deadline:this.deadline},i);this.$http.isError(s)||(this.$store.dispatch("updateToastMessages",{message:"updated deadline",type:"info"}),this.$store.commit("updateDeadline",{missionId:this.mission.id,deadline:s}))},async updateWinCondition(i){const s=await this.$http.executePost(`/admin/missions/${this.mission.id}/updateWinCondition/`,{winCondition:this.winCondition},i);this.$http.isError(s)||(this.$store.dispatch("updateToastMessages",{message:"updated win condition",type:"info"}),this.$store.commit("updateWinCondition",{missionId:this.mission.id,winCondition:s}))},async toggleIsShowcaseMission(i){const s=await this.$http.executePost(`/admin/missions/${this.mission.id}/toggleIsShowcaseMission/`,{isShowcaseMission:!this.mission.isShowcaseMission},i);this.$http.isError(s)||(this.$store.dispatch("updateToastMessages",{message:"toggled isShowcaseMission",type:"info"}),this.$store.commit("updateIsShowcaseMission",{missionId:this.mission.id,isShowcaseMission:s}))},async toggleOpeningAnnounced(i){const s=await this.$http.executePost(`/admin/missions/${this.mission.id}/toggleOpeningAnnounced/`,{openingAnnounced:!this.mission.openingAnnounced},i);this.$http.isError(s)||(this.$store.dispatch("updateToastMessages",{message:"toggled openingAnnounced",type:"info"}),this.$store.commit("updateOpeningAnnounced",{missionId:this.mission.id,openingAnnounced:s}))},async toggleClosingAnnounced(i){const s=await this.$http.executePost(`/admin/missions/${this.mission.id}/toggleClosingAnnounced/`,{closingAnnounced:!this.mission.closingAnnounced},i);this.$http.isError(s)||(this.$store.dispatch("updateToastMessages",{message:"toggled closingAnnounced",type:"info"}),this.$store.commit("updateClosingAnnounced",{missionId:this.mission.id,closingAnnounced:s}))},async toggleMode(i){const s=await this.$http.executePost(`/admin/missions/${this.mission.id}/toggleMode/`,{mode:this.mode},i);this.$http.isError(s)||(this.$store.dispatch("updateToastMessages",{message:"toggled mode",type:"info"}),this.$store.commit("updateModes",{missionId:this.mission.id,modes:s}))},async toggleArtist(i){const s=await this.$http.executePost(`/admin/missions/${this.mission.id}/toggleArtist/`,{artistLabel:this.selectedArtist},i);this.$http.isError(s)||(this.$store.dispatch("updateToastMessages",{message:"toggled artist",type:"info"}),this.$store.commit("updateArtists",{missionId:this.mission.id,artists:s}))}}}),ws={class:"container"},ks={class:"row mt-2"},vs={class:"row mt-2"},Cs={class:"row mt-2"},Ss={class:"row mt-2"},ys={class:"row"},As=t("option",{value:"",disabled:""}," Select a status ",-1),Is=t("option",{value:"hidden"}," Hidden ",-1),Us=t("option",{value:"open"}," Open ",-1),Rs=t("option",{value:"closed"}," Closed ",-1),Ds=[As,Is,Us,Rs],Vs={class:"row"},Bs=t("option",{value:"",disabled:""}," Select a mode ",-1),Ts={class:"w-25 mt-2"},Es={key:0,class:"row"},Ps=t("option",{value:{},disabled:""}," Select an artist ",-1),xs={key:0,class:"w-25 mt-2"},Ls={class:"row mt-2"},js={class:"small"},Gs={class:"row"},Os={class:"col-sm-6 mt-2"},zs={class:"row"},Ns={class:"col-sm-6 mt-2"},Ws={class:"row"},Qs={class:"col-sm-6 mt-2"},qs=t("hr",null,null,-1),Fs=t("h5",null,"User requirements",-1),Hs={class:"row"},_s={class:"row mt-2"},Js={class:"row mt-2"},Ks={class:"row mt-2"},Xs={class:"row mt-2"},Ys={class:"small"},Zs={class:"row mt-2"},si={class:"small"};function ii(i,s,e,a,w,y){const M=f("associated-beatmaps"),m=f("modal-dialog");return d(),U(m,{id:"editMission"},{header:S(()=>[h(r(i.mission.name),1)]),default:S(()=>[t("div",ws,[t("div",ks,[c(t("input",{"onUpdate:modelValue":s[0]||(s[0]=o=>i.name=o),class:"form-control form-control-sm mx-2 w-50",type:"text",autocomplete:"off",placeholder:"mission name..."},null,512),[[b,i.name]]),t("button",{class:"btn btn-sm btn-outline-info w-25",onClick:s[1]||(s[1]=o=>i.updateName(o))}," Rename mission ")]),t("div",vs,[c(t("input",{"onUpdate:modelValue":s[2]||(s[2]=o=>i.tier=o),class:"form-control form-control-sm mx-2 w-50",type:"text",autocomplete:"off",placeholder:"tier..."},null,512),[[b,i.tier]]),t("button",{class:"btn btn-sm btn-outline-info w-25",onClick:s[3]||(s[3]=o=>i.updateTier(o))}," Update tier ")]),t("div",Cs,[c(t("textarea",{"onUpdate:modelValue":s[4]||(s[4]=o=>i.objective=o),class:"form-control form-control-sm mx-2 mt-2 w-50",type:"text",autocomplete:"off",placeholder:"mission objective..."},null,512),[[b,i.objective]]),t("button",{class:"btn btn-sm btn-outline-info w-25 mt-2",onClick:s[5]||(s[5]=o=>i.updateObjective(o))}," Update objective ")]),t("div",Ss,[c(t("textarea",{"onUpdate:modelValue":s[6]||(s[6]=o=>i.winCondition=o),class:"form-control form-control-sm mx-2 mt-2 w-50",type:"text",autocomplete:"off",placeholder:"mission win condition..."},null,512),[[b,i.winCondition]]),t("button",{class:"btn btn-sm btn-outline-info w-25 mt-2",onClick:s[7]||(s[7]=o=>i.updateWinCondition(o))}," Update win condition ")]),t("div",ys,[c(t("select",{"onUpdate:modelValue":s[8]||(s[8]=o=>i.status=o),class:"form-select form-select-sm mx-2 mt-2 w-50"},Ds,512),[[V,i.status]]),t("button",{class:"btn btn-sm btn-outline-info mt-2 w-25",onClick:s[9]||(s[9]=o=>i.updateStatus(o))}," Update status ")]),t("div",Vs,[c(t("select",{"onUpdate:modelValue":s[10]||(s[10]=o=>i.mode=o),class:"form-select form-select-sm mx-2 mt-2 w-25"},[Bs,(d(!0),u(v,null,k(i.availableModes,o=>(d(),u("option",{key:o},r(o),1))),128))],512),[[V,i.mode]]),t("div",Ts,r(i.mission.modes),1),t("button",{class:"btn btn-sm btn-outline-info mt-2 w-25",onClick:s[11]||(s[11]=o=>i.toggleMode(o))}," Toggle mode ")]),i.availableArtists?(d(),u("div",Es,[c(t("select",{"onUpdate:modelValue":s[12]||(s[12]=o=>i.selectedArtist=o),class:"form-select form-select-sm mx-2 mt-2 w-25"},[Ps,(d(!0),u(v,null,k(i.availableArtists,o=>(d(),u("option",{key:o.id},r(o.label),1))),128))],512),[[V,i.selectedArtist]]),i.mission.artists&&i.mission.artists.length?(d(),u("div",xs,r(i.mission.artists.map(o=>o.label)),1)):$("",!0),t("button",{class:"btn btn-sm btn-outline-info mt-2 w-25",onClick:s[13]||(s[13]=o=>i.toggleArtist(o))}," Toggle artist ")])):$("",!0),t("div",Ls,[c(t("input",{"onUpdate:modelValue":s[14]||(s[14]=o=>i.deadline=o),class:"form-control form-control-sm mx-2 w-50",type:"date",autocomplete:"off",placeholder:"deadline..."},null,512),[[b,i.deadline]]),t("button",{class:"btn btn-sm btn-outline-info w-25",onClick:s[15]||(s[15]=o=>i.updateDeadline(o))}," Update deadline "),t("span",js,[h("current: "),t("b",null,r(i.mission.deadline),1)])]),t("div",Gs,[t("div",Os,[h(" isShowcaseMission: "),t("span",{class:A(i.mission.isShowcaseMission?"text-success":"text-danger")},r(i.mission.isShowcaseMission),3)]),t("button",{class:"btn btn-sm btn-outline-info mt-2 ms-3 w-25",onClick:s[16]||(s[16]=o=>i.toggleIsShowcaseMission(o))}," Toggle isShowcaseMission ")]),t("div",zs,[t("div",Ns,[h(" Opening announced: "),t("span",{class:A(i.mission.openingAnnounced?"text-success":"text-danger")},r(i.mission.openingAnnounced),3)]),t("button",{class:"btn btn-sm btn-outline-info mt-2 ms-3 w-25",onClick:s[17]||(s[17]=o=>i.toggleOpeningAnnounced(o))}," Toggle openingAnnounced ")]),t("div",Ws,[t("div",Qs,[h(" Closing announced: "),t("span",{class:A(i.mission.closingAnnounced?"text-success":"text-danger")},r(i.mission.closingAnnounced),3)]),t("button",{class:"btn btn-sm btn-outline-info mt-2 ms-3 w-25",onClick:s[18]||(s[18]=o=>i.toggleClosingAnnounced(o))}," Toggle closingAnnounced ")]),qs,Fs,t("div",Hs,[c(t("input",{"onUpdate:modelValue":s[19]||(s[19]=o=>i.userMaximumRankedBeatmapsCount=o),class:"form-control form-control-sm mx-2 w-50",type:"text",autocomplete:"off",placeholder:"maximum ranked maps allowed..."},null,512),[[b,i.userMaximumRankedBeatmapsCount]]),t("button",{class:"btn btn-sm btn-outline-info w-25",onClick:s[20]||(s[20]=o=>i.updateUserMaximumRankedBeatmapsCount(o))}," Update user max ranked maps count ")]),t("div",_s,[c(t("input",{"onUpdate:modelValue":s[21]||(s[21]=o=>i.userMaximumGlobalRank=o),class:"form-control form-control-sm mx-2 w-50",type:"number",autocomplete:"off",placeholder:"maximum global rank allowed..."},null,512),[[b,i.userMaximumGlobalRank]]),t("button",{class:"btn btn-sm btn-outline-info w-25",onClick:s[22]||(s[22]=o=>i.updateUserMaximumGlobalRank(o))}," Update user max global rank ")]),t("div",Js,[c(t("input",{"onUpdate:modelValue":s[23]||(s[23]=o=>i.userMaximumPp=o),class:"form-control form-control-sm mx-2 w-50",type:"number",autocomplete:"off",placeholder:"maximum pp allowed..."},null,512),[[b,i.userMaximumPp]]),t("button",{class:"btn btn-sm btn-outline-info w-25",onClick:s[24]||(s[24]=o=>i.updateUserMaximumPp(o))}," Update user max pp ")]),t("div",Ks,[c(t("input",{"onUpdate:modelValue":s[25]||(s[25]=o=>i.userMinimumRank=o),class:"form-control form-control-sm mx-2 w-50",type:"number",autocomplete:"off",placeholder:"minimum mg rank allowed..."},null,512),[[b,i.userMinimumRank]]),t("button",{class:"btn btn-sm btn-outline-info w-25",onClick:s[26]||(s[26]=o=>i.updateUserMinimumRank(o))}," Update user min rank ")]),t("div",Xs,[c(t("input",{"onUpdate:modelValue":s[27]||(s[27]=o=>i.beatmapEarliestSubmissionDate=o),class:"form-control form-control-sm mx-2 w-50",type:"date",autocomplete:"off",placeholder:"earliest submission date allowed..."},null,512),[[b,i.beatmapEarliestSubmissionDate]]),t("button",{class:"btn btn-sm btn-outline-info w-25",onClick:s[28]||(s[28]=o=>i.updateBeatmapEarliestSubmissionDate(o))}," Update beatmap earliest submission date "),t("span",Ys,[h("current: "),t("b",null,r(i.mission.beatmapEarliestSubmissionDate),1)])]),t("div",Zs,[c(t("input",{"onUpdate:modelValue":s[29]||(s[29]=o=>i.beatmapLatestSubmissionDate=o),class:"form-control form-control-sm mx-2 w-50",type:"date",autocomplete:"off",placeholder:"latest submission date allowed..."},null,512),[[b,i.beatmapLatestSubmissionDate]]),t("button",{class:"btn btn-sm btn-outline-info w-25",onClick:s[30]||(s[30]=o=>i.updateBeatmapLatestSubmissionDate(o))}," Update beatmap latest submission date "),t("span",si,[h("current: "),t("b",null,r(i.mission.beatmapLatestSubmissionDate),1)])]),i.mission.associatedMaps&&i.mission.associatedMaps.length?(d(),U(M,{key:1,class:"my-4",mission:i.mission,"is-admin-page":!0},null,8,["mission"])):$("",!0)])]),_:1})}const ti=D($s,[["render",ii]]),ei=R({name:"MissionWinners",computed:{...T({missions:i=>i.missionsAdmin.missions}),closedMissions(){return this.missions.filter(i=>i.status==j.Closed)}},methods:{loadWinners(){let i=[];for(const l of this.closedMissions)i=i.concat(l.winningBeatmaps);const s=i.map(l=>l.host),e=s.map(l=>l.username);let a=[],w=[];for(const l of i)if(l.mission.toString()=="65a3376e48f36f2622ef2f44"){for(const g of l.tasks)if(g.name!==E.Hitsounds&&g.name!==E.Storyboard)for(const I of g.mappers)!w.includes(I.username)&&l.host.id!==I.id&&(a.push(I),w.push(I.username))}const y=s.concat(a);let m=e.concat(w).reduce(function(l,g){return l[g]?++l[g]:l[g]=1,l},{});const o=[],C=[];for(const l of y)C.includes(l.osuId)||(C.push(l.osuId),o.push({username:l.username,osuId:l.osuId,total:m[l.username],isQuestTrailblazer:l.isQuestTrailblazer}));return o.sort((l,g)=>g.total-l.total)},async toggleIsQuestTrailblazer(i,s){const e=await this.$http.executePost("/admin/missions/toggleIsQuestTrailblazer/",{userOsuId:i},s);this.$http.isError(e)||this.$store.dispatch("updateToastMessages",{message:"toggled isQuestTrailblazer, refresh to see changes",type:"info"})}}}),oi={class:"container card card-body py-1 my-2"},ni={key:0},ai=["onClick"];function mi(i,s,e,a,w,y){const M=f("user-link");return d(),u("div",oi,[(d(!0),u(v,null,k(i.loadWinners(),m=>(d(),u("div",{key:m.osuId},[p(M,{user:m},null,8,["user"]),h(" - "+r(m.total)+" ",1),m.total>=3&&!m.isQuestTrailblazer?(d(),u("code",ni,".add-badge "+r(m.osuId)+` questtrailblazer.png "Completed 3+ priority quests in the Mappers' Guild" https://osu.ppy.sh/wiki/en/Community/Mappers_Guild#additional-rewards`,1)):$("",!0),m.total>=3&&!m.isQuestTrailblazer?(d(),u("button",{key:1,class:"btn btn-outline-info btn-sm ms-2",href:"#",onClick:B(o=>i.toggleIsQuestTrailblazer(m.osuId,o),["prevent"])}," click this after giving user badge ",8,ai)):$("",!0)]))),128))])}const di=D(ei,[["render",mi]]),li=R({components:{DataTable:Q,SubmitMissionModal:fs,MissionInfo:ti,MissionWinners:di},data(){return{selectedMissionId:""}},computed:{...T({missions:i=>i.missionsAdmin.missions}),selectedMission(){return this.missions.find(i=>i.id===this.selectedMissionId)}},beforeCreate(){this.$store.hasModule("missionsAdmin")||this.$store.registerModule("missionsAdmin",gs)},unmounted(){this.$store.hasModule("missionsAdmin")&&this.$store.unregisterModule("missionsAdmin")},async created(){const i=await this.$http.initialRequest("/admin/missions/load");this.$http.isError(i)||this.$store.commit("setMissions",i)},methods:{updateMission(i){const s=this.missions.findIndex(e=>e.id==i.id);s!==-1&&(this.missions[s]=i)},findTierImage(i){switch(i){case 1:return"/images/bronze.png";case 2:return"/images/silver.png";case 3:return"/images/gold.png";case 4:return"/images/platinum.png";default:return"/images/bronze.png"}}}});const ui=i=>(G("data-v-e57f7ab8"),i=i(),O(),i),ri={class:"container card card-body py-1"},pi={class:"row"},ci={class:"col"},bi=ui(()=>t("button",{class:"btn btn-sm btn-info w-100 mb-1","data-bs-toggle":"modal","data-bs-target":"#submitMission"}," Add mission ",-1)),hi=["src"];function fi(i,s,e,a,w,y){const M=f("data-table"),m=f("mission-winners"),o=f("submit-mission-modal"),C=f("mission-info");return d(),u("div",null,[t("div",ri,[t("div",pi,[t("div",ci,[bi,p(M,{data:i.missions,headers:["name","tier","status","announce"],"custom-data-target":"#editMission","onUpdate:selectedId":s[0]||(s[0]=n=>i.selectedMissionId=n)},{default:S(({obj:n})=>[t("td",null,r(n.name),1),t("td",null,[t("img",{src:i.findTierImage(n.tier),class:"table-mission-tier"},null,8,hi)]),t("td",null,r(n.status),1),t("td",null,[t("span",{class:A(n.openingAnnounced?"text-success":"text-danger")},"open",2),h("/"),t("span",{class:A(n.closingAnnounced?"text-success":"text-danger")},"close",2)])]),_:1},8,["data"])])])]),p(m),p(o),i.selectedMission?(d(),U(C,{key:0,mission:i.selectedMission,onUpdateMission:s[1]||(s[1]=n=>i.updateMission(n))},null,8,["mission"])):$("",!0)])}const vi=D(li,[["render",fi],["__scopeId","data-v-e57f7ab8"]]);export{vi as default};

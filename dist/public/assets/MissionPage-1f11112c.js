import{d as y,U as V,m as x,_ as S,o as m,c as k,w,r as h,a as e,j as u,e as d,f as g,t as l,F as $,l as v,k as f,y as U,P as E,b as p,g as c,v as A,n as C,s as P,u as L}from"./index-c409f873.js";import{M as B}from"./ModalDialog-561e3d0a.js";import{b as T,F as j,c as G}from"./FormTextarea-0d8d6b23.js";import{D as O}from"./DataTable-92b3aca8.js";const N=y({name:"SubmitMissionModal",components:{ModalDialog:B,FormInput:T,FormSelect:j,FormTextarea:G},props:{isAdmin:Boolean},data(){return{modes:V,featuredArtists:[],selectedArtists:[],selectedArtistId:"",selectedMode:"",selectedModes:[],tier:"",deadline:"",objective:"",name:"",winCondition:"",userMaximumRankedBeatmapsCount:null,userMaximumGlobalRank:null,userMaximumPp:null,beatmapEarliestSubmissionDate:null,beatmapLatestSubmissionDate:null}},computed:{...x(["loggedInUser"])},async created(){const t=await this.$http.executeGet("/featuredArtists");t&&(this.featuredArtists=t.sort((s,i)=>s.label.toLowerCase()>i.label.toLowerCase()?1:i.label.toLowerCase()>s.label.toLowerCase()?-1:0))},methods:{addArtist(){if(this.selectedArtistId.length){const t=this.featuredArtists.findIndex(a=>a.id==this.selectedArtistId),s=this.featuredArtists[t],i={id:s.id,_id:s._id,label:s.label,osuId:s.osuId};this.selectedArtists.push(i)}},addMode(){this.selectedMode.length&&this.selectedModes.push(this.selectedMode)},removeArtist(t){const s=this.selectedArtists.findIndex(i=>i.id==t);this.selectedArtists.splice(s,1)},removeMode(t){const s=this.selectedModes.findIndex(i=>i==t);this.selectedModes.splice(s,1)},async addMission(t){if(typeof this.name=="number"){this.$store.dispatch("updateToastMessages",{message:"Choose a name that doesn't start with a number",type:"danger"});return}const s=await this.$http.executePost("/admin/missions/create",{artists:this.selectedArtists,tier:this.tier,name:this.name,deadline:this.deadline,objective:this.objective,modes:this.selectedModes,winCondition:this.winCondition,userMaximumRankedBeatmapsCount:this.userMaximumRankedBeatmapsCount,userMaximumGlobalRank:this.userMaximumGlobalRank,userMaximumPp:this.userMaximumPp,beatmapEarliestSubmissionDate:this.beatmapEarliestSubmissionDate,beatmapLatestSubmissionDate:this.beatmapLatestSubmissionDate},t);this.$http.isError(s)||(this.$store.commit("addMission",s),this.$bs.hideModal("submitMission"))}}}),W={class:"container"},F=e("h5",null,"General",-1),q={class:"row"},z=e("option",{value:"-",disabled:""}," --- ",-1),_=["value"],H={class:"col-sm-1"},J={class:"small text-secondary"},K={key:0},Q=["onClick"],X=e("i",{class:"fas fa-minus"},null,-1),Y=[X],Z={class:"row"},ss=e("option",{value:"-",disabled:""}," --- ",-1),ts=["value"],es={class:"col-sm-1"},is={class:"mt-2"},os={class:"small text-secondary"},ns={key:0},as=["onClick"],ms=e("i",{class:"fas fa-minus"},null,-1),ds=[ms],ls=e("hr",null,null,-1),us=e("h5",null,"User requirements",-1);function rs(t,s,i,a,I,D){const M=h("form-select"),r=h("form-input"),o=h("form-textarea"),b=h("modal-dialog");return m(),k(b,{id:"submitMission",title:"Submit mission"},{default:w(()=>[e("div",W,[F,e("div",q,[u(M,{modelValue:t.selectedArtistId,"onUpdate:modelValue":s[0]||(s[0]=n=>t.selectedArtistId=n),class:"col-sm-11",label:"Artist",placeholder:"Any artist (selected by default)"},{default:w(()=>[z,(m(!0),d($,null,g(t.featuredArtists,n=>(m(),d("option",{key:n.id,value:n.id},l(n.label),9,_))),128))]),_:1},8,["modelValue"]),e("div",H,[e("button",{id:"artistButton",class:"btn btn-sm btn-outline-info",onClick:s[1]||(s[1]=n=>t.addArtist())}," Add ")])]),e("div",null,[e("ul",J,[t.selectedArtists.length?v("",!0):(m(),d("li",K," Any artist (selected by default) ")),(m(!0),d($,null,g(t.selectedArtists,n=>(m(),d("li",{key:n.osuId},[f(l(n.label)+" ",1),e("a",{href:"#",class:"text-danger",onClick:U(R=>t.removeArtist(n.id),["prevent"])},Y,8,Q)]))),128))])]),e("div",Z,[u(M,{modelValue:t.selectedMode,"onUpdate:modelValue":s[2]||(s[2]=n=>t.selectedMode=n),class:"col-sm-11",label:"Mode",placeholder:"Any mode (selected by default)"},{default:w(()=>[ss,(m(!0),d($,null,g(t.modes,n=>(m(),d("option",{key:n,value:n},l(n),9,ts))),128))]),_:1},8,["modelValue"]),e("div",es,[e("button",{id:"artistButton",class:"btn btn-sm btn-outline-info",onClick:s[3]||(s[3]=n=>t.addMode())}," Add ")])]),e("div",is,[e("ul",os,[t.selectedModes.length?v("",!0):(m(),d("li",ns," Any mode (selected by default) ")),(m(!0),d($,null,g(t.selectedModes,n=>(m(),d("li",{key:n},[f(l(n)+" ",1),e("a",{href:"#",class:"text-danger",onClick:U(R=>t.removeMode(n),["prevent"])},ds,8,as)]))),128))])]),u(r,{modelValue:t.tier,"onUpdate:modelValue":s[4]||(s[4]=n=>t.tier=n),modelModifiers:{number:!0},label:"Tier",type:"number"},null,8,["modelValue"]),u(r,{modelValue:t.name,"onUpdate:modelValue":s[5]||(s[5]=n=>t.name=n),modelModifiers:{number:!0},label:"Name",type:"text"},null,8,["modelValue"]),u(o,{modelValue:t.objective,"onUpdate:modelValue":s[6]||(s[6]=n=>t.objective=n),label:"Objective"},null,8,["modelValue"]),u(o,{modelValue:t.winCondition,"onUpdate:modelValue":s[7]||(s[7]=n=>t.winCondition=n),label:"Win condition"},null,8,["modelValue"]),u(r,{modelValue:t.deadline,"onUpdate:modelValue":s[8]||(s[8]=n=>t.deadline=n),label:"Deadline",type:"date"},null,8,["modelValue"]),ls,us,u(r,{modelValue:t.userMaximumRankedBeatmapsCount,"onUpdate:modelValue":s[9]||(s[9]=n=>t.userMaximumRankedBeatmapsCount=n),modelModifiers:{number:!0},label:"Max ranked maps",type:"number"},null,8,["modelValue"]),u(r,{modelValue:t.userMaximumGlobalRank,"onUpdate:modelValue":s[10]||(s[10]=n=>t.userMaximumGlobalRank=n),modelModifiers:{number:!0},label:"Max global rank",type:"number"},null,8,["modelValue"]),u(r,{modelValue:t.userMaximumPp,"onUpdate:modelValue":s[11]||(s[11]=n=>t.userMaximumPp=n),modelModifiers:{number:!0},label:"Max pp",type:"number"},null,8,["modelValue"]),u(r,{modelValue:t.beatmapEarliestSubmissionDate,"onUpdate:modelValue":s[12]||(s[12]=n=>t.beatmapEarliestSubmissionDate=n),modelModifiers:{number:!0},label:"Earliest submission date",type:"date"},null,8,["modelValue"]),u(r,{modelValue:t.beatmapLatestSubmissionDate,"onUpdate:modelValue":s[13]||(s[13]=n=>t.beatmapLatestSubmissionDate=n),modelModifiers:{number:!0},label:"Latest submission date",type:"date"},null,8,["modelValue"]),e("button",{class:"btn btn-outline-success w-100",onClick:s[14]||(s[14]=n=>t.addMission(n))}," Add mission ")])]),_:1})}const ps=S(N,[["render",rs]]),bs={state:{missions:[]},mutations:{setMissions(t,s){t.missions=s},updateMission(t,s){const i=t.missions.findIndex(a=>a.id===s.id);i!==-1&&(t.missions[i]=s)},addMission(t,s){t.missions.push(s)},updateName(t,s){const i=t.missions.find(a=>a.id==s.missionId);i&&(i.name=s.name)},updateTier(t,s){const i=t.missions.find(a=>a.id==s.missionId);i&&(i.tier=s.tier)},updateObjective(t,s){const i=t.missions.find(a=>a.id==s.missionId);i&&(i.objective=s.objective)},updateStatus(t,s){const i=t.missions.find(a=>a.id==s.missionId);i&&(i.status=s.status)},updateWinCondition(t,s){const i=t.missions.find(a=>a.id==s.missionId);i&&(i.winCondition=s.winCondition)},updateOpeningAnnounced(t,s){const i=t.missions.find(a=>a.id==s.missionId);i&&(i.openingAnnounced=s.openingAnnounced)},updateClosingAnnounced(t,s){const i=t.missions.find(a=>a.id==s.missionId);i&&(i.closingAnnounced=s.closingAnnounced)},updateWinningBeatmaps(t,s){const i=t.missions.find(a=>a.id==s.missionId);i&&(i.winningBeatmaps=s.winningBeatmaps)},updateInvalidBeatmaps(t,s){const i=t.missions.find(a=>a.id==s.missionId);i&&(i.invalidBeatmaps=s.invalidBeatmaps)},updateAssociatedMaps(t,s){const i=t.missions.find(a=>a.id==s.missionId);i&&(i.associatedMaps=s.associatedMaps)},updateModes(t,s){const i=t.missions.find(a=>a.id==s.missionId);i&&(i.modes=s.modes)},updateArtists(t,s){const i=t.missions.find(a=>a.id==s.missionId);i&&(i.artists=s.artists)},updateUserMaximumRankedBeatmapsCount(t,s){const i=t.missions.find(a=>a.id==s.missionId);i&&(i.userMaximumRankedBeatmapsCount=s.userMaximumRankedBeatmapsCount)},updateUserMaximumGlobalRank(t,s){const i=t.missions.find(a=>a.id==s.missionId);i&&(i.userMaximumGlobalRank=s.userMaximumGlobalRank)},updateUserMaximumPp(t,s){const i=t.missions.find(a=>a.id==s.missionId);i&&(i.userMaximumPp=s.userMaximumPp)},updateBeatmapEarliestSubmissionDate(t,s){const i=t.missions.find(a=>a.id==s.missionId);i&&(i.beatmapEarliestSubmissionDate=s.beatmapEarliestSubmissionDate)},updateBeatmapLatestSubmissionDate(t,s){const i=t.missions.find(a=>a.id==s.missionId);i&&(i.beatmapLatestSubmissionDate=s.beatmapLatestSubmissionDate)}}},cs=bs,hs=y({name:"MissionInfo",components:{AssociatedBeatmaps:E,ModalDialog:B},props:{mission:{type:Object,required:!0}},data(){return{availableArtists:[],availableModes:V,name:this.mission.name,tier:this.mission.tier,objective:this.mission.objective,winCondition:this.mission.winCondition,status:this.mission.status,mode:"",selectedArtist:{},artists:this.mission.artists,userMaximumRankedBeatmapsCount:this.mission.userMaximumRankedBeatmapsCount,userMaximumGlobalRank:this.mission.userMaximumGlobalRank,userMaximumPp:this.mission.userMaximumPp,beatmapEarliestSubmissionDate:new Date(this.mission.beatmapEarliestSubmissionDate),beatmapLatestSubmissionDate:new Date(this.mission.beatmapLatestSubmissionDate)}},watch:{mission(){this.name=this.mission.name,this.tier=this.mission.tier,this.artists=this.mission.artists,this.objective=this.mission.objective,this.winCondition=this.mission.winCondition,this.status=this.mission.status,this.mode="",this.userMaximumRankedBeatmapsCount=this.mission.userMaximumRankedBeatmapsCount,this.userMaximumGlobalRank=this.mission.userMaximumGlobalRank,this.userMaximumPp=this.mission.userMaximumPp,this.beatmapEarliestSubmissionDate=new Date(this.mission.beatmapEarliestSubmissionDate),this.beatmapLatestSubmissionDate=new Date(this.mission.beatmapLatestSubmissionDate)}},async created(){const t=await this.$http.executeGet("/featuredArtists");t&&(this.availableArtists=t.sort((s,i)=>s.label.toLowerCase()>i.label.toLowerCase()?1:i.label.toLowerCase()>s.label.toLowerCase()?-1:0))},methods:{async updateName(t){const s=await this.$http.executePost(`/admin/missions/${this.mission.id}/rename`,{name:this.name},t);this.$http.isError(s)||(this.$store.dispatch("updateToastMessages",{message:"renamed mission",type:"info"}),this.$store.commit("updateName",{missionId:this.mission.id,name:s}))},async updateTier(t){const s=await this.$http.executePost(`/admin/missions/${this.mission.id}/updateTier`,{tier:this.tier},t);this.$http.isError(s)||(this.$store.dispatch("updateToastMessages",{message:"updated tier",type:"info"}),this.$store.commit("updateTier",{missionId:this.mission.id,tier:s}))},async updateObjective(t){const s=await this.$http.executePost(`/admin/missions/${this.mission.id}/updateObjective/`,{objective:this.objective},t);this.$http.isError(s)||(this.$store.dispatch("updateToastMessages",{message:"updated objective",type:"info"}),this.$store.commit("updateObjective",{missionId:this.mission.id,objective:s}))},async updateStatus(t){const s=await this.$http.executePost(`/admin/missions/${this.mission.id}/updateStatus/`,{status:this.status},t);this.$http.isError(s)||(this.$store.dispatch("updateToastMessages",{message:"updated status",type:"info"}),this.$store.commit("updateStatus",{missionId:this.mission.id,status:s}))},async updateUserMaximumRankedBeatmapsCount(t){const s=await this.$http.executePost(`/admin/missions/${this.mission.id}/updateUserMaximumRankedBeatmapsCount/`,{userMaximumRankedBeatmapsCount:this.userMaximumRankedBeatmapsCount},t);this.$http.isError(s)||(this.$store.dispatch("updateToastMessages",{message:"updated user max ranked maps count for mission",type:"info"}),this.$store.commit("updateUserMaximumRankedBeatmapsCount",{missionId:this.mission.id,userMaximumRankedBeatmapsCount:s}))},async updateUserMaximumGlobalRank(t){const s=await this.$http.executePost(`/admin/missions/${this.mission.id}/updateUserMaximumGlobalRank/`,{userMaximumGlobalRank:this.userMaximumGlobalRank},t);this.$http.isError(s)||(this.$store.dispatch("updateToastMessages",{message:"updated user max global rank for mission",type:"info"}),this.$store.commit("updateUserMaximumGlobalRank",{missionId:this.mission.id,userMaximumGlobalRank:s}))},async updateUserMaximumPp(t){const s=await this.$http.executePost(`/admin/missions/${this.mission.id}/updateUserMaximumPp/`,{userMaximumPp:this.userMaximumPp},t);this.$http.isError(s)||(this.$store.dispatch("updateToastMessages",{message:"updated user max pp for mission",type:"info"}),this.$store.commit("updateUserMaximumPp",{missionId:this.mission.id,userMaximumPp:s}))},async updateBeatmapEarliestSubmissionDate(t){const s=await this.$http.executePost(`/admin/missions/${this.mission.id}/updateBeatmapEarliestSubmissionDate/`,{beatmapEarliestSubmissionDate:this.beatmapEarliestSubmissionDate},t);this.$http.isError(s)||(this.$store.dispatch("updateToastMessages",{message:"updated beatmap earliest submission date",type:"info"}),this.$store.commit("updateBeatmapEarliestSubmissionDate",{missionId:this.mission.id,beatmapEarliestSubmissionDate:s}))},async updateBeatmapLatestSubmissionDate(t){const s=await this.$http.executePost(`/admin/missions/${this.mission.id}/updateBeatmapLatestSubmissionDate/`,{beatmapLatestSubmissionDate:this.beatmapLatestSubmissionDate},t);this.$http.isError(s)||(this.$store.dispatch("updateToastMessages",{message:"updated beatmap latest submission date",type:"info"}),this.$store.commit("updateBeatmapLatestSubmissionDate",{missionId:this.mission.id,beatmapLatestSubmissionDate:s}))},async updateWinCondition(t){const s=await this.$http.executePost(`/admin/missions/${this.mission.id}/updateWinCondition/`,{winCondition:this.winCondition},t);this.$http.isError(s)||(this.$store.dispatch("updateToastMessages",{message:"updated win condition",type:"info"}),this.$store.commit("updateWinCondition",{missionId:this.mission.id,winCondition:s}))},async toggleOpeningAnnounced(t){const s=await this.$http.executePost(`/admin/missions/${this.mission.id}/toggleOpeningAnnounced/`,{openingAnnounced:!this.mission.openingAnnounced},t);this.$http.isError(s)||(this.$store.dispatch("updateToastMessages",{message:"toggled openingAnnounced",type:"info"}),this.$store.commit("updateOpeningAnnounced",{missionId:this.mission.id,openingAnnounced:s}))},async toggleClosingAnnounced(t){const s=await this.$http.executePost(`/admin/missions/${this.mission.id}/toggleClosingAnnounced/`,{closingAnnounced:!this.mission.closingAnnounced},t);this.$http.isError(s)||(this.$store.dispatch("updateToastMessages",{message:"toggled closingAnnounced",type:"info"}),this.$store.commit("updateClosingAnnounced",{missionId:this.mission.id,closingAnnounced:s}))},async toggleMode(t){const s=await this.$http.executePost(`/admin/missions/${this.mission.id}/toggleMode/`,{mode:this.mode},t);this.$http.isError(s)||(this.$store.dispatch("updateToastMessages",{message:"toggled mode",type:"info"}),this.$store.commit("updateModes",{missionId:this.mission.id,modes:s}))},async toggleArtist(t){const s=await this.$http.executePost(`/admin/missions/${this.mission.id}/toggleArtist/`,{artistLabel:this.selectedArtist},t);this.$http.isError(s)||(this.$store.dispatch("updateToastMessages",{message:"toggled artist",type:"info"}),this.$store.commit("updateArtists",{missionId:this.mission.id,artists:s}))}}}),fs={class:"container"},Ms={class:"row mt-2"},gs={class:"row mt-2"},$s={class:"row mt-2"},ws={class:"row mt-2"},vs={class:"row"},ks=e("option",{value:"",disabled:""}," Select a status ",-1),Cs=e("option",{value:"hidden"}," Hidden ",-1),As=e("option",{value:"open"}," Open ",-1),ys=e("option",{value:"closed"}," Closed ",-1),Ss=[ks,Cs,As,ys],Is={class:"row"},Ds=e("option",{value:"",disabled:""}," Select a mode ",-1),Us={class:"w-25 mt-2"},Vs={key:0,class:"row"},xs=e("option",{value:{},disabled:""}," Select an artist ",-1),Bs={key:0,class:"w-25 mt-2"},Rs={class:"row"},Es={class:"col-sm-6 mt-2"},Ps={class:"row"},Ls={class:"col-sm-6 mt-2"},Ts=e("hr",null,null,-1),js=e("h5",null,"User requirements",-1),Gs={class:"row"},Os={class:"row mt-2"},Ns={class:"row mt-2"},Ws={class:"row mt-2"},Fs={class:"small"},qs={class:"row mt-2"},zs={class:"small"};function _s(t,s,i,a,I,D){const M=h("associated-beatmaps"),r=h("modal-dialog");return m(),k(r,{id:"editMission"},{header:w(()=>[f(l(t.mission.name),1)]),default:w(()=>[e("div",fs,[e("div",Ms,[p(e("input",{"onUpdate:modelValue":s[0]||(s[0]=o=>t.name=o),class:"form-control form-control-sm mx-2 w-50",type:"text",autocomplete:"off",placeholder:"mission name..."},null,512),[[c,t.name]]),e("button",{class:"btn btn-sm btn-outline-info w-25",onClick:s[1]||(s[1]=o=>t.updateName(o))}," Rename mission ")]),e("div",gs,[p(e("input",{"onUpdate:modelValue":s[2]||(s[2]=o=>t.tier=o),class:"form-control form-control-sm mx-2 w-50",type:"text",autocomplete:"off",placeholder:"tier..."},null,512),[[c,t.tier]]),e("button",{class:"btn btn-sm btn-outline-info w-25",onClick:s[3]||(s[3]=o=>t.updateTier(o))}," Update tier ")]),e("div",$s,[p(e("textarea",{"onUpdate:modelValue":s[4]||(s[4]=o=>t.objective=o),class:"form-control form-control-sm mx-2 mt-2 w-50",type:"text",autocomplete:"off",placeholder:"mission objective..."},null,512),[[c,t.objective]]),e("button",{class:"btn btn-sm btn-outline-info w-25 mt-2",onClick:s[5]||(s[5]=o=>t.updateObjective(o))}," Update objective ")]),e("div",ws,[p(e("textarea",{"onUpdate:modelValue":s[6]||(s[6]=o=>t.winCondition=o),class:"form-control form-control-sm mx-2 mt-2 w-50",type:"text",autocomplete:"off",placeholder:"mission win condition..."},null,512),[[c,t.winCondition]]),e("button",{class:"btn btn-sm btn-outline-info w-25 mt-2",onClick:s[7]||(s[7]=o=>t.updateWinCondition(o))}," Update win condition ")]),e("div",vs,[p(e("select",{"onUpdate:modelValue":s[8]||(s[8]=o=>t.status=o),class:"form-select form-select-sm mx-2 mt-2 w-50"},Ss,512),[[A,t.status]]),e("button",{class:"btn btn-sm btn-outline-info mt-2 w-25",onClick:s[9]||(s[9]=o=>t.updateStatus(o))}," Update status ")]),e("div",Is,[p(e("select",{"onUpdate:modelValue":s[10]||(s[10]=o=>t.mode=o),class:"form-select form-select-sm mx-2 mt-2 w-25"},[Ds,(m(!0),d($,null,g(t.availableModes,o=>(m(),d("option",{key:o},l(o),1))),128))],512),[[A,t.mode]]),e("div",Us,l(t.mission.modes),1),e("button",{class:"btn btn-sm btn-outline-info mt-2 w-25",onClick:s[11]||(s[11]=o=>t.toggleMode(o))}," Toggle mode ")]),t.availableArtists?(m(),d("div",Vs,[p(e("select",{"onUpdate:modelValue":s[12]||(s[12]=o=>t.selectedArtist=o),class:"form-select form-select-sm mx-2 mt-2 w-25"},[xs,(m(!0),d($,null,g(t.availableArtists,o=>(m(),d("option",{key:o.id},l(o.label),1))),128))],512),[[A,t.selectedArtist]]),t.mission.artists&&t.mission.artists.length?(m(),d("div",Bs,l(t.mission.artists.map(o=>o.label)),1)):v("",!0),e("button",{class:"btn btn-sm btn-outline-info mt-2 w-25",onClick:s[13]||(s[13]=o=>t.toggleArtist(o))}," Toggle artist ")])):v("",!0),e("div",Rs,[e("div",Es,[f(" Opening announced: "),e("span",{class:C(t.mission.openingAnnounced?"text-success":"text-danger")},l(t.mission.openingAnnounced),3)]),e("button",{class:"btn btn-sm btn-outline-info mt-2 ms-3 w-25",onClick:s[14]||(s[14]=o=>t.toggleOpeningAnnounced(o))}," Toggle openingAnnounced ")]),e("div",Ps,[e("div",Ls,[f(" Closing announced: "),e("span",{class:C(t.mission.closingAnnounced?"text-success":"text-danger")},l(t.mission.closingAnnounced),3)]),e("button",{class:"btn btn-sm btn-outline-info mt-2 ms-3 w-25",onClick:s[15]||(s[15]=o=>t.toggleClosingAnnounced(o))}," Toggle closingAnnounced ")]),Ts,js,e("div",Gs,[p(e("input",{"onUpdate:modelValue":s[16]||(s[16]=o=>t.userMaximumRankedBeatmapsCount=o),class:"form-control form-control-sm mx-2 w-50",type:"text",autocomplete:"off",placeholder:"maximum ranked maps allowed..."},null,512),[[c,t.userMaximumRankedBeatmapsCount]]),e("button",{class:"btn btn-sm btn-outline-info w-25",onClick:s[17]||(s[17]=o=>t.updateUserMaximumRankedBeatmapsCount(o))}," Update user max ranked maps count ")]),e("div",Os,[p(e("input",{"onUpdate:modelValue":s[18]||(s[18]=o=>t.userMaximumGlobalRank=o),class:"form-control form-control-sm mx-2 w-50",type:"number",autocomplete:"off",placeholder:"maximum global rank allowed..."},null,512),[[c,t.userMaximumGlobalRank]]),e("button",{class:"btn btn-sm btn-outline-info w-25",onClick:s[19]||(s[19]=o=>t.updateUserMaximumGlobalRank(o))}," Update user max global rank ")]),e("div",Ns,[p(e("input",{"onUpdate:modelValue":s[20]||(s[20]=o=>t.userMaximumPp=o),class:"form-control form-control-sm mx-2 w-50",type:"number",autocomplete:"off",placeholder:"maximum pp allowed..."},null,512),[[c,t.userMaximumPp]]),e("button",{class:"btn btn-sm btn-outline-info w-25",onClick:s[21]||(s[21]=o=>t.updateUserMaximumPp(o))}," Update user max pp ")]),e("div",Ws,[p(e("input",{"onUpdate:modelValue":s[22]||(s[22]=o=>t.beatmapEarliestSubmissionDate=o),class:"form-control form-control-sm mx-2 w-50",type:"date",autocomplete:"off",placeholder:"earliest submission date allowed..."},null,512),[[c,t.beatmapEarliestSubmissionDate]]),e("button",{class:"btn btn-sm btn-outline-info w-25",onClick:s[23]||(s[23]=o=>t.updateBeatmapEarliestSubmissionDate(o))}," Update beatmap earliest submission date "),e("span",Fs,[f("current: "),e("b",null,l(t.mission.beatmapEarliestSubmissionDate),1)])]),e("div",qs,[p(e("input",{"onUpdate:modelValue":s[24]||(s[24]=o=>t.beatmapLatestSubmissionDate=o),class:"form-control form-control-sm mx-2 w-50",type:"date",autocomplete:"off",placeholder:"latest submission date allowed..."},null,512),[[c,t.beatmapLatestSubmissionDate]]),e("button",{class:"btn btn-sm btn-outline-info w-25",onClick:s[25]||(s[25]=o=>t.updateBeatmapLatestSubmissionDate(o))}," Update beatmap latest submission date "),e("span",zs,[f("current: "),e("b",null,l(t.mission.beatmapLatestSubmissionDate),1)])]),t.mission.associatedMaps&&t.mission.associatedMaps.length?(m(),k(M,{key:1,class:"my-4",mission:t.mission,"is-admin-page":!0},null,8,["mission"])):v("",!0)])]),_:1})}const Hs=S(hs,[["render",_s]]),Js=y({components:{DataTable:O,SubmitMissionModal:ps,MissionInfo:Hs},data(){return{selectedMissionId:""}},computed:{...x({missions:t=>t.missionsAdmin.missions}),selectedMission(){return this.missions.find(t=>t.id===this.selectedMissionId)}},beforeCreate(){this.$store.hasModule("missionsAdmin")||this.$store.registerModule("missionsAdmin",cs)},unmounted(){this.$store.hasModule("missionsAdmin")&&this.$store.unregisterModule("missionsAdmin")},async created(){const t=await this.$http.initialRequest("/admin/missions/load");this.$http.isError(t)||this.$store.commit("setMissions",t)},methods:{updateMission(t){const s=this.missions.findIndex(i=>i.id==t.id);s!==-1&&(this.missions[s]=t)},findTierImage(t){switch(t){case 1:return"/images/bronze.png";case 2:return"/images/silver.png";case 3:return"/images/gold.png";case 4:return"/images/platinum.png";default:return"/images/bronze.png"}}}});const Ks=t=>(P("data-v-21e655cd"),t=t(),L(),t),Qs={class:"container card card-body py-1"},Xs={class:"row"},Ys={class:"col"},Zs=Ks(()=>e("button",{class:"btn btn-sm btn-info w-100 mb-1","data-bs-toggle":"modal","data-bs-target":"#submitMission"}," Add mission ",-1)),st=["src"];function tt(t,s,i,a,I,D){const M=h("data-table"),r=h("submit-mission-modal"),o=h("mission-info");return m(),d("div",null,[e("div",Qs,[e("div",Xs,[e("div",Ys,[Zs,u(M,{data:t.missions,headers:["name","tier","status","announce"],"custom-data-target":"#editMission","onUpdate:selectedId":s[0]||(s[0]=b=>t.selectedMissionId=b)},{default:w(({obj:b})=>[e("td",null,l(b.name),1),e("td",null,[e("img",{src:t.findTierImage(b.tier),class:"table-mission-tier"},null,8,st)]),e("td",null,l(b.status),1),e("td",null,[e("span",{class:C(b.openingAnnounced?"text-success":"text-danger")},"open",2),f("/"),e("span",{class:C(b.closingAnnounced?"text-success":"text-danger")},"close",2)])]),_:1},8,["data"])])])]),u(r),t.selectedMission?(m(),k(o,{key:0,mission:t.selectedMission,onUpdateMission:s[1]||(s[1]=b=>t.updateMission(b))},null,8,["mission"])):v("",!0)])}const at=S(Js,[["render",tt],["__scopeId","data-v-21e655cd"]]);export{at as default};

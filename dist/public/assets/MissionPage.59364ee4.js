var s=Object.defineProperty,t=Object.defineProperties,e=Object.getOwnPropertyDescriptors,i=Object.getOwnPropertySymbols,a=Object.prototype.hasOwnProperty,o=Object.prototype.propertyIsEnumerable,n=(t,e,i)=>e in t?s(t,e,{enumerable:!0,configurable:!0,writable:!0,value:i}):t[e]=i,m=(s,t)=>{for(var e in t||(t={}))a.call(t,e)&&n(s,e,t[e]);if(i)for(var e of i(t))o.call(t,e)&&n(s,e,t[e]);return s};import{d,m as l,h as u,o as r,s as c,w as p,f as b,j as h,b as f,g,t as M,F as x,e as w,k as v,q as y,l as k,H as $,v as A,n as C,p as I,a as S}from"./vendor.b9ef672a.js";import{_ as D}from"./ModalDialog.4a9168b4.js";import{m as U,j as V}from"./index.59af7da6.js";import{b as R,_ as B,c as P}from"./FormTextarea.5ea73115.js";import{_ as j}from"./DataTable.01cd035d.js";var E=d({name:"SubmitMissionModal",components:{ModalDialog:D,FormInput:R,FormSelect:B,FormTextarea:P},props:{isAdmin:Boolean},data:()=>({modes:U,featuredArtists:[],selectedArtists:[],selectedArtistId:"",selectedMode:"",selectedModes:[],tier:"",deadline:"",objective:"",name:"",winCondition:"",userMaximumRankedBeatmapsCount:null,userMaximumGlobalRank:null,userMaximumPp:null,beatmapEarliestSubmissionDate:null,beatmapLatestSubmissionDate:null}),computed:m({},l(["loggedInUser"])),async created(){const s=await this.$http.executeGet("/featuredArtists");s&&(this.featuredArtists=s.sort(((s,t)=>s.label.toLowerCase()>t.label.toLowerCase()?1:t.label.toLowerCase()>s.label.toLowerCase()?-1:0)))},methods:{addArtist(){if(this.selectedArtistId.length){const s=this.featuredArtists.findIndex((s=>s.id==this.selectedArtistId)),t=this.featuredArtists[s],e={id:t.id,_id:t._id,label:t.label,osuId:t.osuId};this.selectedArtists.push(e)}},addMode(){this.selectedMode.length&&this.selectedModes.push(this.selectedMode)},removeArtist(s){const t=this.selectedArtists.findIndex((t=>t.id==s));this.selectedArtists.splice(t,1)},removeMode(s){const t=this.selectedModes.findIndex((t=>t==s));this.selectedModes.splice(t,1)},async addMission(s){if("number"==typeof this.name)return void this.$store.dispatch("updateToastMessages",{message:"Choose a name that doesn't start with a number",type:"danger"});const t=await this.$http.executePost("/admin/missions/create",{artists:this.selectedArtists,tier:this.tier,name:this.name,deadline:this.deadline,objective:this.objective,modes:this.selectedModes,winCondition:this.winCondition,userMaximumRankedBeatmapsCount:this.userMaximumRankedBeatmapsCount,userMaximumGlobalRank:this.userMaximumGlobalRank,userMaximumPp:this.userMaximumPp,beatmapEarliestSubmissionDate:this.beatmapEarliestSubmissionDate,beatmapLatestSubmissionDate:this.beatmapLatestSubmissionDate},s);this.$http.isError(t)||(this.$store.commit("addMission",t),this.$bs.hideModal("submitMission"))}}});const L={class:"container"},T=b("h5",null,"General",-1),G={class:"row"},O=b("option",{value:"-",disabled:""}," --- ",-1),_=["value"],W={class:"col-sm-1"},q={class:"small text-secondary"},F={key:0},N=["onClick"],z=[b("i",{class:"fas fa-minus"},null,-1)],H={class:"row"},J=b("option",{value:"-",disabled:""}," --- ",-1),K=["value"],Q={class:"col-sm-1"},X={class:"mt-2"},Y={class:"small text-secondary"},Z={key:0},ss=["onClick"],ts=[b("i",{class:"fas fa-minus"},null,-1)],es=b("hr",null,null,-1),is=b("h5",null,"User requirements",-1);E.render=function(s,t,e,i,a,o){const n=u("form-select"),m=u("form-input"),d=u("form-textarea"),l=u("modal-dialog");return r(),c(l,{id:"submitMission",title:"Submit mission"},{default:p((()=>[b("div",L,[T,b("div",G,[h(n,{modelValue:s.selectedArtistId,"onUpdate:modelValue":t[0]||(t[0]=t=>s.selectedArtistId=t),class:"col-sm-11",label:"Artist",placeholder:"Any artist (selected by default)"},{default:p((()=>[O,(r(!0),f(x,null,g(s.featuredArtists,(s=>(r(),f("option",{key:s.id,value:s.id},M(s.label),9,_)))),128))])),_:1},8,["modelValue"]),b("div",W,[b("button",{id:"artistButton",class:"btn btn-sm btn-outline-info",onClick:t[1]||(t[1]=t=>s.addArtist())}," Add ")])]),b("div",null,[b("ul",q,[s.selectedArtists.length?w("",!0):(r(),f("li",F," Any artist (selected by default) ")),(r(!0),f(x,null,g(s.selectedArtists,(t=>(r(),f("li",{key:t.osuId},[v(M(t.label)+" ",1),b("a",{href:"#",class:"text-danger",onClick:y((e=>s.removeArtist(t.id)),["prevent"])},z,8,N)])))),128))])]),b("div",H,[h(n,{modelValue:s.selectedMode,"onUpdate:modelValue":t[2]||(t[2]=t=>s.selectedMode=t),class:"col-sm-11",label:"Mode",placeholder:"Any mode (selected by default)"},{default:p((()=>[J,(r(!0),f(x,null,g(s.modes,(s=>(r(),f("option",{key:s,value:s},M(s),9,K)))),128))])),_:1},8,["modelValue"]),b("div",Q,[b("button",{id:"artistButton",class:"btn btn-sm btn-outline-info",onClick:t[3]||(t[3]=t=>s.addMode())}," Add ")])]),b("div",X,[b("ul",Y,[s.selectedModes.length?w("",!0):(r(),f("li",Z," Any mode (selected by default) ")),(r(!0),f(x,null,g(s.selectedModes,(t=>(r(),f("li",{key:t},[v(M(t)+" ",1),b("a",{href:"#",class:"text-danger",onClick:y((e=>s.removeMode(t)),["prevent"])},ts,8,ss)])))),128))])]),h(m,{modelValue:s.tier,"onUpdate:modelValue":t[4]||(t[4]=t=>s.tier=t),modelModifiers:{number:!0},label:"Tier",type:"number"},null,8,["modelValue"]),h(m,{modelValue:s.name,"onUpdate:modelValue":t[5]||(t[5]=t=>s.name=t),modelModifiers:{number:!0},label:"Name",type:"text"},null,8,["modelValue"]),h(d,{modelValue:s.objective,"onUpdate:modelValue":t[6]||(t[6]=t=>s.objective=t),label:"Objective"},null,8,["modelValue"]),h(d,{modelValue:s.winCondition,"onUpdate:modelValue":t[7]||(t[7]=t=>s.winCondition=t),label:"Win condition"},null,8,["modelValue"]),h(m,{modelValue:s.deadline,"onUpdate:modelValue":t[8]||(t[8]=t=>s.deadline=t),label:"Deadline",type:"date"},null,8,["modelValue"]),es,is,h(m,{modelValue:s.userMaximumRankedBeatmapsCount,"onUpdate:modelValue":t[9]||(t[9]=t=>s.userMaximumRankedBeatmapsCount=t),modelModifiers:{number:!0},label:"Max ranked maps",type:"number"},null,8,["modelValue"]),h(m,{modelValue:s.userMaximumGlobalRank,"onUpdate:modelValue":t[10]||(t[10]=t=>s.userMaximumGlobalRank=t),modelModifiers:{number:!0},label:"Max global rank",type:"number"},null,8,["modelValue"]),h(m,{modelValue:s.userMaximumPp,"onUpdate:modelValue":t[11]||(t[11]=t=>s.userMaximumPp=t),modelModifiers:{number:!0},label:"Max pp",type:"number"},null,8,["modelValue"]),h(m,{modelValue:s.beatmapEarliestSubmissionDate,"onUpdate:modelValue":t[12]||(t[12]=t=>s.beatmapEarliestSubmissionDate=t),modelModifiers:{number:!0},label:"Earliest submission date",type:"date"},null,8,["modelValue"]),h(m,{modelValue:s.beatmapLatestSubmissionDate,"onUpdate:modelValue":t[13]||(t[13]=t=>s.beatmapLatestSubmissionDate=t),modelModifiers:{number:!0},label:"Latest submission date",type:"date"},null,8,["modelValue"]),b("button",{class:"btn btn-outline-success w-100",onClick:t[14]||(t[14]=t=>s.addMission(t))}," Add mission ")])])),_:1})};var as={state:{missions:[]},mutations:{setMissions(s,t){s.missions=t},updateMission(s,t){const e=s.missions.findIndex((s=>s.id===t.id));-1!==e&&(s.missions[e]=t)},addMission(s,t){s.missions.push(t)},updateName(s,t){const e=s.missions.find((s=>s.id==t.missionId));e&&(e.name=t.name)},updateTier(s,t){const e=s.missions.find((s=>s.id==t.missionId));e&&(e.tier=t.tier)},updateObjective(s,t){const e=s.missions.find((s=>s.id==t.missionId));e&&(e.objective=t.objective)},updateStatus(s,t){const e=s.missions.find((s=>s.id==t.missionId));e&&(e.status=t.status)},updateWinCondition(s,t){const e=s.missions.find((s=>s.id==t.missionId));e&&(e.winCondition=t.winCondition)},updateOpeningAnnounced(s,t){const e=s.missions.find((s=>s.id==t.missionId));e&&(e.openingAnnounced=t.openingAnnounced)},updateClosingAnnounced(s,t){const e=s.missions.find((s=>s.id==t.missionId));e&&(e.closingAnnounced=t.closingAnnounced)},updateWinningBeatmaps(s,t){const e=s.missions.find((s=>s.id==t.missionId));e&&(e.winningBeatmaps=t.winningBeatmaps)},updateInvalidBeatmaps(s,t){const e=s.missions.find((s=>s.id==t.missionId));e&&(e.invalidBeatmaps=t.invalidBeatmaps)},updateAssociatedMaps(s,t){const e=s.missions.find((s=>s.id==t.missionId));e&&(e.associatedMaps=t.associatedMaps)},updateModes(s,t){const e=s.missions.find((s=>s.id==t.missionId));e&&(e.modes=t.modes)},updateArtists(s,t){const e=s.missions.find((s=>s.id==t.missionId));e&&(e.artists=t.artists)},updateUserMaximumRankedBeatmapsCount(s,t){const e=s.missions.find((s=>s.id==t.missionId));e&&(e.userMaximumRankedBeatmapsCount=t.userMaximumRankedBeatmapsCount)},updateUserMaximumGlobalRank(s,t){const e=s.missions.find((s=>s.id==t.missionId));e&&(e.userMaximumGlobalRank=t.userMaximumGlobalRank)},updateUserMaximumPp(s,t){const e=s.missions.find((s=>s.id==t.missionId));e&&(e.userMaximumPp=t.userMaximumPp)},updateBeatmapEarliestSubmissionDate(s,t){const e=s.missions.find((s=>s.id==t.missionId));e&&(e.beatmapEarliestSubmissionDate=t.beatmapEarliestSubmissionDate)},updateBeatmapLatestSubmissionDate(s,t){const e=s.missions.find((s=>s.id==t.missionId));e&&(e.beatmapLatestSubmissionDate=t.beatmapLatestSubmissionDate)}}},os=d({name:"MissionInfo",components:{AssociatedBeatmaps:V,ModalDialog:D},props:{mission:{type:Object,required:!0}},data(){return{availableArtists:[],availableModes:U,name:this.mission.name,tier:this.mission.tier,objective:this.mission.objective,winCondition:this.mission.winCondition,status:this.mission.status,mode:"",selectedArtist:{},artists:this.mission.artists,userMaximumRankedBeatmapsCount:this.mission.userMaximumRankedBeatmapsCount,userMaximumGlobalRank:this.mission.userMaximumGlobalRank,userMaximumPp:this.mission.userMaximumPp,beatmapEarliestSubmissionDate:new Date(this.mission.beatmapEarliestSubmissionDate),beatmapLatestSubmissionDate:new Date(this.mission.beatmapLatestSubmissionDate)}},watch:{mission(){this.name=this.mission.name,this.tier=this.mission.tier,this.artists=this.mission.artists,this.objective=this.mission.objective,this.winCondition=this.mission.winCondition,this.status=this.mission.status,this.mode="",this.userMaximumRankedBeatmapsCount=this.mission.userMaximumRankedBeatmapsCount,this.userMaximumGlobalRank=this.mission.userMaximumGlobalRank,this.userMaximumPp=this.mission.userMaximumPp,this.beatmapEarliestSubmissionDate=new Date(this.mission.beatmapEarliestSubmissionDate),this.beatmapLatestSubmissionDate=new Date(this.mission.beatmapLatestSubmissionDate)}},async created(){const s=await this.$http.executeGet("/featuredArtists");s&&(this.availableArtists=s.sort(((s,t)=>s.label.toLowerCase()>t.label.toLowerCase()?1:t.label.toLowerCase()>s.label.toLowerCase()?-1:0)))},methods:{async updateName(s){const t=await this.$http.executePost(`/admin/missions/${this.mission.id}/rename`,{name:this.name},s);this.$http.isError(t)||(this.$store.dispatch("updateToastMessages",{message:"renamed mission",type:"info"}),this.$store.commit("updateName",{missionId:this.mission.id,name:t}))},async updateTier(s){const t=await this.$http.executePost(`/admin/missions/${this.mission.id}/updateTier`,{tier:this.tier},s);this.$http.isError(t)||(this.$store.dispatch("updateToastMessages",{message:"updated tier",type:"info"}),this.$store.commit("updateTier",{missionId:this.mission.id,tier:t}))},async updateObjective(s){const t=await this.$http.executePost(`/admin/missions/${this.mission.id}/updateObjective/`,{objective:this.objective},s);this.$http.isError(t)||(this.$store.dispatch("updateToastMessages",{message:"updated objective",type:"info"}),this.$store.commit("updateObjective",{missionId:this.mission.id,objective:t}))},async updateStatus(s){const t=await this.$http.executePost(`/admin/missions/${this.mission.id}/updateStatus/`,{status:this.status},s);this.$http.isError(t)||(this.$store.dispatch("updateToastMessages",{message:"updated status",type:"info"}),this.$store.commit("updateStatus",{missionId:this.mission.id,status:t}))},async updateUserMaximumRankedBeatmapsCount(s){const t=await this.$http.executePost(`/admin/missions/${this.mission.id}/updateUserMaximumRankedBeatmapsCount/`,{userMaximumRankedBeatmapsCount:this.userMaximumRankedBeatmapsCount},s);this.$http.isError(t)||(this.$store.dispatch("updateToastMessages",{message:"updated user max ranked maps count for mission",type:"info"}),this.$store.commit("updateUserMaximumRankedBeatmapsCount",{missionId:this.mission.id,userMaximumRankedBeatmapsCount:t}))},async updateUserMaximumGlobalRank(s){const t=await this.$http.executePost(`/admin/missions/${this.mission.id}/updateUserMaximumGlobalRank/`,{userMaximumGlobalRank:this.userMaximumGlobalRank},s);this.$http.isError(t)||(this.$store.dispatch("updateToastMessages",{message:"updated user max global rank for mission",type:"info"}),this.$store.commit("updateUserMaximumGlobalRank",{missionId:this.mission.id,userMaximumGlobalRank:t}))},async updateUserMaximumPp(s){const t=await this.$http.executePost(`/admin/missions/${this.mission.id}/updateUserMaximumPp/`,{userMaximumPp:this.userMaximumPp},s);this.$http.isError(t)||(this.$store.dispatch("updateToastMessages",{message:"updated user max pp for mission",type:"info"}),this.$store.commit("updateUserMaximumPp",{missionId:this.mission.id,userMaximumPp:t}))},async updateBeatmapEarliestSubmissionDate(s){const t=await this.$http.executePost(`/admin/missions/${this.mission.id}/updateBeatmapEarliestSubmissionDate/`,{beatmapEarliestSubmissionDate:this.beatmapEarliestSubmissionDate},s);this.$http.isError(t)||(this.$store.dispatch("updateToastMessages",{message:"updated beatmap earliest submission date",type:"info"}),this.$store.commit("updateBeatmapEarliestSubmissionDate",{missionId:this.mission.id,beatmapEarliestSubmissionDate:t}))},async updateBeatmapLatestSubmissionDate(s){const t=await this.$http.executePost(`/admin/missions/${this.mission.id}/updateBeatmapLatestSubmissionDate/`,{beatmapLatestSubmissionDate:this.beatmapLatestSubmissionDate},s);this.$http.isError(t)||(this.$store.dispatch("updateToastMessages",{message:"updated beatmap latest submission date",type:"info"}),this.$store.commit("updateBeatmapLatestSubmissionDate",{missionId:this.mission.id,beatmapLatestSubmissionDate:t}))},async updateWinCondition(s){const t=await this.$http.executePost(`/admin/missions/${this.mission.id}/updateWinCondition/`,{winCondition:this.winCondition},s);this.$http.isError(t)||(this.$store.dispatch("updateToastMessages",{message:"updated win condition",type:"info"}),this.$store.commit("updateWinCondition",{missionId:this.mission.id,winCondition:t}))},async toggleOpeningAnnounced(s){const t=await this.$http.executePost(`/admin/missions/${this.mission.id}/toggleOpeningAnnounced/`,{openingAnnounced:!this.mission.openingAnnounced},s);this.$http.isError(t)||(this.$store.dispatch("updateToastMessages",{message:"toggled openingAnnounced",type:"info"}),this.$store.commit("updateOpeningAnnounced",{missionId:this.mission.id,openingAnnounced:t}))},async toggleClosingAnnounced(s){const t=await this.$http.executePost(`/admin/missions/${this.mission.id}/toggleClosingAnnounced/`,{closingAnnounced:!this.mission.closingAnnounced},s);this.$http.isError(t)||(this.$store.dispatch("updateToastMessages",{message:"toggled closingAnnounced",type:"info"}),this.$store.commit("updateClosingAnnounced",{missionId:this.mission.id,closingAnnounced:t}))},async toggleMode(s){const t=await this.$http.executePost(`/admin/missions/${this.mission.id}/toggleMode/`,{mode:this.mode},s);this.$http.isError(t)||(this.$store.dispatch("updateToastMessages",{message:"toggled mode",type:"info"}),this.$store.commit("updateModes",{missionId:this.mission.id,modes:t}))},async toggleArtist(s){const t=await this.$http.executePost(`/admin/missions/${this.mission.id}/toggleArtist/`,{artistLabel:this.selectedArtist},s);this.$http.isError(t)||(this.$store.dispatch("updateToastMessages",{message:"toggled artist",type:"info"}),this.$store.commit("updateArtists",{missionId:this.mission.id,artists:t}))}}});const ns={class:"container"},ms={class:"row mt-2"},ds={class:"row mt-2"},ls={class:"row mt-2"},us={class:"row mt-2"},rs={class:"row"},cs=[b("option",{value:"",disabled:""}," Select a status ",-1),b("option",{value:"hidden"}," Hidden ",-1),b("option",{value:"open"}," Open ",-1),b("option",{value:"closed"}," Closed ",-1)],ps={class:"row"},bs=b("option",{value:"",disabled:""}," Select a mode ",-1),hs={class:"w-25 mt-2"},fs={key:0,class:"row"},gs=b("option",{value:{},disabled:""}," Select an artist ",-1),Ms={key:0,class:"w-25 mt-2"},xs={class:"row"},ws={class:"col-sm-6 mt-2"},vs=v(" Opening announced: "),ys={class:"row"},ks={class:"col-sm-6 mt-2"},$s=v(" Closing announced: "),As=b("hr",null,null,-1),Cs=b("h5",null,"User requirements",-1),Is={class:"row"},Ss={class:"row mt-2"},Ds={class:"row mt-2"},Us={class:"row mt-2"},Vs={class:"small"},Rs=v("current: "),Bs={class:"row mt-2"},Ps={class:"small"},js=v("current: ");os.render=function(s,t,e,i,a,o){const n=u("associated-beatmaps"),m=u("modal-dialog");return r(),c(m,{id:"editMission"},{header:p((()=>[v(M(s.mission.name),1)])),default:p((()=>[b("div",ns,[b("div",ms,[k(b("input",{"onUpdate:modelValue":t[0]||(t[0]=t=>s.name=t),class:"form-control form-control-sm mx-2 w-50",type:"text",autocomplete:"off",placeholder:"mission name..."},null,512),[[$,s.name]]),b("button",{class:"btn btn-sm btn-outline-info w-25",onClick:t[1]||(t[1]=t=>s.updateName(t))}," Rename mission ")]),b("div",ds,[k(b("input",{"onUpdate:modelValue":t[2]||(t[2]=t=>s.tier=t),class:"form-control form-control-sm mx-2 w-50",type:"text",autocomplete:"off",placeholder:"tier..."},null,512),[[$,s.tier]]),b("button",{class:"btn btn-sm btn-outline-info w-25",onClick:t[3]||(t[3]=t=>s.updateTier(t))}," Update tier ")]),b("div",ls,[k(b("textarea",{"onUpdate:modelValue":t[4]||(t[4]=t=>s.objective=t),class:"form-control form-control-sm mx-2 mt-2 w-50",type:"text",autocomplete:"off",placeholder:"mission objective..."},null,512),[[$,s.objective]]),b("button",{class:"btn btn-sm btn-outline-info w-25 mt-2",onClick:t[5]||(t[5]=t=>s.updateObjective(t))}," Update objective ")]),b("div",us,[k(b("textarea",{"onUpdate:modelValue":t[6]||(t[6]=t=>s.winCondition=t),class:"form-control form-control-sm mx-2 mt-2 w-50",type:"text",autocomplete:"off",placeholder:"mission win condition..."},null,512),[[$,s.winCondition]]),b("button",{class:"btn btn-sm btn-outline-info w-25 mt-2",onClick:t[7]||(t[7]=t=>s.updateWinCondition(t))}," Update win condition ")]),b("div",rs,[k(b("select",{"onUpdate:modelValue":t[8]||(t[8]=t=>s.status=t),class:"form-select form-select-sm mx-2 mt-2 w-50"},cs,512),[[A,s.status]]),b("button",{class:"btn btn-sm btn-outline-info mt-2 w-25",onClick:t[9]||(t[9]=t=>s.updateStatus(t))}," Update status ")]),b("div",ps,[k(b("select",{"onUpdate:modelValue":t[10]||(t[10]=t=>s.mode=t),class:"form-select form-select-sm mx-2 mt-2 w-25"},[bs,(r(!0),f(x,null,g(s.availableModes,(s=>(r(),f("option",{key:s},M(s),1)))),128))],512),[[A,s.mode]]),b("div",hs,M(s.mission.modes),1),b("button",{class:"btn btn-sm btn-outline-info mt-2 w-25",onClick:t[11]||(t[11]=t=>s.toggleMode(t))}," Toggle mode ")]),s.availableArtists?(r(),f("div",fs,[k(b("select",{"onUpdate:modelValue":t[12]||(t[12]=t=>s.selectedArtist=t),class:"form-select form-select-sm mx-2 mt-2 w-25"},[gs,(r(!0),f(x,null,g(s.availableArtists,(s=>(r(),f("option",{key:s.id},M(s.label),1)))),128))],512),[[A,s.selectedArtist]]),s.mission.artists&&s.mission.artists.length?(r(),f("div",Ms,M(s.mission.artists.map((s=>s.label))),1)):w("",!0),b("button",{class:"btn btn-sm btn-outline-info mt-2 w-25",onClick:t[13]||(t[13]=t=>s.toggleArtist(t))}," Toggle artist ")])):w("",!0),b("div",xs,[b("div",ws,[vs,b("span",{class:C(s.mission.openingAnnounced?"text-success":"text-danger")},M(s.mission.openingAnnounced),3)]),b("button",{class:"btn btn-sm btn-outline-info mt-2 ms-3 w-25",onClick:t[14]||(t[14]=t=>s.toggleOpeningAnnounced(t))}," Toggle openingAnnounced ")]),b("div",ys,[b("div",ks,[$s,b("span",{class:C(s.mission.closingAnnounced?"text-success":"text-danger")},M(s.mission.closingAnnounced),3)]),b("button",{class:"btn btn-sm btn-outline-info mt-2 ms-3 w-25",onClick:t[15]||(t[15]=t=>s.toggleClosingAnnounced(t))}," Toggle closingAnnounced ")]),As,Cs,b("div",Is,[k(b("input",{"onUpdate:modelValue":t[16]||(t[16]=t=>s.userMaximumRankedBeatmapsCount=t),class:"form-control form-control-sm mx-2 w-50",type:"text",autocomplete:"off",placeholder:"maximum ranked maps allowed..."},null,512),[[$,s.userMaximumRankedBeatmapsCount]]),b("button",{class:"btn btn-sm btn-outline-info w-25",onClick:t[17]||(t[17]=t=>s.updateUserMaximumRankedBeatmapsCount(t))}," Update user max ranked maps count ")]),b("div",Ss,[k(b("input",{"onUpdate:modelValue":t[18]||(t[18]=t=>s.userMaximumGlobalRank=t),class:"form-control form-control-sm mx-2 w-50",type:"number",autocomplete:"off",placeholder:"maximum global rank allowed..."},null,512),[[$,s.userMaximumGlobalRank]]),b("button",{class:"btn btn-sm btn-outline-info w-25",onClick:t[19]||(t[19]=t=>s.updateUserMaximumGlobalRank(t))}," Update user max global rank ")]),b("div",Ds,[k(b("input",{"onUpdate:modelValue":t[20]||(t[20]=t=>s.userMaximumPp=t),class:"form-control form-control-sm mx-2 w-50",type:"number",autocomplete:"off",placeholder:"maximum pp allowed..."},null,512),[[$,s.userMaximumPp]]),b("button",{class:"btn btn-sm btn-outline-info w-25",onClick:t[21]||(t[21]=t=>s.updateUserMaximumPp(t))}," Update user max pp ")]),b("div",Us,[k(b("input",{"onUpdate:modelValue":t[22]||(t[22]=t=>s.beatmapEarliestSubmissionDate=t),class:"form-control form-control-sm mx-2 w-50",type:"date",autocomplete:"off",placeholder:"earliest submission date allowed..."},null,512),[[$,s.beatmapEarliestSubmissionDate]]),b("button",{class:"btn btn-sm btn-outline-info w-25",onClick:t[23]||(t[23]=t=>s.updateBeatmapEarliestSubmissionDate(t))}," Update beatmap earliest submission date "),b("span",Vs,[Rs,b("b",null,M(s.mission.beatmapEarliestSubmissionDate),1)])]),b("div",Bs,[k(b("input",{"onUpdate:modelValue":t[24]||(t[24]=t=>s.beatmapLatestSubmissionDate=t),class:"form-control form-control-sm mx-2 w-50",type:"date",autocomplete:"off",placeholder:"latest submission date allowed..."},null,512),[[$,s.beatmapLatestSubmissionDate]]),b("button",{class:"btn btn-sm btn-outline-info w-25",onClick:t[25]||(t[25]=t=>s.updateBeatmapLatestSubmissionDate(t))}," Update beatmap latest submission date "),b("span",Ps,[js,b("b",null,M(s.mission.beatmapLatestSubmissionDate),1)])]),s.mission.associatedMaps&&s.mission.associatedMaps.length?(r(),c(n,{key:1,class:"my-4",mission:s.mission,"is-admin-page":!0},null,8,["mission"])):w("",!0)])])),_:1})};var Es,Ls,Ts=d({components:{DataTable:j,SubmitMissionModal:E,MissionInfo:os},data:()=>({selectedMissionId:""}),computed:(Es=m({},l({missions:s=>s.missionsAdmin.missions})),Ls={selectedMission(){return this.missions.find((s=>s.id===this.selectedMissionId))}},t(Es,e(Ls))),beforeCreate(){this.$store.hasModule("missionsAdmin")||this.$store.registerModule("missionsAdmin",as)},unmounted(){this.$store.hasModule("missionsAdmin")&&this.$store.unregisterModule("missionsAdmin")},async created(){const s=await this.$http.initialRequest("/admin/missions/load");this.$http.isError(s)||this.$store.commit("setMissions",s)},methods:{updateMission(s){const t=this.missions.findIndex((t=>t.id==s.id));-1!==t&&(this.missions[t]=s)},findTierImage(s){switch(s){case 1:return"/images/bronze.png";case 2:return"/images/silver.png";case 3:return"/images/gold.png";case 4:return"/images/platinum.png";default:return"/images/bronze.png"}}}});I("data-v-1545d17a");const Gs={class:"container card card-body py-1"},Os={class:"row"},_s={class:"col"},Ws=b("button",{class:"btn btn-sm btn-info w-100 mb-1","data-bs-toggle":"modal","data-bs-target":"#submitMission"}," Add mission ",-1),qs=["src"],Fs=v("/");S(),Ts.render=function(s,t,e,i,a,o){const n=u("data-table"),m=u("submit-mission-modal"),d=u("mission-info");return r(),f("div",null,[b("div",Gs,[b("div",Os,[b("div",_s,[Ws,h(n,{data:s.missions,headers:["name","tier","status","announce"],"custom-data-target":"#editMission","onUpdate:selectedId":t[0]||(t[0]=t=>s.selectedMissionId=t)},{default:p((({obj:t})=>[b("td",null,M(t.name),1),b("td",null,[b("img",{src:s.findTierImage(t.tier),class:"table-mission-tier"},null,8,qs)]),b("td",null,M(t.status),1),b("td",null,[b("span",{class:C(t.openingAnnounced?"text-success":"text-danger")},"open",2),Fs,b("span",{class:C(t.closingAnnounced?"text-success":"text-danger")},"close",2)])])),_:1},8,["data"])])])]),h(m),s.selectedMission?(r(),c(d,{key:0,mission:s.selectedMission,onUpdateMission:t[1]||(t[1]=t=>s.updateMission(t))},null,8,["mission"])):w("",!0)])},Ts.__scopeId="data-v-1545d17a";export{Ts as default};

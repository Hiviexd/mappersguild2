import{M as l}from"./ModalDialog-f42320a0.js";import{d as h,_ as c,o as m,c as g,w as n,k as b,a as t,b as i,v as f,A as r,t as a,i as d}from"./index-2d571758.js";const $=h({name:"UserInfo",components:{ModalDialog:l},props:{user:{type:Object,default:null}},data(){return{badge:0,discordId:"",group:""}},watch:{user(){this.badge=this.user.badge||0,this.discordId=this.user.discordId||"",this.group=this.user.group||""}},created(){this.user&&(this.badge=this.user.badge||0,this.discordId=this.user.discordId||"",this.group=this.user.group||"")},methods:{async updateGroup(e){const s=await this.$http.executePost(`/admin/users/${this.user.id}/updateGroup`,{group:this.group},e);s&&(this.$store.dispatch("updateToastMessages",{message:`set group to ${s}`,type:"info"}),this.$store.commit("updateGroup",{userId:this.user.id,group:s}))},async updateBadge(e){const s=await this.$http.executePost(`/admin/users/${this.user.id}/updateBadge`,{badge:this.badge},e);s&&(this.$store.dispatch("updateToastMessages",{message:`set queued badge to ${s}`,type:"info"}),this.$store.commit("updateBadge",{userId:this.user.id,badge:s}))},async updateDiscordId(e){const s=await this.$http.executePost(`/admin/users/${this.user.id}/updateDiscordId`,{discordId:this.discordId},e);s&&(this.$store.dispatch("updateToastMessages",{message:`set discord ID to ${s}`,type:"info"}),this.$store.commit("updateDiscordId",{userId:this.user.id,discordId:s}))},async calculateUserPoints(e){await this.$http.executePost(`/admin/users/${this.user.id}/calculateUserPoints`,{},e)&&this.$store.dispatch("updateToastMessages",{message:"calculated points",type:"info"})},async toggleBypassLogin(e){const s=await this.$http.executePost(`/admin/users/${this.user.id}/toggleBypassLogin`,{bypassLogin:!this.user.bypassLogin},e);s&&(this.$store.dispatch("updateToastMessages",{message:`set bypassLogin to ${s.bypassLogin}`,type:"info"}),this.$store.commit("updateBypassLogin",{userId:this.user.id,group:s.group,bypassLogin:s.bypassLogin}))},async toggleIsShowcaseMapper(e){const s=await this.$http.executePost(`/admin/users/${this.user.id}/toggleIsShowcaseMapper`,{isShowcaseMapper:!this.user.isShowcaseMapper},e);s&&(this.$store.dispatch("updateToastMessages",{message:`set isShowcaseMapper ${s.isShowcaseMapper}`,type:"info"}),this.$store.commit("updateIsShowcaseMapper",{userId:this.user.id,isShowcaseMapper:s.isShowcaseMapper}))},async toggleIsMentorshipAdmin(e){const s=await this.$http.executePost(`/admin/users/${this.user.id}/toggleIsMentorshipAdmin`,{isMentorshipAdmin:!this.user.isMentorshipAdmin},e);s&&(this.$store.dispatch("updateToastMessages",{message:`set isMentorshipAdmin ${s.isMentorshipAdmin}`,type:"info"}),this.$store.commit("updateIsMentorshipAdmin",{userId:this.user.id,isMentorshipAdmin:s.isMentorshipAdmin}))}}}),w={class:"container"},M={class:"row"},I=t("option",{value:"user"}," User ",-1),y=t("option",{value:"admin"}," Admin ",-1),S=t("option",{value:"secret"}," Secret ",-1),k=t("option",{value:"spectator"}," Spectator ",-1),A=[I,y,S,k],D={class:"row"},v={class:"row"};function B(e,s,C,L,U,P){const p=d("user-link"),u=d("modal-dialog");return m(),g(u,{id:"editUser","header-class":e.user?"bg-rank-"+e.user.rank:"",loaded:Boolean(e.user)},{header:n(()=>[b(p,{user:e.user},null,8,["user"])]),default:n(()=>[t("div",w,[t("p",M,[i(t("select",{"onUpdate:modelValue":s[0]||(s[0]=o=>e.group=o),class:"form-select form-select-sm w-50 mx-2"},A,512),[[f,e.group]]),t("button",{class:"btn btn-sm btn-outline-info w-25",onClick:s[1]||(s[1]=o=>e.updateGroup(o))}," Save group ")]),t("p",D,[i(t("input",{"onUpdate:modelValue":s[2]||(s[2]=o=>e.badge=o),class:"form-control form-control-sm mx-2 w-50",type:"text",autocomplete:"off"},null,512),[[r,e.badge]]),t("button",{class:"btn btn-sm btn-outline-info w-25",onClick:s[3]||(s[3]=o=>e.updateBadge(o))}," Queue badge ")]),t("p",v,[i(t("input",{"onUpdate:modelValue":s[4]||(s[4]=o=>e.discordId=o),class:"form-control form-control-sm mx-2 w-50",type:"text",autocomplete:"off"},null,512),[[r,e.discordId]]),t("button",{class:"btn btn-sm btn-outline-info w-25",onClick:s[5]||(s[5]=o=>e.updateDiscordId(o))}," Save Discord ID ")]),t("p",null,[t("button",{class:"btn btn-sm btn-outline-info w-100",onClick:s[6]||(s[6]=o=>e.calculateUserPoints(o))}," Calculate user points ")]),t("p",null,[t("button",{class:"btn btn-sm btn-outline-info w-100",onClick:s[7]||(s[7]=o=>e.toggleBypassLogin(o))},a(e.user.bypassLogin?"Enable":"Disable")+" ranked maps login requirement ",1)]),t("p",null,[t("button",{class:"btn btn-sm btn-outline-info w-100",onClick:s[8]||(s[8]=o=>e.toggleIsShowcaseMapper(o))},a(e.user.isShowcaseMapper?"Disable":"Enable")+" showcase mapper ",1)]),t("p",null,[t("button",{class:"btn btn-sm btn-outline-info w-100",onClick:s[9]||(s[9]=o=>e.toggleIsMentorshipAdmin(o))},a(e.user.isMentorshipAdmin?"Disable":"Enable")+" mentorship admin ",1)])])]),_:1},8,["header-class","loaded"])}const G=c($,[["render",B]]);export{G as U};

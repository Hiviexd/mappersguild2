import{d as A,P as _,m as x,_ as y,o as d,c as w,w as g,r as c,a as t,j as u,e as m,f as $,t as r,F as v,l as k,k as M,y as V,R as T,b as h,g as f,v as U,n as C,s as G,u as S}from"./index-0934c807.js";import{M as B}from"./ModalDialog-703860e0.js";import{b as O,F as P,c as E}from"./FormTextarea-0b89bc70.js";import{D as N}from"./DataTable-7da14940.js";const W=A({name:"SubmitMissionModal",components:{ModalDialog:B,FormInput:O,FormSelect:P,FormTextarea:E},props:{isAdmin:Boolean},data(){return{modes:_,featuredArtists:[],selectedArtists:[],selectedArtistId:"",selectedMode:"",selectedModes:[],tier:"",deadline:"",objective:"",name:"",winCondition:"",userMaximumRankedBeatmapsCount:null,userMaximumGlobalRank:null}},computed:{...x(["loggedInUser"])},async created(){const e=await this.$http.executeGet("/featuredArtists");e&&(this.featuredArtists=e.sort((s,i)=>s.label.toLowerCase()>i.label.toLowerCase()?1:i.label.toLowerCase()>s.label.toLowerCase()?-1:0))},methods:{addArtist(){if(this.selectedArtistId.length){const e=this.featuredArtists.findIndex(a=>a.id==this.selectedArtistId),s=this.featuredArtists[e],i={id:s.id,_id:s._id,label:s.label,osuId:s.osuId};this.selectedArtists.push(i)}},addMode(){this.selectedMode.length&&this.selectedModes.push(this.selectedMode)},removeArtist(e){const s=this.selectedArtists.findIndex(i=>i.id==e);this.selectedArtists.splice(s,1)},removeMode(e){const s=this.selectedModes.findIndex(i=>i==e);this.selectedModes.splice(s,1)},async addMission(e){if(typeof this.name=="number"){this.$store.dispatch("updateToastMessages",{message:"Choose a name that doesn't start with a number",type:"danger"});return}const s=await this.$http.executePost("/admin/missions/create",{artists:this.selectedArtists,tier:this.tier,name:this.name,deadline:this.deadline,objective:this.objective,modes:this.selectedModes,winCondition:this.winCondition,userMaximumRankedBeatmapsCount:this.userMaximumRankedBeatmapsCount,userMaximumGlobalRank:this.userMaximumGlobalRank},e);this.$http.isError(s)||(this.$store.commit("addMission",s),this.$bs.hideModal("submitMission"))}}}),D={class:"container"},F=t("h5",null,"General",-1),L={class:"row"},q=t("option",{value:"-",disabled:""}," --- ",-1),z=["value"],H={class:"col-sm-1"},J={class:"small text-secondary"},K={key:0},Q=["onClick"],X=t("i",{class:"fas fa-minus"},null,-1),Y=[X],Z={class:"row"},ss=t("option",{value:"-",disabled:""}," --- ",-1),es=["value"],ts={class:"col-sm-1"},is={class:"mt-2"},os={class:"small text-secondary"},ns={key:0},as=["onClick"],ds=t("i",{class:"fas fa-minus"},null,-1),ms=[ds],ls=t("hr",null,null,-1),us=t("h5",null,"User requirements",-1);function rs(e,s,i,a,I,R){const b=c("form-select"),p=c("form-input"),o=c("form-textarea"),l=c("modal-dialog");return d(),w(l,{id:"submitMission",title:"Submit mission"},{default:g(()=>[t("div",D,[F,t("div",L,[u(b,{modelValue:e.selectedArtistId,"onUpdate:modelValue":s[0]||(s[0]=n=>e.selectedArtistId=n),class:"col-sm-11",label:"Artist",placeholder:"Any artist (selected by default)"},{default:g(()=>[q,(d(!0),m(v,null,$(e.featuredArtists,n=>(d(),m("option",{key:n.id,value:n.id},r(n.label),9,z))),128))]),_:1},8,["modelValue"]),t("div",H,[t("button",{id:"artistButton",class:"btn btn-sm btn-outline-info",onClick:s[1]||(s[1]=n=>e.addArtist())}," Add ")])]),t("div",null,[t("ul",J,[e.selectedArtists.length?k("",!0):(d(),m("li",K," Any artist (selected by default) ")),(d(!0),m(v,null,$(e.selectedArtists,n=>(d(),m("li",{key:n.osuId},[M(r(n.label)+" ",1),t("a",{href:"#",class:"text-danger",onClick:V(j=>e.removeArtist(n.id),["prevent"])},Y,8,Q)]))),128))])]),t("div",Z,[u(b,{modelValue:e.selectedMode,"onUpdate:modelValue":s[2]||(s[2]=n=>e.selectedMode=n),class:"col-sm-11",label:"Mode",placeholder:"Any mode (selected by default)"},{default:g(()=>[ss,(d(!0),m(v,null,$(e.modes,n=>(d(),m("option",{key:n,value:n},r(n),9,es))),128))]),_:1},8,["modelValue"]),t("div",ts,[t("button",{id:"artistButton",class:"btn btn-sm btn-outline-info",onClick:s[3]||(s[3]=n=>e.addMode())}," Add ")])]),t("div",is,[t("ul",os,[e.selectedModes.length?k("",!0):(d(),m("li",ns," Any mode (selected by default) ")),(d(!0),m(v,null,$(e.selectedModes,n=>(d(),m("li",{key:n},[M(r(n)+" ",1),t("a",{href:"#",class:"text-danger",onClick:V(j=>e.removeMode(n),["prevent"])},ms,8,as)]))),128))])]),u(p,{modelValue:e.tier,"onUpdate:modelValue":s[4]||(s[4]=n=>e.tier=n),modelModifiers:{number:!0},label:"Tier",type:"number"},null,8,["modelValue"]),u(p,{modelValue:e.name,"onUpdate:modelValue":s[5]||(s[5]=n=>e.name=n),modelModifiers:{number:!0},label:"Name",type:"text"},null,8,["modelValue"]),u(o,{modelValue:e.objective,"onUpdate:modelValue":s[6]||(s[6]=n=>e.objective=n),label:"Objective"},null,8,["modelValue"]),u(o,{modelValue:e.winCondition,"onUpdate:modelValue":s[7]||(s[7]=n=>e.winCondition=n),label:"Win condition"},null,8,["modelValue"]),u(p,{modelValue:e.deadline,"onUpdate:modelValue":s[8]||(s[8]=n=>e.deadline=n),label:"Deadline",type:"date"},null,8,["modelValue"]),ls,us,u(p,{modelValue:e.userMaximumRankedBeatmapsCount,"onUpdate:modelValue":s[9]||(s[9]=n=>e.userMaximumRankedBeatmapsCount=n),modelModifiers:{number:!0},label:"Max ranked maps",type:"number"},null,8,["modelValue"]),u(p,{modelValue:e.userMaximumGlobalRank,"onUpdate:modelValue":s[10]||(s[10]=n=>e.userMaximumGlobalRank=n),modelModifiers:{number:!0},label:"Max global rank",type:"number"},null,8,["modelValue"]),t("button",{class:"btn btn-outline-success w-100",onClick:s[11]||(s[11]=n=>e.addMission(n))}," Add mission ")])]),_:1})}const ps=y(W,[["render",rs]]),cs={state:{missions:[]},mutations:{setMissions(e,s){e.missions=s},updateMission(e,s){const i=e.missions.findIndex(a=>a.id===s.id);i!==-1&&(e.missions[i]=s)},addMission(e,s){e.missions.push(s)},updateName(e,s){const i=e.missions.find(a=>a.id==s.missionId);i&&(i.name=s.name)},updateTier(e,s){const i=e.missions.find(a=>a.id==s.missionId);i&&(i.tier=s.tier)},updateObjective(e,s){const i=e.missions.find(a=>a.id==s.missionId);i&&(i.objective=s.objective)},updateStatus(e,s){const i=e.missions.find(a=>a.id==s.missionId);i&&(i.status=s.status)},updateWinCondition(e,s){const i=e.missions.find(a=>a.id==s.missionId);i&&(i.winCondition=s.winCondition)},updateOpeningAnnounced(e,s){const i=e.missions.find(a=>a.id==s.missionId);i&&(i.openingAnnounced=s.openingAnnounced)},updateClosingAnnounced(e,s){const i=e.missions.find(a=>a.id==s.missionId);i&&(i.closingAnnounced=s.closingAnnounced)},updateWinningBeatmaps(e,s){const i=e.missions.find(a=>a.id==s.missionId);i&&(i.winningBeatmaps=s.winningBeatmaps)},updateAssociatedMaps(e,s){const i=e.missions.find(a=>a.id==s.missionId);i&&(i.associatedMaps=s.associatedMaps)},updateModes(e,s){const i=e.missions.find(a=>a.id==s.missionId);i&&(i.modes=s.modes)}}},hs=cs,bs=A({name:"MissionInfo",components:{AssociatedBeatmaps:T,ModalDialog:B},props:{mission:{type:Object,required:!0}},data(){return{availableModes:_,name:this.mission.name,tier:this.mission.tier,objective:this.mission.objective,winCondition:this.mission.winCondition,status:this.mission.status,mode:"",userMaximumRankedBeatmapsCount:this.mission.userMaximumRankedBeatmapsCount,userMaximumGlobalRank:this.mission.userMaximumGlobalRank}},watch:{mission(){this.name=this.mission.name,this.tier=this.mission.tier,this.objective=this.mission.objective,this.winCondition=this.mission.winCondition,this.status=this.mission.status,this.mode="",this.userMaximumRankedBeatmapsCount=this.mission.userMaximumRankedBeatmapsCount,this.userMaximumGlobalRank=this.mission.userMaximumGlobalRank}},methods:{async updateName(e){const s=await this.$http.executePost(`/admin/missions/${this.mission.id}/rename`,{name:this.name},e);this.$http.isError(s)||(this.$store.dispatch("updateToastMessages",{message:"renamed mission",type:"info"}),this.$store.commit("updateName",{missionId:this.mission.id,name:s}))},async updateTier(e){const s=await this.$http.executePost(`/admin/missions/${this.mission.id}/updateTier`,{tier:this.tier},e);this.$http.isError(s)||(this.$store.dispatch("updateToastMessages",{message:"updated tier",type:"info"}),this.$store.commit("updateTier",{missionId:this.mission.id,tier:s}))},async updateObjective(e){const s=await this.$http.executePost(`/admin/missions/${this.mission.id}/updateObjective/`,{objective:this.objective},e);this.$http.isError(s)||(this.$store.dispatch("updateToastMessages",{message:"updated objective",type:"info"}),this.$store.commit("updateObjective",{missionId:this.mission.id,objective:s}))},async updateStatus(e){const s=await this.$http.executePost(`/admin/missions/${this.mission.id}/updateStatus/`,{status:this.status},e);this.$http.isError(s)||(this.$store.dispatch("updateToastMessages",{message:"updated status",type:"info"}),this.$store.commit("updateStatus",{missionId:this.mission.id,status:s}))},async updateUserMaximumRankedBeatmapsCount(e){const s=await this.$http.executePost(`/admin/missions/${this.mission.id}/updateUserMaximumRankedBeatmapsCount/`,{userMaximumRankedBeatmapsCount:this.userMaximumRankedBeatmapsCount},e);this.$http.isError(s)||(this.$store.dispatch("updateToastMessages",{message:"updated user max ranked maps count for mission",type:"info"}),this.$store.commit("updateUserMaximumRankedBeatmapsCount",{missionId:this.mission.id,userMaximumRankedBeatmapsCount:s}))},async updateUserMaximumGlobalRank(e){const s=await this.$http.executePost(`/admin/missions/${this.mission.id}/updateUserMaximumGlobalRank/`,{userMaximumGlobalRank:this.userMaximumGlobalRank},e);this.$http.isError(s)||(this.$store.dispatch("updateToastMessages",{message:"updated user max global rank for mission",type:"info"}),this.$store.commit("updateUserMaximumGlobalRank",{missionId:this.mission.id,userMaximumGlobalRank:s}))},async updateWinCondition(e){const s=await this.$http.executePost(`/admin/missions/${this.mission.id}/updateWinCondition/`,{winCondition:this.winCondition},e);this.$http.isError(s)||(this.$store.dispatch("updateToastMessages",{message:"updated win condition",type:"info"}),this.$store.commit("updateWinCondition",{missionId:this.mission.id,winCondition:s}))},async toggleOpeningAnnounced(e){const s=await this.$http.executePost(`/admin/missions/${this.mission.id}/toggleOpeningAnnounced/`,{openingAnnounced:!this.mission.openingAnnounced},e);this.$http.isError(s)||(this.$store.dispatch("updateToastMessages",{message:"toggled openingAnnounced",type:"info"}),this.$store.commit("updateOpeningAnnounced",{missionId:this.mission.id,openingAnnounced:s}))},async toggleClosingAnnounced(e){const s=await this.$http.executePost(`/admin/missions/${this.mission.id}/toggleClosingAnnounced/`,{closingAnnounced:!this.mission.closingAnnounced},e);this.$http.isError(s)||(this.$store.dispatch("updateToastMessages",{message:"toggled closingAnnounced",type:"info"}),this.$store.commit("updateClosingAnnounced",{missionId:this.mission.id,closingAnnounced:s}))},async toggleMode(e){const s=await this.$http.executePost(`/admin/missions/${this.mission.id}/toggleMode/`,{mode:this.mode},e);this.$http.isError(s)||(this.$store.dispatch("updateToastMessages",{message:"toggled mode",type:"info"}),this.$store.commit("updateModes",{missionId:this.mission.id,modes:s}))}}}),fs={class:"container"},gs={class:"row mt-2"},Ms={class:"row mt-2"},$s={class:"row mt-2"},vs={class:"row mt-2"},ws={class:"row"},ks=t("option",{value:"",disabled:""}," Select a status ",-1),Cs=t("option",{value:"hidden"}," Hidden ",-1),As=t("option",{value:"open"}," Open ",-1),ys=t("option",{value:"closed"}," Closed ",-1),Is=[ks,Cs,As,ys],Rs={class:"row"},Vs=t("option",{value:"",disabled:""}," Select a mode ",-1),Us={class:"w-25 mt-2"},_s={class:"row"},xs={class:"col-sm-6 mt-2"},Bs={class:"row"},js={class:"col-sm-6 mt-2"},Ts=t("hr",null,null,-1),Gs=t("h5",null,"User requirements",-1),Ss={class:"row"},Os={class:"row mt-2"};function Ps(e,s,i,a,I,R){const b=c("associated-beatmaps"),p=c("modal-dialog");return d(),w(p,{id:"editMission"},{header:g(()=>[M(r(e.mission.name),1)]),default:g(()=>[t("div",fs,[t("div",gs,[h(t("input",{"onUpdate:modelValue":s[0]||(s[0]=o=>e.name=o),class:"form-control form-control-sm mx-2 w-50",type:"text",autocomplete:"off",placeholder:"mission name..."},null,512),[[f,e.name]]),t("button",{class:"btn btn-sm btn-outline-info w-25",onClick:s[1]||(s[1]=o=>e.updateName(o))}," Rename mission ")]),t("div",Ms,[h(t("input",{"onUpdate:modelValue":s[2]||(s[2]=o=>e.tier=o),class:"form-control form-control-sm mx-2 w-50",type:"text",autocomplete:"off",placeholder:"tier..."},null,512),[[f,e.tier]]),t("button",{class:"btn btn-sm btn-outline-info w-25",onClick:s[3]||(s[3]=o=>e.updateTier(o))}," Update tier ")]),t("div",$s,[h(t("textarea",{"onUpdate:modelValue":s[4]||(s[4]=o=>e.objective=o),class:"form-control form-control-sm mx-2 mt-2 w-50",type:"text",autocomplete:"off",placeholder:"mission objective..."},null,512),[[f,e.objective]]),t("button",{class:"btn btn-sm btn-outline-info w-25 mt-2",onClick:s[5]||(s[5]=o=>e.updateObjective(o))}," Update objective ")]),t("div",vs,[h(t("textarea",{"onUpdate:modelValue":s[6]||(s[6]=o=>e.winCondition=o),class:"form-control form-control-sm mx-2 mt-2 w-50",type:"text",autocomplete:"off",placeholder:"mission win condition..."},null,512),[[f,e.winCondition]]),t("button",{class:"btn btn-sm btn-outline-info w-25 mt-2",onClick:s[7]||(s[7]=o=>e.updateWinCondition(o))}," Update win condition ")]),t("div",ws,[h(t("select",{"onUpdate:modelValue":s[8]||(s[8]=o=>e.status=o),class:"form-select form-select-sm mx-2 mt-2 w-50"},Is,512),[[U,e.status]]),t("button",{class:"btn btn-sm btn-outline-info mt-2 w-25",onClick:s[9]||(s[9]=o=>e.updateStatus(o))}," Update status ")]),t("div",Rs,[h(t("select",{"onUpdate:modelValue":s[10]||(s[10]=o=>e.mode=o),class:"form-select form-select-sm mx-2 mt-2 w-25"},[Vs,(d(!0),m(v,null,$(e.availableModes,o=>(d(),m("option",{key:o},r(o),1))),128))],512),[[U,e.mode]]),t("div",Us,r(e.mission.modes),1),t("button",{class:"btn btn-sm btn-outline-info mt-2 w-25",onClick:s[11]||(s[11]=o=>e.toggleMode(o))}," Toggle mode ")]),t("div",_s,[t("div",xs,[M(" Opening announced: "),t("span",{class:C(e.mission.openingAnnounced?"text-success":"text-danger")},r(e.mission.openingAnnounced),3)]),t("button",{class:"btn btn-sm btn-outline-info mt-2 ms-3 w-25",onClick:s[12]||(s[12]=o=>e.toggleOpeningAnnounced(o))}," Toggle openingAnnounced ")]),t("div",Bs,[t("div",js,[M(" Closing announced: "),t("span",{class:C(e.mission.closingAnnounced?"text-success":"text-danger")},r(e.mission.closingAnnounced),3)]),t("button",{class:"btn btn-sm btn-outline-info mt-2 ms-3 w-25",onClick:s[13]||(s[13]=o=>e.toggleClosingAnnounced(o))}," Toggle closingAnnounced ")]),Ts,Gs,t("div",Ss,[h(t("input",{"onUpdate:modelValue":s[14]||(s[14]=o=>e.userMaximumRankedBeatmapsCount=o),class:"form-control form-control-sm mx-2 w-50",type:"text",autocomplete:"off",placeholder:"maximum ranked maps allowed..."},null,512),[[f,e.userMaximumRankedBeatmapsCount]]),t("button",{class:"btn btn-sm btn-outline-info w-25",onClick:s[15]||(s[15]=o=>e.updateUserMaximumRankedBeatmapsCount(o))}," Update user max ranked maps count ")]),t("div",Os,[h(t("input",{"onUpdate:modelValue":s[16]||(s[16]=o=>e.userMaximumGlobalRank=o),class:"form-control form-control-sm mx-2 w-50",type:"number",autocomplete:"off",placeholder:"maximum global rank allowed..."},null,512),[[f,e.userMaximumGlobalRank]]),t("button",{class:"btn btn-sm btn-outline-info w-25",onClick:s[17]||(s[17]=o=>e.updateUserMaximumGlobalRank(o))}," Update user max global rank ")]),e.mission.associatedMaps&&e.mission.associatedMaps.length?(d(),w(b,{key:0,class:"my-4",mission:e.mission,"is-admin-page":!0},null,8,["mission"])):k("",!0)])]),_:1})}const Es=y(bs,[["render",Ps]]),Ns=A({components:{DataTable:N,SubmitMissionModal:ps,MissionInfo:Es},data(){return{selectedMissionId:""}},computed:{...x({missions:e=>e.missionsAdmin.missions}),selectedMission(){return this.missions.find(e=>e.id===this.selectedMissionId)}},beforeCreate(){this.$store.hasModule("missionsAdmin")||this.$store.registerModule("missionsAdmin",hs)},unmounted(){this.$store.hasModule("missionsAdmin")&&this.$store.unregisterModule("missionsAdmin")},async created(){const e=await this.$http.initialRequest("/admin/missions/load");this.$http.isError(e)||this.$store.commit("setMissions",e)},methods:{updateMission(e){const s=this.missions.findIndex(i=>i.id==e.id);s!==-1&&(this.missions[s]=e)},findTierImage(e){switch(e){case 1:return"/images/bronze.png";case 2:return"/images/silver.png";case 3:return"/images/gold.png";case 4:return"/images/platinum.png";default:return"/images/bronze.png"}}}});const Ws=e=>(G("data-v-21e655cd"),e=e(),S(),e),Ds={class:"container card card-body py-1"},Fs={class:"row"},Ls={class:"col"},qs=Ws(()=>t("button",{class:"btn btn-sm btn-info w-100 mb-1","data-bs-toggle":"modal","data-bs-target":"#submitMission"}," Add mission ",-1)),zs=["src"];function Hs(e,s,i,a,I,R){const b=c("data-table"),p=c("submit-mission-modal"),o=c("mission-info");return d(),m("div",null,[t("div",Ds,[t("div",Fs,[t("div",Ls,[qs,u(b,{data:e.missions,headers:["name","tier","status","announce"],"custom-data-target":"#editMission","onUpdate:selectedId":s[0]||(s[0]=l=>e.selectedMissionId=l)},{default:g(({obj:l})=>[t("td",null,r(l.name),1),t("td",null,[t("img",{src:e.findTierImage(l.tier),class:"table-mission-tier"},null,8,zs)]),t("td",null,r(l.status),1),t("td",null,[t("span",{class:C(l.openingAnnounced?"text-success":"text-danger")},"open",2),M("/"),t("span",{class:C(l.closingAnnounced?"text-success":"text-danger")},"close",2)])]),_:1},8,["data"])])])]),u(p),e.selectedMission?(d(),w(o,{key:0,mission:e.selectedMission,onUpdateMission:s[1]||(s[1]=l=>e.updateMission(l))},null,8,["mission"])):k("",!0)])}const Ys=y(Ns,[["render",Hs],["__scopeId","data-v-21e655cd"]]);export{Ys as default};

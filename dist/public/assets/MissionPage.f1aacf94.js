var s=Object.defineProperty,e=Object.defineProperties,t=Object.getOwnPropertyDescriptors,i=Object.getOwnPropertySymbols,n=Object.prototype.hasOwnProperty,o=Object.prototype.propertyIsEnumerable,a=(e,t,i)=>t in e?s(e,t,{enumerable:!0,configurable:!0,writable:!0,value:i}):e[t]=i,d=(s,e)=>{for(var t in e||(e={}))n.call(e,t)&&a(s,t,e[t]);if(i)for(var t of i(e))o.call(e,t)&&a(s,t,e[t]);return s};import{d as l,m,h as u,o as r,s as c,w as p,f as h,j as b,b as g,g as f,t as M,F as x,e as v,k as w,q as k,l as A,H as C,v as y,n as $,p as I,a as j}from"./vendor.b9ef672a.js";import{_ as R}from"./ModalDialog.4a9168b4.js";import{M as U,j as V}from"./index.b6199a6d.js";import{b as T,_ as B,c as O}from"./FormTextarea.5ea73115.js";import{_ as G}from"./DataTable.01cd035d.js";var P=l({name:"SubmitMissionModal",components:{ModalDialog:R,FormInput:T,FormSelect:B,FormTextarea:O},props:{isAdmin:Boolean},data:()=>({modes:U,featuredArtists:[],selectedArtists:[],selectedArtistId:"",selectedMode:"",selectedModes:[],tier:"",deadline:"",objective:"",name:"",winCondition:"",userMaximumRankedBeatmapsCount:null,userMaximumGlobalRank:null}),computed:d({},m(["loggedInUser"])),async created(){const s=await this.$http.executeGet("/featuredArtists");s&&(this.featuredArtists=s.sort(((s,e)=>s.label.toLowerCase()>e.label.toLowerCase()?1:e.label.toLowerCase()>s.label.toLowerCase()?-1:0)))},methods:{addArtist(){if(this.selectedArtistId.length){const s=this.featuredArtists.findIndex((s=>s.id==this.selectedArtistId)),e=this.featuredArtists[s],t={id:e.id,_id:e._id,label:e.label,osuId:e.osuId};this.selectedArtists.push(t)}},addMode(){this.selectedMode.length&&this.selectedModes.push(this.selectedMode)},removeArtist(s){const e=this.selectedArtists.findIndex((e=>e.id==s));this.selectedArtists.splice(e,1)},removeMode(s){const e=this.selectedModes.findIndex((e=>e==s));this.selectedModes.splice(e,1)},async addMission(s){if("number"==typeof this.name)return void this.$store.dispatch("updateToastMessages",{message:"Choose a name that doesn't start with a number",type:"danger"});const e=await this.$http.executePost("/admin/missions/create",{artists:this.selectedArtists,tier:this.tier,name:this.name,deadline:this.deadline,objective:this.objective,modes:this.selectedModes,winCondition:this.winCondition,userMaximumRankedBeatmapsCount:this.userMaximumRankedBeatmapsCount,userMaximumGlobalRank:this.userMaximumGlobalRank},s);this.$http.isError(e)||(this.$store.commit("addMission",e),this.$bs.hideModal("submitMission"))}}});const E={class:"container"},S=h("h5",null,"General",-1),_={class:"row"},D=h("option",{value:"-",disabled:""}," --- ",-1),W=["value"],q={class:"col-sm-1"},F={class:"small text-secondary"},N={key:0},L=["onClick"],z=[h("i",{class:"fas fa-minus"},null,-1)],H={class:"row"},J=h("option",{value:"-",disabled:""}," --- ",-1),K=["value"],Q={class:"col-sm-1"},X={class:"mt-2"},Y={class:"small text-secondary"},Z={key:0},ss=["onClick"],es=[h("i",{class:"fas fa-minus"},null,-1)],ts=h("hr",null,null,-1),is=h("h5",null,"User requirements",-1);P.render=function(s,e,t,i,n,o){const a=u("form-select"),d=u("form-input"),l=u("form-textarea"),m=u("modal-dialog");return r(),c(m,{id:"submitMission",title:"Submit mission"},{default:p((()=>[h("div",E,[S,h("div",_,[b(a,{modelValue:s.selectedArtistId,"onUpdate:modelValue":e[0]||(e[0]=e=>s.selectedArtistId=e),class:"col-sm-11",label:"Artist",placeholder:"Any artist (selected by default)"},{default:p((()=>[D,(r(!0),g(x,null,f(s.featuredArtists,(s=>(r(),g("option",{key:s.id,value:s.id},M(s.label),9,W)))),128))])),_:1},8,["modelValue"]),h("div",q,[h("button",{id:"artistButton",class:"btn btn-sm btn-outline-info",onClick:e[1]||(e[1]=e=>s.addArtist())}," Add ")])]),h("div",null,[h("ul",F,[s.selectedArtists.length?v("",!0):(r(),g("li",N," Any artist (selected by default) ")),(r(!0),g(x,null,f(s.selectedArtists,(e=>(r(),g("li",{key:e.osuId},[w(M(e.label)+" ",1),h("a",{href:"#",class:"text-danger",onClick:k((t=>s.removeArtist(e.id)),["prevent"])},z,8,L)])))),128))])]),h("div",H,[b(a,{modelValue:s.selectedMode,"onUpdate:modelValue":e[2]||(e[2]=e=>s.selectedMode=e),class:"col-sm-11",label:"Mode",placeholder:"Any mode (selected by default)"},{default:p((()=>[J,(r(!0),g(x,null,f(s.modes,(s=>(r(),g("option",{key:s,value:s},M(s),9,K)))),128))])),_:1},8,["modelValue"]),h("div",Q,[h("button",{id:"artistButton",class:"btn btn-sm btn-outline-info",onClick:e[3]||(e[3]=e=>s.addMode())}," Add ")])]),h("div",X,[h("ul",Y,[s.selectedModes.length?v("",!0):(r(),g("li",Z," Any mode (selected by default) ")),(r(!0),g(x,null,f(s.selectedModes,(e=>(r(),g("li",{key:e},[w(M(e)+" ",1),h("a",{href:"#",class:"text-danger",onClick:k((t=>s.removeMode(e)),["prevent"])},es,8,ss)])))),128))])]),b(d,{modelValue:s.tier,"onUpdate:modelValue":e[4]||(e[4]=e=>s.tier=e),modelModifiers:{number:!0},label:"Tier",type:"number"},null,8,["modelValue"]),b(d,{modelValue:s.name,"onUpdate:modelValue":e[5]||(e[5]=e=>s.name=e),modelModifiers:{number:!0},label:"Name",type:"text"},null,8,["modelValue"]),b(l,{modelValue:s.objective,"onUpdate:modelValue":e[6]||(e[6]=e=>s.objective=e),label:"Objective"},null,8,["modelValue"]),b(l,{modelValue:s.winCondition,"onUpdate:modelValue":e[7]||(e[7]=e=>s.winCondition=e),label:"Win condition"},null,8,["modelValue"]),b(d,{modelValue:s.deadline,"onUpdate:modelValue":e[8]||(e[8]=e=>s.deadline=e),label:"Deadline",type:"date"},null,8,["modelValue"]),ts,is,b(d,{modelValue:s.userMaximumRankedBeatmapsCount,"onUpdate:modelValue":e[9]||(e[9]=e=>s.userMaximumRankedBeatmapsCount=e),modelModifiers:{number:!0},label:"Max ranked maps",type:"number"},null,8,["modelValue"]),b(d,{modelValue:s.userMaximumGlobalRank,"onUpdate:modelValue":e[10]||(e[10]=e=>s.userMaximumGlobalRank=e),modelModifiers:{number:!0},label:"Max global rank",type:"number"},null,8,["modelValue"]),h("button",{class:"btn btn-outline-success w-100",onClick:e[11]||(e[11]=e=>s.addMission(e))}," Add mission ")])])),_:1})};var ns={state:{missions:[]},mutations:{setMissions(s,e){s.missions=e},updateMission(s,e){const t=s.missions.findIndex((s=>s.id===e.id));-1!==t&&(s.missions[t]=e)},addMission(s,e){s.missions.push(e)},updateName(s,e){const t=s.missions.find((s=>s.id==e.missionId));t&&(t.name=e.name)},updateTier(s,e){const t=s.missions.find((s=>s.id==e.missionId));t&&(t.tier=e.tier)},updateObjective(s,e){const t=s.missions.find((s=>s.id==e.missionId));t&&(t.objective=e.objective)},updateStatus(s,e){const t=s.missions.find((s=>s.id==e.missionId));t&&(t.status=e.status)},updateWinCondition(s,e){const t=s.missions.find((s=>s.id==e.missionId));t&&(t.winCondition=e.winCondition)},updateOpeningAnnounced(s,e){const t=s.missions.find((s=>s.id==e.missionId));t&&(t.openingAnnounced=e.openingAnnounced)},updateClosingAnnounced(s,e){const t=s.missions.find((s=>s.id==e.missionId));t&&(t.closingAnnounced=e.closingAnnounced)},updateWinningBeatmaps(s,e){const t=s.missions.find((s=>s.id==e.missionId));t&&(t.winningBeatmaps=e.winningBeatmaps)},updateAssociatedMaps(s,e){const t=s.missions.find((s=>s.id==e.missionId));t&&(t.associatedMaps=e.associatedMaps)},updateModes(s,e){const t=s.missions.find((s=>s.id==e.missionId));t&&(t.modes=e.modes)}}},os=l({name:"MissionInfo",components:{AssociatedBeatmaps:V,ModalDialog:R},props:{mission:{type:Object,required:!0}},data(){return{availableModes:U,name:this.mission.name,tier:this.mission.tier,objective:this.mission.objective,winCondition:this.mission.winCondition,status:this.mission.status,mode:"",userMaximumRankedBeatmapsCount:this.mission.userMaximumRankedBeatmapsCount,userMaximumGlobalRank:this.mission.userMaximumGlobalRank}},watch:{mission(){this.name=this.mission.name,this.tier=this.mission.tier,this.objective=this.mission.objective,this.winCondition=this.mission.winCondition,this.status=this.mission.status,this.mode="",this.userMaximumRankedBeatmapsCount=this.mission.userMaximumRankedBeatmapsCount,this.userMaximumGlobalRank=this.mission.userMaximumGlobalRank}},methods:{async updateName(s){const e=await this.$http.executePost(`/admin/missions/${this.mission.id}/rename`,{name:this.name},s);this.$http.isError(e)||(this.$store.dispatch("updateToastMessages",{message:"renamed mission",type:"info"}),this.$store.commit("updateName",{missionId:this.mission.id,name:e}))},async updateTier(s){const e=await this.$http.executePost(`/admin/missions/${this.mission.id}/updateTier`,{tier:this.tier},s);this.$http.isError(e)||(this.$store.dispatch("updateToastMessages",{message:"updated tier",type:"info"}),this.$store.commit("updateTier",{missionId:this.mission.id,tier:e}))},async updateObjective(s){const e=await this.$http.executePost(`/admin/missions/${this.mission.id}/updateObjective/`,{objective:this.objective},s);this.$http.isError(e)||(this.$store.dispatch("updateToastMessages",{message:"updated objective",type:"info"}),this.$store.commit("updateObjective",{missionId:this.mission.id,objective:e}))},async updateStatus(s){const e=await this.$http.executePost(`/admin/missions/${this.mission.id}/updateStatus/`,{status:this.status},s);this.$http.isError(e)||(this.$store.dispatch("updateToastMessages",{message:"updated status",type:"info"}),this.$store.commit("updateStatus",{missionId:this.mission.id,status:e}))},async updateUserMaximumRankedBeatmapsCount(s){const e=await this.$http.executePost(`/admin/missions/${this.mission.id}/updateUserMaximumRankedBeatmapsCount/`,{userMaximumRankedBeatmapsCount:this.userMaximumRankedBeatmapsCount},s);this.$http.isError(e)||(this.$store.dispatch("updateToastMessages",{message:"updated user max ranked maps count for mission",type:"info"}),this.$store.commit("updateUserMaximumRankedBeatmapsCount",{missionId:this.mission.id,userMaximumRankedBeatmapsCount:e}))},async updateUserMaximumGlobalRank(s){const e=await this.$http.executePost(`/admin/missions/${this.mission.id}/updateUserMaximumGlobalRank/`,{userMaximumGlobalRank:this.userMaximumGlobalRank},s);this.$http.isError(e)||(this.$store.dispatch("updateToastMessages",{message:"updated user max global rank for mission",type:"info"}),this.$store.commit("updateUserMaximumGlobalRank",{missionId:this.mission.id,userMaximumGlobalRank:e}))},async updateWinCondition(s){const e=await this.$http.executePost(`/admin/missions/${this.mission.id}/updateWinCondition/`,{winCondition:this.winCondition},s);this.$http.isError(e)||(this.$store.dispatch("updateToastMessages",{message:"updated win condition",type:"info"}),this.$store.commit("updateWinCondition",{missionId:this.mission.id,winCondition:e}))},async toggleOpeningAnnounced(s){const e=await this.$http.executePost(`/admin/missions/${this.mission.id}/toggleOpeningAnnounced/`,{openingAnnounced:!this.mission.openingAnnounced},s);this.$http.isError(e)||(this.$store.dispatch("updateToastMessages",{message:"toggled openingAnnounced",type:"info"}),this.$store.commit("updateOpeningAnnounced",{missionId:this.mission.id,openingAnnounced:e}))},async toggleClosingAnnounced(s){const e=await this.$http.executePost(`/admin/missions/${this.mission.id}/toggleClosingAnnounced/`,{closingAnnounced:!this.mission.closingAnnounced},s);this.$http.isError(e)||(this.$store.dispatch("updateToastMessages",{message:"toggled closingAnnounced",type:"info"}),this.$store.commit("updateClosingAnnounced",{missionId:this.mission.id,closingAnnounced:e}))},async toggleMode(s){const e=await this.$http.executePost(`/admin/missions/${this.mission.id}/toggleMode/`,{mode:this.mode},s);this.$http.isError(e)||(this.$store.dispatch("updateToastMessages",{message:"toggled mode",type:"info"}),this.$store.commit("updateModes",{missionId:this.mission.id,modes:e}))}}});const as={class:"container"},ds={class:"row mt-2"},ls={class:"row mt-2"},ms={class:"row mt-2"},us={class:"row mt-2"},rs={class:"row"},cs=[h("option",{value:"",disabled:""}," Select a status ",-1),h("option",{value:"hidden"}," Hidden ",-1),h("option",{value:"open"}," Open ",-1),h("option",{value:"closed"}," Closed ",-1)],ps={class:"row"},hs=h("option",{value:"",disabled:""}," Select a mode ",-1),bs={class:"w-25 mt-2"},gs={class:"row"},fs={class:"col-sm-6 mt-2"},Ms=w(" Opening announced: "),xs={class:"row"},vs={class:"col-sm-6 mt-2"},ws=w(" Closing announced: "),ks=h("hr",null,null,-1),As=h("h5",null,"User requirements",-1),Cs={class:"row"},ys={class:"row mt-2"};os.render=function(s,e,t,i,n,o){const a=u("associated-beatmaps"),d=u("modal-dialog");return r(),c(d,{id:"editMission"},{header:p((()=>[w(M(s.mission.name),1)])),default:p((()=>[h("div",as,[h("div",ds,[A(h("input",{"onUpdate:modelValue":e[0]||(e[0]=e=>s.name=e),class:"form-control form-control-sm mx-2 w-50",type:"text",autocomplete:"off",placeholder:"mission name..."},null,512),[[C,s.name]]),h("button",{class:"btn btn-sm btn-outline-info w-25",onClick:e[1]||(e[1]=e=>s.updateName(e))}," Rename mission ")]),h("div",ls,[A(h("input",{"onUpdate:modelValue":e[2]||(e[2]=e=>s.tier=e),class:"form-control form-control-sm mx-2 w-50",type:"text",autocomplete:"off",placeholder:"tier..."},null,512),[[C,s.tier]]),h("button",{class:"btn btn-sm btn-outline-info w-25",onClick:e[3]||(e[3]=e=>s.updateTier(e))}," Update tier ")]),h("div",ms,[A(h("textarea",{"onUpdate:modelValue":e[4]||(e[4]=e=>s.objective=e),class:"form-control form-control-sm mx-2 mt-2 w-50",type:"text",autocomplete:"off",placeholder:"mission objective..."},null,512),[[C,s.objective]]),h("button",{class:"btn btn-sm btn-outline-info w-25 mt-2",onClick:e[5]||(e[5]=e=>s.updateObjective(e))}," Update objective ")]),h("div",us,[A(h("textarea",{"onUpdate:modelValue":e[6]||(e[6]=e=>s.winCondition=e),class:"form-control form-control-sm mx-2 mt-2 w-50",type:"text",autocomplete:"off",placeholder:"mission win condition..."},null,512),[[C,s.winCondition]]),h("button",{class:"btn btn-sm btn-outline-info w-25 mt-2",onClick:e[7]||(e[7]=e=>s.updateWinCondition(e))}," Update win condition ")]),h("div",rs,[A(h("select",{"onUpdate:modelValue":e[8]||(e[8]=e=>s.status=e),class:"form-select form-select-sm mx-2 mt-2 w-50"},cs,512),[[y,s.status]]),h("button",{class:"btn btn-sm btn-outline-info mt-2 w-25",onClick:e[9]||(e[9]=e=>s.updateStatus(e))}," Update status ")]),h("div",ps,[A(h("select",{"onUpdate:modelValue":e[10]||(e[10]=e=>s.mode=e),class:"form-select form-select-sm mx-2 mt-2 w-25"},[hs,(r(!0),g(x,null,f(s.availableModes,(s=>(r(),g("option",{key:s},M(s),1)))),128))],512),[[y,s.mode]]),h("div",bs,M(s.mission.modes),1),h("button",{class:"btn btn-sm btn-outline-info mt-2 w-25",onClick:e[11]||(e[11]=e=>s.toggleMode(e))}," Toggle mode ")]),h("div",gs,[h("div",fs,[Ms,h("span",{class:$(s.mission.openingAnnounced?"text-success":"text-danger")},M(s.mission.openingAnnounced),3)]),h("button",{class:"btn btn-sm btn-outline-info mt-2 ms-3 w-25",onClick:e[12]||(e[12]=e=>s.toggleOpeningAnnounced(e))}," Toggle openingAnnounced ")]),h("div",xs,[h("div",vs,[ws,h("span",{class:$(s.mission.closingAnnounced?"text-success":"text-danger")},M(s.mission.closingAnnounced),3)]),h("button",{class:"btn btn-sm btn-outline-info mt-2 ms-3 w-25",onClick:e[13]||(e[13]=e=>s.toggleClosingAnnounced(e))}," Toggle closingAnnounced ")]),ks,As,h("div",Cs,[A(h("input",{"onUpdate:modelValue":e[14]||(e[14]=e=>s.userMaximumRankedBeatmapsCount=e),class:"form-control form-control-sm mx-2 w-50",type:"text",autocomplete:"off",placeholder:"maximum ranked maps allowed..."},null,512),[[C,s.userMaximumRankedBeatmapsCount]]),h("button",{class:"btn btn-sm btn-outline-info w-25",onClick:e[15]||(e[15]=e=>s.updateUserMaximumRankedBeatmapsCount(e))}," Update user max ranked maps count ")]),h("div",ys,[A(h("input",{"onUpdate:modelValue":e[16]||(e[16]=e=>s.userMaximumGlobalRank=e),class:"form-control form-control-sm mx-2 w-50",type:"number",autocomplete:"off",placeholder:"maximum global rank allowed..."},null,512),[[C,s.userMaximumGlobalRank]]),h("button",{class:"btn btn-sm btn-outline-info w-25",onClick:e[17]||(e[17]=e=>s.updateUserMaximumGlobalRank(e))}," Update user max global rank ")]),s.mission.associatedMaps&&s.mission.associatedMaps.length?(r(),c(a,{key:0,class:"my-4",mission:s.mission,"is-admin-page":!0},null,8,["mission"])):v("",!0)])])),_:1})};var $s,Is,js=l({components:{DataTable:G,SubmitMissionModal:P,MissionInfo:os},data:()=>({selectedMissionId:""}),computed:($s=d({},m({missions:s=>s.missionsAdmin.missions})),Is={selectedMission(){return this.missions.find((s=>s.id===this.selectedMissionId))}},e($s,t(Is))),beforeCreate(){this.$store.hasModule("missionsAdmin")||this.$store.registerModule("missionsAdmin",ns)},unmounted(){this.$store.hasModule("missionsAdmin")&&this.$store.unregisterModule("missionsAdmin")},async created(){const s=await this.$http.initialRequest("/admin/missions/load");this.$http.isError(s)||this.$store.commit("setMissions",s)},methods:{updateMission(s){const e=this.missions.findIndex((e=>e.id==s.id));-1!==e&&(this.missions[e]=s)},findTierImage(s){switch(s){case 1:return"/images/bronze.png";case 2:return"/images/silver.png";case 3:return"/images/gold.png";case 4:return"/images/platinum.png";default:return"/images/bronze.png"}}}});I("data-v-1545d17a");const Rs={class:"container card card-body py-1"},Us={class:"row"},Vs={class:"col"},Ts=h("button",{class:"btn btn-sm btn-info w-100 mb-1","data-bs-toggle":"modal","data-bs-target":"#submitMission"}," Add mission ",-1),Bs=["src"],Os=w("/");j(),js.render=function(s,e,t,i,n,o){const a=u("data-table"),d=u("submit-mission-modal"),l=u("mission-info");return r(),g("div",null,[h("div",Rs,[h("div",Us,[h("div",Vs,[Ts,b(a,{data:s.missions,headers:["name","tier","status","announce"],"custom-data-target":"#editMission","onUpdate:selectedId":e[0]||(e[0]=e=>s.selectedMissionId=e)},{default:p((({obj:e})=>[h("td",null,M(e.name),1),h("td",null,[h("img",{src:s.findTierImage(e.tier),class:"table-mission-tier"},null,8,Bs)]),h("td",null,M(e.status),1),h("td",null,[h("span",{class:$(e.openingAnnounced?"text-success":"text-danger")},"open",2),Os,h("span",{class:$(e.closingAnnounced?"text-success":"text-danger")},"close",2)])])),_:1},8,["data"])])])]),b(d),s.selectedMission?(r(),c(l,{key:0,mission:s.selectedMission,onUpdateMission:e[1]||(e[1]=e=>s.updateMission(e))},null,8,["mission"])):v("",!0)])},js.__scopeId="data-v-1545d17a";export{js as default};

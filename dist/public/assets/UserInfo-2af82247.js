import{M as h}from"./ModalDialog-ad61f3a5.js";import{C as g}from"./CopyPaste-6689f5ae.js";import{d as m,_ as f,o as b,c as M,w as a,i as u,a as t,b as r,v as $,f as d,t as i,y as w,j as I,p as n}from"./index-1dce2399.js";const y=m({name:"UserInfo",components:{ModalDialog:h,CopyPaste:g},props:{user:{type:Object,default:null},currentGroup:{type:String,default:""}},data(){return{badge:0,queuedBadge:0,discordId:"",group:""}},watch:{user(){this.badge=this.user.badge||0,this.queuedBadge=this.user.queuedBadge||0,this.discordId=this.user.discordId||"",this.group=this.user.group||""}},created(){this.user&&(this.badge=this.user.badge||0,this.queuedBadge=this.user.badge||0,this.discordId=this.user.discordId||"",this.group=this.user.group||"")},methods:{async updateGroup(e){const s=await this.$http.executePost(`/admin/users/${this.user.id}/updateGroup`,{group:this.group},e);s&&(this.$store.dispatch("updateToastMessages",{message:`set group to ${s}`,type:"info"}),this.$store.commit("updateGroup",{userId:this.user.id,group:s}))},async updateQueuedBadge(e){const s=await this.$http.executePost(`/admin/users/${this.user.id}/updateQueuedBadge`,{badge:this.queuedBadge},e);s&&(this.$store.dispatch("updateToastMessages",{message:`set queued badge to ${s}`,type:"info"}),this.$store.commit("updateQueuedBadge",{userId:this.user.id,badge:s}))},async updateBadge(e){const s=await this.$http.executePost(`/admin/users/${this.user.id}/updateBadge`,{badge:this.badge},e);s&&(this.$store.dispatch("updateToastMessages",{message:`set actual badge to ${s}`,type:"info"}),this.$store.commit("updateBadge",{userId:this.user.id,badge:s}))},async updateDiscordId(e){const s=await this.$http.executePost(`/admin/users/${this.user.id}/updateDiscordId`,{discordId:this.discordId},e);s&&(this.$store.dispatch("updateToastMessages",{message:`set discord ID to ${s}`,type:"info"}),this.$store.commit("updateDiscordId",{userId:this.user.id,discordId:s}))},async calculateUserPoints(e){await this.$http.executePost(`/admin/users/${this.user.id}/calculateUserPoints`,{},e)&&this.$store.dispatch("updateToastMessages",{message:"calculated points",type:"info"})},async toggleIsShowcaseMapper(e){const s=await this.$http.executePost(`/admin/users/${this.user.id}/toggleIsShowcaseMapper`,{isShowcaseMapper:!this.user.isShowcaseMapper},e);s&&(this.$store.dispatch("updateToastMessages",{message:`set isShowcaseMapper ${s.isShowcaseMapper}`,type:"info"}),this.$store.commit("updateIsShowcaseMapper",{userId:this.user.id,isShowcaseMapper:s.isShowcaseMapper}))},async toggleIsMentorshipAdmin(e){const s=await this.$http.executePost(`/admin/users/${this.user.id}/toggleIsMentorshipAdmin`,{isMentorshipAdmin:!this.user.isMentorshipAdmin},e);s&&(this.$store.dispatch("updateToastMessages",{message:`set isMentorshipAdmin ${s.isMentorshipAdmin}`,type:"info"}),this.$store.commit("updateIsMentorshipAdmin",{userId:this.user.id,isMentorshipAdmin:s.isMentorshipAdmin}))},async toggleIsWorldCupHelper(e){const s=await this.$http.executePost(`/admin/users/${this.user.id}/toggleIsWorldCupHelper`,{isWorldCupHelper:!this.user.isWorldCupHelper},e);s&&(this.$store.dispatch("updateToastMessages",{message:`set isWorldCupHelper ${s.isWorldCupHelper}`,type:"info"}),this.$store.commit("updateIsWorldCupHelper",{userId:this.user.id,isWorldCupHelper:s.isWorldCupHelper}))},async toggleHasMerchAccess(e){const s=await this.$http.executePost(`/admin/users/${this.user.id}/toggleHasMerchAccess`,{hasMerchAccess:!this.user.hasMerchAccess},e);s&&(this.$store.dispatch("updateToastMessages",{message:`set hasMerchAccess ${s.hasMerchAccess}`,type:"info"}),this.$store.commit("updateHasMerchAccess",{userId:this.user.id,hasMerchAccess:s.hasMerchAccess}))},async toggleHasSpecificMerchOrder(e){const s=await this.$http.executePost(`/admin/users/${this.user.id}/toggleHasSpecificMerchOrder`,{hasSpecificMerchOrder:!this.user.hasSpecificMerchOrder},e);s&&(this.$store.dispatch("updateToastMessages",{message:`set hasSpecificMerchOrder ${s.hasSpecificMerchOrder}`,type:"info"}),this.$store.commit("updateHasSpecificMerchOrder",{userId:this.user.id,hasSpecificMerchOrder:s.hasSpecificMerchOrder}))}}}),S={class:"container"},C={class:"row"},A=t("option",{value:"user"}," User ",-1),H=t("option",{value:"admin"}," Admin ",-1),B=t("option",{value:"secret"}," Secret ",-1),k=[A,H,B],D={class:"row"},v={class:"row"},P={class:"row"},O={class:"ms-2 mb-2"},U=t("i",{class:"fas fa-angle-down"},null,-1),T={id:"debug",class:"collapse"};function W(e,s,q,V,G,E){const p=n("user-link"),l=n("copy-paste"),c=n("modal-dialog");return b(),M(c,{id:`editUser${e.currentGroup}`,"header-class":e.user?"bg-rank-"+e.user.rank:"",loaded:!!e.user},{header:a(()=>[u(p,{user:e.user},null,8,["user"])]),default:a(()=>[t("div",S,[t("p",C,[r(t("select",{"onUpdate:modelValue":s[0]||(s[0]=o=>e.group=o),class:"form-select form-select-sm w-50 mx-2"},k,512),[[$,e.group]]),t("button",{class:"btn btn-sm btn-outline-info w-25",onClick:s[1]||(s[1]=o=>e.updateGroup(o))}," Save group ")]),t("p",D,[r(t("input",{"onUpdate:modelValue":s[2]||(s[2]=o=>e.queuedBadge=o),class:"form-control form-control-sm mx-2 w-50",type:"text",autocomplete:"off"},null,512),[[d,e.queuedBadge]]),t("button",{class:"btn btn-sm btn-outline-info w-25",onClick:s[3]||(s[3]=o=>e.updateQueuedBadge(o))}," Queue badge ")]),t("p",v,[r(t("input",{"onUpdate:modelValue":s[4]||(s[4]=o=>e.badge=o),class:"form-control form-control-sm mx-2 w-50",type:"text",autocomplete:"off"},null,512),[[d,e.badge]]),t("button",{class:"btn btn-sm btn-outline-info w-25",onClick:s[5]||(s[5]=o=>e.updateBadge(o))}," Update actual badge ")]),t("p",P,[r(t("input",{"onUpdate:modelValue":s[6]||(s[6]=o=>e.discordId=o),class:"form-control form-control-sm mx-2 w-50",type:"text",autocomplete:"off"},null,512),[[d,e.discordId]]),t("button",{class:"btn btn-sm btn-outline-info w-25",onClick:s[7]||(s[7]=o=>e.updateDiscordId(o))}," Save Discord ID ")]),t("p",null,[t("button",{class:"btn btn-sm btn-outline-info w-100",onClick:s[8]||(s[8]=o=>e.calculateUserPoints(o))}," Calculate user points ")]),t("p",null,[t("button",{class:"btn btn-sm btn-outline-info w-100",onClick:s[9]||(s[9]=o=>e.toggleIsShowcaseMapper(o))},i(e.user.isShowcaseMapper?"Disable":"Enable")+" isShowcaseMapper ",1)]),t("p",null,[t("button",{class:"btn btn-sm btn-outline-info w-100",onClick:s[10]||(s[10]=o=>e.toggleIsMentorshipAdmin(o))},i(e.user.isMentorshipAdmin?"Disable":"Enable")+" isMentorshipAdmin ",1)]),t("p",null,[t("button",{class:"btn btn-sm btn-outline-info w-100",onClick:s[11]||(s[11]=o=>e.toggleIsWorldCupHelper(o))},i(e.user.isWorldCupHelper?"Disable":"Enable")+" isWorldCupHelper ",1)]),t("p",null,[t("button",{class:"btn btn-sm btn-outline-info w-100",onClick:s[12]||(s[12]=o=>e.toggleHasMerchAccess(o))},i(e.user.hasMerchAccess?"Disable":"Enable")+" hasMerchAccess ",1)]),t("p",null,[t("button",{class:"btn btn-sm btn-outline-info w-100",onClick:s[13]||(s[13]=o=>e.toggleHasSpecificMerchOrder(o))},i(e.user.hasSpecificMerchOrder?"Disable":"Enable")+" hasSpecificMerchOrder ",1)])]),t("div",O,[t("a",{href:"#debug","data-bs-toggle":"collapse",onClick:s[14]||(s[14]=w(()=>{},["prevent"]))},[I(" Debug "),U])]),t("div",T,[u(l,null,{default:a(()=>[t("pre",null,i(e.user),1)]),_:1})])]),_:1},8,["id","header-class","loaded"])}const z=f(y,[["render",W]]);export{z as U};
